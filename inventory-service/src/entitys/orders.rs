//! SeaORM Entity. Generated by sea-orm-codegen 0.5.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "orders", schema_name = "inventory")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub order_number: i32,
    pub customer_id: i32,
    pub payment_id: i32,
    pub product_list: Json,
    pub order_date: DateTime,
    pub magma_info: Option<Json>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::customers::Entity",
        from = "Column::CustomerId",
        to = "super::customers::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Customers,
    #[sea_orm(
        belongs_to = "super::payments::Entity",
        from = "Column::PaymentId",
        to = "super::payments::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Payments,
}

impl Related<super::customers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Customers.def()
    }
}

impl Related<super::payments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Payments.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
