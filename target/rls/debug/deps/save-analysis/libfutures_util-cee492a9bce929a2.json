{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19","program":"/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=cee492a9bce929a2","-C","extra-filename=-cee492a9bce929a2","--out-dir","/home/carter/Documents/magma/target/rls/debug/deps","-L","dependency=/home/carter/Documents/magma/target/rls/debug/deps","--extern","futures_core=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_core-47d67b3da90b0dab.rmeta","--extern","futures_io=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_io-a850922416ab7ace.rmeta","--extern","futures_sink=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_sink-2f51accff500bcdd.rmeta","--extern","futures_task=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_task-0a2cb54f42222bff.rmeta","--extern","memchr=/home/carter/Documents/magma/target/rls/debug/deps/libmemchr-0d7620fe5e0bf798.rmeta","--extern","pin_project_lite=/home/carter/Documents/magma/target/rls/debug/deps/libpin_project_lite-b0bfa5eb334f8d78.rmeta","--extern","pin_utils=/home/carter/Documents/magma/target/rls/debug/deps/libpin_utils-8c43764b55bf2ff7.rmeta","--extern","slab=/home/carter/Documents/magma/target/rls/debug/deps/libslab-67525e679724f5f0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/carter/Documents/magma/target/rls/debug/deps/libfutures_util-cee492a9bce929a2.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[4188540048087790575,0]},"crate_root":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src","external_crates":[{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[6467786051959710749,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[3673188743213573932,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[12674779394054587089,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","num":23,"id":{"name":"futures_sink","disambiguator":[8307411743786656110,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[17627374544393263653,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","num":25,"id":{"name":"slab","disambiguator":[4028794699268519618,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","num":26,"id":{"name":"futures_io","disambiguator":[7547705343272351995,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","num":27,"id":{"name":"memchr","disambiguator":[5547902202154193270,0]}}],"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1033,"byte_end":1034,"line_start":37,"line_end":37,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1142,"byte_end":1143,"line_start":43,"line_end":43,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43362},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1181,"byte_end":1187,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43364},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43365},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43366},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43367},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43480},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":46,"line_end":46,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43494},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43495},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43491},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":2,"index":43492},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":82}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1332,"byte_end":1333,"line_start":51,"line_end":51,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":2,"index":12611},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16141,"byte_end":16147,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16207,"byte_end":16216,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16218,"byte_end":16232,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16266,"byte_end":16277,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16279,"byte_end":16288,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16314,"byte_end":16323,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16325,"byte_end":16339,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16341,"byte_end":16356,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10594},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22154,"byte_end":22165,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":143}},{"kind":"Use","ref_id":{"krate":0,"index":10089},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16471,"byte_end":16478,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":9998},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16480,"byte_end":16484,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16486,"byte_end":16495,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10440},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16497,"byte_end":16504,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10255},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16506,"byte_end":16516,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10195},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16518,"byte_end":16521,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10305},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16523,"byte_end":16530,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10500},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16532,"byte_end":16542,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10367},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16544,"byte_end":16548,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10548},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16550,"byte_end":16559,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10137},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16655,"byte_end":16668,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10594},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16717,"byte_end":16728,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16928,"byte_end":16934,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":457},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16936,"byte_end":16946,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11014},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16998,"byte_end":17005,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11161},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17007,"byte_end":17014,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11344},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17016,"byte_end":17026,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11283},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17028,"byte_end":17037,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10630},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17039,"byte_end":17049,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11466},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17051,"byte_end":17057,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11405},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17059,"byte_end":17064,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11528},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17066,"byte_end":17077,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11222},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17079,"byte_end":17085,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11088},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17091,"byte_end":17097,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10763},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17099,"byte_end":17109,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10884},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17111,"byte_end":17127,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17129,"byte_end":17141,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11601},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17143,"byte_end":17155,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":10942},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17260,"byte_end":17271,"line_start":49,"line_end":49,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":940},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17327,"byte_end":17331,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11659},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17333,"byte_end":17337,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17378,"byte_end":17385,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11665},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17387,"byte_end":17394,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17441,"byte_end":17451,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11671},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17453,"byte_end":17462,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17517,"byte_end":17531,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11684},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17533,"byte_end":17545,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11697},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17583,"byte_end":17595,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1167},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17635,"byte_end":17642,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17644,"byte_end":17650,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17705,"byte_end":17719,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17721,"byte_end":17734,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17771,"byte_end":17774,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1270},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17776,"byte_end":17778,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17780,"byte_end":17785,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11775},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17787,"byte_end":17792,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1324},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17827,"byte_end":17831,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1327},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17833,"byte_end":17838,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17840,"byte_end":17845,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17847,"byte_end":17852,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11877},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17854,"byte_end":17858,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11922},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17860,"byte_end":17865,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":11979},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17867,"byte_end":17872,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12048},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17874,"byte_end":17879,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17974,"byte_end":17982,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1417},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":17984,"byte_end":17991,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1479},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18030,"byte_end":18036,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12129},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18038,"byte_end":18044,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18143,"byte_end":18153,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12137},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18155,"byte_end":18164,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1585},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18212,"byte_end":18220,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1588},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18222,"byte_end":18231,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1592},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18233,"byte_end":18242,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1597},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18244,"byte_end":18253,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12213},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18255,"byte_end":18262,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12258},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18264,"byte_end":18272,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12315},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18274,"byte_end":18282,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12384},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18284,"byte_end":18292,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18397,"byte_end":18409,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1680},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18411,"byte_end":18421,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18468,"byte_end":18478,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12465},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18480,"byte_end":18489,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1782},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18586,"byte_end":18595,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12473},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18597,"byte_end":18605,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":12479},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18643,"byte_end":18649,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":17903},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18816,"byte_end":18827,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":17899},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18829,"byte_end":18846,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":17856},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18848,"byte_end":18857,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":17914},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18859,"byte_end":18866,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":17915},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18859,"byte_end":18866,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":1951},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":18949,"byte_end":18958,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":2,"index":12611},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151380,"byte_end":151389,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151391,"byte_end":151405,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151439,"byte_end":151450,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151452,"byte_end":151458,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151460,"byte_end":151469,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14393},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160163,"byte_end":160169,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":2003}},{"kind":"Use","ref_id":{"krate":0,"index":14445},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":160346,"byte_end":160357,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":2003}},{"kind":"Use","ref_id":{"krate":0,"index":14745},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161855,"byte_end":161866,"line_start":224,"line_end":224,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":2003}},{"kind":"Use","ref_id":{"krate":0,"index":12496},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151585,"byte_end":151590,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":12545},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151592,"byte_end":151599,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":12656},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151601,"byte_end":151607,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":12733},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151609,"byte_end":151614,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":12773},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151616,"byte_end":151625,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":12821},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151627,"byte_end":151633,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":12890},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151635,"byte_end":151644,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13635},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151646,"byte_end":151653,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13014},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151655,"byte_end":151662,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13075},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151664,"byte_end":151668,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13389},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151670,"byte_end":151677,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13446},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151683,"byte_end":151687,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13503},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151689,"byte_end":151696,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13578},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151698,"byte_end":151701,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13724},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151703,"byte_end":151707,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13870},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151709,"byte_end":151715,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13919},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151717,"byte_end":151725,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13788},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151727,"byte_end":151731,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13829},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151733,"byte_end":151740,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13740},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151742,"byte_end":151750,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14497},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151752,"byte_end":151756,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13732},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151758,"byte_end":151772,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13968},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151778,"byte_end":151782,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14016},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151784,"byte_end":151793,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":4146},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151795,"byte_end":151804,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13494},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151806,"byte_end":151818,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14089},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151820,"byte_end":151824,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14210},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151826,"byte_end":151835,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14137},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151837,"byte_end":151846,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14271},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151848,"byte_end":151852,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":12594},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151854,"byte_end":151859,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14336},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151861,"byte_end":151864,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14745},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151916,"byte_end":151927,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14393},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151978,"byte_end":151984,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14445},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152035,"byte_end":152046,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":13331},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152144,"byte_end":152151,"line_start":37,"line_end":37,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14570},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152238,"byte_end":152253,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14619},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152255,"byte_end":152263,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14668},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152265,"byte_end":152282,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":4067},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152443,"byte_end":152455,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":4068},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152443,"byte_end":152455,"line_start":47,"line_end":47,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152457,"byte_end":152466,"line_start":47,"line_end":47,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14729},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152468,"byte_end":152479,"line_start":47,"line_end":47,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16199},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316622,"byte_end":316635,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":4366}},{"kind":"Use","ref_id":{"krate":0,"index":5148},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152531,"byte_end":152541,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14789},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152543,"byte_end":152550,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14857},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152552,"byte_end":152559,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15013},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152561,"byte_end":152571,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":14935},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152573,"byte_end":152582,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15088},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152584,"byte_end":152594,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15213},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152596,"byte_end":152602,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15135},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152604,"byte_end":152609,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15288},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152611,"byte_end":152617,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15600},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152623,"byte_end":152633,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15649},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152635,"byte_end":152644,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15418},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152646,"byte_end":152655,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15487},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152657,"byte_end":152669,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15552},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152671,"byte_end":152681,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15762},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152683,"byte_end":152690,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15361},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152692,"byte_end":152702,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15353},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152704,"byte_end":152711,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15888},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152717,"byte_end":152729,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5559},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152731,"byte_end":152743,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15961},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152745,"byte_end":152757,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15831},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152759,"byte_end":152768,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16199},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152893,"byte_end":152906,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16034},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":152997,"byte_end":153015,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16086},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153017,"byte_end":153028,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16138},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153030,"byte_end":153050,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15689},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153107,"byte_end":153116,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15741},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153118,"byte_end":153132,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":15742},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153118,"byte_end":153132,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5716},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153189,"byte_end":153193,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16218},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153195,"byte_end":153199,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5751},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153238,"byte_end":153244,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16227},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153246,"byte_end":153252,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5804},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153301,"byte_end":153312,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16236},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153314,"byte_end":153324,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153361,"byte_end":153366,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16245},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153368,"byte_end":153373,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5890},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153408,"byte_end":153412,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16251},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153414,"byte_end":153418,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5934},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153459,"byte_end":153466,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16287},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153468,"byte_end":153475,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5984},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153516,"byte_end":153523,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":5976},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153525,"byte_end":153531,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":6025},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153586,"byte_end":153600,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16293},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153602,"byte_end":153615,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":6068},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153654,"byte_end":153660,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16332},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153662,"byte_end":153668,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":6134},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153735,"byte_end":153755,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16377},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153757,"byte_end":153765,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16396},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153767,"byte_end":153785,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":6216},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153824,"byte_end":153830,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16465},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":153832,"byte_end":153838,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":6316},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154016,"byte_end":154030,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16597},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":439202,"byte_end":439210,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6356}},{"kind":"Use","ref_id":{"krate":0,"index":16588},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":439212,"byte_end":439216,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6356}},{"kind":"Use","ref_id":{"krate":0,"index":16589},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":439212,"byte_end":439216,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6356}},{"kind":"Use","ref_id":{"krate":0,"index":16568},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":439218,"byte_end":439225,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6356}},{"kind":"Use","ref_id":{"krate":0,"index":16569},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":439218,"byte_end":439225,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6356}},{"kind":"Use","ref_id":{"krate":0,"index":16558},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":439227,"byte_end":439237,"line_start":26,"line_end":26,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6356}},{"kind":"Use","ref_id":{"krate":0,"index":16577},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":439239,"byte_end":439249,"line_start":26,"line_end":26,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6356}},{"kind":"Use","ref_id":{"krate":0,"index":6674},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154230,"byte_end":154246,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":6834},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154433,"byte_end":154443,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":16604},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154445,"byte_end":154454,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":17903},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154622,"byte_end":154633,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":17899},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154635,"byte_end":154652,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":17856},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154654,"byte_end":154663,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":17914},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154665,"byte_end":154672,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":17915},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154665,"byte_end":154672,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":0,"index":6905},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154755,"byte_end":154764,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1985}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4146},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5559},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488448,"byte_end":488452,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16662},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488487,"byte_end":488492,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":7029},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488528,"byte_end":488533,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16673},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488535,"byte_end":488540,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16679},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488578,"byte_end":488584,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16724},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488617,"byte_end":488621,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"alias_span":null,"name":"Feed","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16735},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488656,"byte_end":488661,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16746},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488702,"byte_end":488713,"line_start":36,"line_end":36,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16810},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488752,"byte_end":488762,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16869},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488795,"byte_end":488799,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":7349},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488840,"byte_end":488847,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":7411},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488885,"byte_end":488891,"line_start":48,"line_end":48,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16879},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488893,"byte_end":488899,"line_start":48,"line_end":48,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":16937},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488933,"byte_end":488937,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":17020},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488988,"byte_end":488999,"line_start":54,"line_end":54,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":0,"index":17107},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489088,"byte_end":489094,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":6939}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10975,"byte_end":10979,"line_start":307,"line_end":307,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7654},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10981,"byte_end":10988,"line_start":307,"line_end":307,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12867},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528485,"byte_end":528492,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":2,"index":46047},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528494,"byte_end":528498,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":2,"index":46083},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528500,"byte_end":528508,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":2,"index":46092},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528510,"byte_end":528524,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":2,"index":12877},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528526,"byte_end":528531,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528558,"byte_end":528567,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528569,"byte_end":528583,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528585,"byte_end":528595,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":15},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528597,"byte_end":528602,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":21},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528604,"byte_end":528614,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528616,"byte_end":528631,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":378},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528657,"byte_end":528667,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":379},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528691,"byte_end":528705,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":94},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528791,"byte_end":528798,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":122},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528884,"byte_end":528889,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528976,"byte_end":528985,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":22,"index":407},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528987,"byte_end":528995,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":529074,"byte_end":529085,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":0,"index":7788},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":529121,"byte_end":529134,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":0,"index":7785},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":529136,"byte_end":529144,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":7699}},{"kind":"Use","ref_id":{"krate":1,"index":3804},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537016,"byte_end":537021,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":1,"index":10587},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537023,"byte_end":537032,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":1,"index":10706},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537034,"byte_end":537041,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":1,"index":4361},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537043,"byte_end":537053,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":1,"index":3802},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537055,"byte_end":537061,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":1,"index":10720},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537063,"byte_end":537071,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":26,"index":49},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537096,"byte_end":537108,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":26,"index":39},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537110,"byte_end":537119,"line_start":31,"line_end":31,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":26,"index":47},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537121,"byte_end":537130,"line_start":31,"line_end":31,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":26,"index":42},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537132,"byte_end":537142,"line_start":31,"line_end":31,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17164},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537569,"byte_end":537579,"line_start":46,"line_end":46,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17197},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537625,"byte_end":537634,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17250},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537636,"byte_end":537648,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17260},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537694,"byte_end":537703,"line_start":52,"line_end":52,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17309},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537750,"byte_end":537760,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17345},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537795,"byte_end":537800,"line_start":58,"line_end":58,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17394},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537835,"byte_end":537840,"line_start":61,"line_end":61,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":8301},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537874,"byte_end":537878,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17402},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537880,"byte_end":537884,"line_start":64,"line_end":64,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":8346},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537927,"byte_end":537935,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17456},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537937,"byte_end":537944,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17518},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":537982,"byte_end":537988,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":8450},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538024,"byte_end":538029,"line_start":73,"line_end":73,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":8448},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538031,"byte_end":538036,"line_start":73,"line_end":73,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17546},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538078,"byte_end":538085,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17554},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538120,"byte_end":538125,"line_start":79,"line_end":79,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17569},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538314,"byte_end":538322,"line_start":86,"line_end":86,"column_start":26,"column_end":34},"alias_span":null,"name":"IntoSink","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17618},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538357,"byte_end":538362,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17666},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538395,"byte_end":538399,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17675},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538450,"byte_end":538462,"line_start":95,"line_end":95,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17684},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538507,"byte_end":538516,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17693},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538559,"byte_end":538567,"line_start":101,"line_end":101,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17704},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538614,"byte_end":538623,"line_start":104,"line_end":104,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17714},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538676,"byte_end":538688,"line_start":107,"line_end":107,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17725},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538733,"byte_end":538742,"line_start":110,"line_end":110,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":8942},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538780,"byte_end":538786,"line_start":113,"line_end":113,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":8940},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538788,"byte_end":538794,"line_start":113,"line_end":113,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538828,"byte_end":538832,"line_start":116,"line_end":116,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":9018},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538866,"byte_end":538870,"line_start":119,"line_end":119,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":9016},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538872,"byte_end":538876,"line_start":119,"line_end":119,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17745},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538913,"byte_end":538921,"line_start":122,"line_end":122,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":9100},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538923,"byte_end":538935,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":9101},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538923,"byte_end":538935,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17751},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538937,"byte_end":538946,"line_start":122,"line_end":122,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17757},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":538980,"byte_end":538984,"line_start":125,"line_end":125,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17801},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539021,"byte_end":539027,"line_start":128,"line_end":128,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17808},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539062,"byte_end":539067,"line_start":131,"line_end":131,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17817},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539120,"byte_end":539133,"line_start":134,"line_end":134,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":0,"index":17826},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539176,"byte_end":539184,"line_start":137,"line_end":137,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":7800}},{"kind":"Use","ref_id":{"krate":26,"index":49},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11312,"byte_end":11324,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9343},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11326,"byte_end":11341,"line_start":325,"line_end":325,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":39},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11343,"byte_end":11352,"line_start":325,"line_end":325,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9308},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11354,"byte_end":11366,"line_start":325,"line_end":325,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":47},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11368,"byte_end":11377,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9338},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11379,"byte_end":11391,"line_start":325,"line_end":325,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":42},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11393,"byte_end":11403,"line_start":325,"line_end":325,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9325},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11409,"byte_end":11422,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9516},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":645056,"byte_end":645072,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":9382}},{"kind":"Use","ref_id":{"krate":0,"index":9437},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":645074,"byte_end":645079,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":9382}},{"kind":"Use","ref_id":{"krate":0,"index":9493},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":645081,"byte_end":645091,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":9382}},{"kind":"Use","ref_id":{"krate":0,"index":9474},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":645093,"byte_end":645108,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":9382}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6930},{"krate":0,"index":6933},{"krate":0,"index":6936},{"krate":0,"index":6939},{"krate":0,"index":7692},{"krate":0,"index":7693},{"krate":0,"index":7696},{"krate":0,"index":7699},{"krate":0,"index":7798},{"krate":0,"index":7800},{"krate":0,"index":9357},{"krate":0,"index":9358},{"krate":0,"index":9361},{"krate":0,"index":9364},{"krate":0,"index":9367},{"krate":0,"index":9370},{"krate":0,"index":9373},{"krate":0,"index":9376},{"krate":0,"index":9379},{"krate":0,"index":9382},{"krate":0,"index":9663},{"krate":0,"index":9725},{"krate":0,"index":9939}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14000,"byte_end":14004,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"pub fn poll<F: Future + Unpin>(F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14145,"byte_end":14153,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14079,"byte_end":14118,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15214,"byte_end":15226,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"pub fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15351,"byte_end":15362,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15285,"byte_end":15324,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13015,"byte_end":13027,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"pub fn assert_unpin<T: Unpin>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":12990,"byte_end":13007,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13089,"byte_end":13108,"line_start":54,"line_end":54,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"pub fn assert_fused_future<T: Future + FusedFuture>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13064,"byte_end":13081,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13185,"byte_end":13204,"line_start":58,"line_end":58,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"pub fn assert_fused_stream<T: Stream + FusedStream>(&T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/mod.rs","byte_start":13160,"byte_end":13177,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":82},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1111,"byte_end":1120,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":105}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1056,"byte_end":1087,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":1282,"byte_end":1293,"line_start":50,"line_end":50,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1966},{"krate":0,"index":1969}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15674,"byte_end":15698,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15699,"byte_end":15702,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15703,"byte_end":15728,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15729,"byte_end":15732,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15733,"byte_end":15760,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15761,"byte_end":15840,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15841,"byte_end":15878,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15879,"byte_end":15958,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":15959,"byte_end":16034,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/mod.rs","byte_start":16035,"byte_end":16099,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":9954},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39481,"byte_end":39486,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":9951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9956},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39515,"byte_end":39521,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":9951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9958},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39550,"byte_end":39555,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":9951},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9951},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39451,"byte_end":39458,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9954},{"krate":0,"index":9956},{"krate":0,"index":9958}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9998},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":43912,"byte_end":43916,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":10000}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45735,"byte_end":45745,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44113,"byte_end":44181,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44186,"byte_end":44189,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44194,"byte_end":44262,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44267,"byte_end":44312,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44317,"byte_end":44320,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44325,"byte_end":44339,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44344,"byte_end":44347,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44352,"byte_end":44359,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44364,"byte_end":44405,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44410,"byte_end":44441,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44446,"byte_end":44502,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44507,"byte_end":44531,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44536,"byte_end":44571,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44576,"byte_end":44601,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44606,"byte_end":44609,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44614,"byte_end":44663,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44668,"byte_end":44671,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44676,"byte_end":44718,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44723,"byte_end":44762,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44767,"byte_end":44806,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44811,"byte_end":44828,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44833,"byte_end":44836,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44841,"byte_end":44911,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44916,"byte_end":44955,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44960,"byte_end":45001,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45006,"byte_end":45032,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45037,"byte_end":45040,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45045,"byte_end":45055,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45060,"byte_end":45077,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45082,"byte_end":45116,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45121,"byte_end":45168,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45173,"byte_end":45222,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45227,"byte_end":45289,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45294,"byte_end":45318,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45323,"byte_end":45366,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45371,"byte_end":45428,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45433,"byte_end":45508,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45513,"byte_end":45543,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45548,"byte_end":45565,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45570,"byte_end":45584,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45589,"byte_end":45673,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45678,"byte_end":45687,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45692,"byte_end":45697,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45702,"byte_end":45711,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45716,"byte_end":45723,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":10037},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":46803,"byte_end":46813,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":10034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10040},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":46897,"byte_end":46905,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":10034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10034},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":46781,"byte_end":46784,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":10037},{"krate":0,"index":10040}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577917,"byte_end":13577926,"line_start":678,"line_end":678,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10089},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":19907,"byte_end":19914,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":10091}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10137},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20165,"byte_end":20178,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":10139}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10195},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20518,"byte_end":20521,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10198}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10255},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20728,"byte_end":20738,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":10257}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10305},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":20944,"byte_end":20951,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":10308}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10367},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21144,"byte_end":21148,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":10371}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10440},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21393,"byte_end":21400,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":10443}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10500},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21641,"byte_end":21651,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":10502}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10548},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":21864,"byte_end":21873,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":10550}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10594},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":48501,"byte_end":48512,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":10596}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49515,"byte_end":49521,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49372,"byte_end":49435,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49436,"byte_end":49503,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":457},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49895,"byte_end":49905,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49806,"byte_end":49883,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52007,"byte_end":52011,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51738,"byte_end":51812,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51817,"byte_end":51890,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51895,"byte_end":51963,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51968,"byte_end":51995,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52506,"byte_end":52515,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52363,"byte_end":52416,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52421,"byte_end":52424,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52429,"byte_end":52494,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53109,"byte_end":53121,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52697,"byte_end":52755,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52760,"byte_end":52763,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52768,"byte_end":52833,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52838,"byte_end":52841,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52846,"byte_end":52858,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52863,"byte_end":52866,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52871,"byte_end":52964,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":52969,"byte_end":53063,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53068,"byte_end":53097,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53629,"byte_end":53639,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53221,"byte_end":53277,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53282,"byte_end":53285,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53290,"byte_end":53355,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53360,"byte_end":53363,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53368,"byte_end":53380,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53385,"byte_end":53388,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53393,"byte_end":53486,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53491,"byte_end":53583,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53588,"byte_end":53617,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":60089,"byte_end":60096,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59899,"byte_end":59961,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59966,"byte_end":59969,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59974,"byte_end":60054,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":60059,"byte_end":60077,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":545},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22855,"byte_end":22864,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22756,"byte_end":22830,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22831,"byte_end":22844,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23696,"byte_end":23699,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22879,"byte_end":22954,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22959,"byte_end":22982,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22987,"byte_end":22990,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22995,"byte_end":23069,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23074,"byte_end":23145,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23150,"byte_end":23212,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23217,"byte_end":23220,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23225,"byte_end":23296,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23301,"byte_end":23372,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23377,"byte_end":23398,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23403,"byte_end":23406,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23411,"byte_end":23425,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23430,"byte_end":23433,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23438,"byte_end":23445,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23450,"byte_end":23491,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23496,"byte_end":23531,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23536,"byte_end":23539,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23544,"byte_end":23573,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23578,"byte_end":23621,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23626,"byte_end":23662,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23667,"byte_end":23676,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23681,"byte_end":23688,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24096,"byte_end":24104,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23869,"byte_end":23944,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23949,"byte_end":23972,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23977,"byte_end":23980,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":23985,"byte_end":24063,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24068,"byte_end":24088,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25116,"byte_end":25120,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24263,"byte_end":24339,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24344,"byte_end":24387,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24392,"byte_end":24395,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24400,"byte_end":24471,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24476,"byte_end":24550,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24555,"byte_end":24571,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24576,"byte_end":24579,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24584,"byte_end":24659,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24664,"byte_end":24675,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24680,"byte_end":24683,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24688,"byte_end":24759,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24764,"byte_end":24790,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24795,"byte_end":24798,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24803,"byte_end":24817,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24822,"byte_end":24825,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24830,"byte_end":24837,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24842,"byte_end":24883,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24888,"byte_end":24923,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24928,"byte_end":24931,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24936,"byte_end":24970,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":24975,"byte_end":25040,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25045,"byte_end":25082,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25087,"byte_end":25096,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25101,"byte_end":25108,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25990,"byte_end":26001,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25332,"byte_end":25407,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25412,"byte_end":25433,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25438,"byte_end":25441,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25446,"byte_end":25526,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25531,"byte_end":25603,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25608,"byte_end":25611,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25616,"byte_end":25630,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25635,"byte_end":25638,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25643,"byte_end":25650,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25655,"byte_end":25696,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25701,"byte_end":25736,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25741,"byte_end":25744,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25749,"byte_end":25763,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25768,"byte_end":25796,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25801,"byte_end":25837,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25842,"byte_end":25854,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25859,"byte_end":25897,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25902,"byte_end":25908,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25913,"byte_end":25916,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25921,"byte_end":25956,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25961,"byte_end":25970,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":25975,"byte_end":25982,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26840,"byte_end":26852,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26181,"byte_end":26257,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26262,"byte_end":26283,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26288,"byte_end":26291,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26296,"byte_end":26375,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26380,"byte_end":26452,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26457,"byte_end":26460,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26465,"byte_end":26479,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26484,"byte_end":26487,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26492,"byte_end":26499,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26504,"byte_end":26545,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26550,"byte_end":26585,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26590,"byte_end":26593,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26598,"byte_end":26612,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26617,"byte_end":26645,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26650,"byte_end":26686,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26691,"byte_end":26703,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26708,"byte_end":26746,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26751,"byte_end":26757,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26762,"byte_end":26765,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26770,"byte_end":26806,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26811,"byte_end":26820,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":26825,"byte_end":26832,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27631,"byte_end":27642,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27033,"byte_end":27086,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27091,"byte_end":27094,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27099,"byte_end":27173,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27178,"byte_end":27241,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27246,"byte_end":27249,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27254,"byte_end":27268,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27273,"byte_end":27276,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27281,"byte_end":27288,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27293,"byte_end":27334,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27339,"byte_end":27374,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27379,"byte_end":27414,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27419,"byte_end":27422,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27427,"byte_end":27457,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27462,"byte_end":27500,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27505,"byte_end":27556,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27561,"byte_end":27597,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27602,"byte_end":27611,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27616,"byte_end":27623,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28507,"byte_end":28514,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27781,"byte_end":27845,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27850,"byte_end":27886,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27891,"byte_end":27894,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27899,"byte_end":27968,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":27973,"byte_end":28010,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28015,"byte_end":28018,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28023,"byte_end":28083,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28088,"byte_end":28091,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28096,"byte_end":28167,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28172,"byte_end":28198,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28203,"byte_end":28206,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28211,"byte_end":28225,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28230,"byte_end":28233,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28238,"byte_end":28245,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28250,"byte_end":28291,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28296,"byte_end":28331,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28336,"byte_end":28339,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28344,"byte_end":28390,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28395,"byte_end":28436,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28441,"byte_end":28473,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28478,"byte_end":28487,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28492,"byte_end":28499,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29619,"byte_end":29633,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28728,"byte_end":28803,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28808,"byte_end":28831,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28836,"byte_end":28839,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28844,"byte_end":28916,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28921,"byte_end":28994,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":28999,"byte_end":29013,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29018,"byte_end":29021,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29026,"byte_end":29096,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29101,"byte_end":29119,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29124,"byte_end":29127,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29132,"byte_end":29146,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29151,"byte_end":29154,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29159,"byte_end":29166,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29171,"byte_end":29212,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29217,"byte_end":29252,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29257,"byte_end":29300,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29305,"byte_end":29308,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29313,"byte_end":29353,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29358,"byte_end":29424,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29429,"byte_end":29432,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29437,"byte_end":29490,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29495,"byte_end":29541,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29546,"byte_end":29585,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29590,"byte_end":29599,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29604,"byte_end":29611,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30721,"byte_end":30725,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29826,"byte_end":29899,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29904,"byte_end":29970,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29975,"byte_end":29993,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":29998,"byte_end":30001,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30006,"byte_end":30073,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30078,"byte_end":30143,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30148,"byte_end":30220,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30225,"byte_end":30299,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30304,"byte_end":30330,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30335,"byte_end":30338,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30343,"byte_end":30414,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30419,"byte_end":30494,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30499,"byte_end":30553,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30558,"byte_end":30561,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30566,"byte_end":30640,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30645,"byte_end":30713,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31565,"byte_end":31572,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30871,"byte_end":30937,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30942,"byte_end":30945,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":30950,"byte_end":31025,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31030,"byte_end":31103,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31108,"byte_end":31177,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31182,"byte_end":31232,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31237,"byte_end":31240,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31245,"byte_end":31259,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31264,"byte_end":31267,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31272,"byte_end":31279,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31284,"byte_end":31325,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31330,"byte_end":31365,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31370,"byte_end":31373,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31378,"byte_end":31407,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31412,"byte_end":31490,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31495,"byte_end":31531,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31536,"byte_end":31545,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31550,"byte_end":31557,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33110,"byte_end":33122,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31754,"byte_end":31808,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31813,"byte_end":31816,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31821,"byte_end":31896,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31901,"byte_end":31975,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":31980,"byte_end":32054,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32059,"byte_end":32110,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32115,"byte_end":32118,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32123,"byte_end":32198,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32203,"byte_end":32273,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32278,"byte_end":32345,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32350,"byte_end":32425,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32430,"byte_end":32502,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32507,"byte_end":32510,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32515,"byte_end":32579,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32584,"byte_end":32641,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32646,"byte_end":32649,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32654,"byte_end":32668,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32673,"byte_end":32676,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32681,"byte_end":32688,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32693,"byte_end":32734,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32739,"byte_end":32789,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32794,"byte_end":32797,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32802,"byte_end":32836,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32841,"byte_end":32890,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32895,"byte_end":32898,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32903,"byte_end":32952,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32957,"byte_end":32981,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32986,"byte_end":32993,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":32998,"byte_end":33048,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33053,"byte_end":33062,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33067,"byte_end":33074,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33079,"byte_end":33102,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34874,"byte_end":34880,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33352,"byte_end":33427,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33432,"byte_end":33455,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33460,"byte_end":33463,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33468,"byte_end":33542,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33547,"byte_end":33620,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33625,"byte_end":33637,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33642,"byte_end":33645,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33650,"byte_end":33714,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33719,"byte_end":33776,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33781,"byte_end":33784,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33789,"byte_end":33803,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33808,"byte_end":33811,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33816,"byte_end":33823,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33828,"byte_end":33869,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33874,"byte_end":33909,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33914,"byte_end":33917,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33922,"byte_end":33951,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33956,"byte_end":33990,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":33995,"byte_end":34029,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34034,"byte_end":34037,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34042,"byte_end":34075,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34080,"byte_end":34113,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34118,"byte_end":34127,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34132,"byte_end":34139,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34144,"byte_end":34147,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34152,"byte_end":34159,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34164,"byte_end":34233,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34238,"byte_end":34313,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34318,"byte_end":34349,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34354,"byte_end":34357,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34362,"byte_end":34403,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34408,"byte_end":34443,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34448,"byte_end":34484,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34489,"byte_end":34509,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34514,"byte_end":34517,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34522,"byte_end":34551,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34556,"byte_end":34590,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34595,"byte_end":34629,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34634,"byte_end":34679,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34684,"byte_end":34725,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34730,"byte_end":34737,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34742,"byte_end":34775,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34780,"byte_end":34812,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34817,"byte_end":34826,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34831,"byte_end":34838,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":34843,"byte_end":34866,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36042,"byte_end":36047,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":35813,"byte_end":35854,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":35859,"byte_end":35862,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":35867,"byte_end":35942,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":35947,"byte_end":36004,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36009,"byte_end":36034,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36507,"byte_end":36518,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36206,"byte_end":36247,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36252,"byte_end":36255,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36260,"byte_end":36319,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36324,"byte_end":36327,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36332,"byte_end":36407,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36412,"byte_end":36469,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36474,"byte_end":36499,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36808,"byte_end":36818,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36675,"byte_end":36724,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36729,"byte_end":36800,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37103,"byte_end":37114,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":36967,"byte_end":37016,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37021,"byte_end":37095,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37345,"byte_end":37355,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37268,"byte_end":37337,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38751,"byte_end":38763,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37491,"byte_end":37563,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37568,"byte_end":37631,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37636,"byte_end":37639,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37644,"byte_end":37710,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37715,"byte_end":37718,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37723,"byte_end":37796,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37801,"byte_end":37870,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37875,"byte_end":37945,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37950,"byte_end":37953,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37958,"byte_end":37972,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37977,"byte_end":37980,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37985,"byte_end":37992,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":37997,"byte_end":38027,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38032,"byte_end":38082,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38087,"byte_end":38126,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38131,"byte_end":38182,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38187,"byte_end":38190,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38195,"byte_end":38255,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38260,"byte_end":38312,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38317,"byte_end":38324,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38329,"byte_end":38332,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38337,"byte_end":38406,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38411,"byte_end":38484,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38489,"byte_end":38521,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38526,"byte_end":38529,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38534,"byte_end":38541,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38546,"byte_end":38593,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38598,"byte_end":38637,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38642,"byte_end":38645,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38650,"byte_end":38731,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":38736,"byte_end":38743,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10630},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":82240,"byte_end":82250,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":10632}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":10669},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83224,"byte_end":83229,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":10666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10671},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83258,"byte_end":83264,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":10666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10673},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83293,"byte_end":83298,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":10666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10666},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83191,"byte_end":83201,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":10669},{"krate":0,"index":10671},{"krate":0,"index":10673}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10716},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88167,"byte_end":88172,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":10713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":10718},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88201,"byte_end":88207,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":10713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10720},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88236,"byte_end":88241,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":10713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":10713},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88131,"byte_end":88144,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":10716},{"krate":0,"index":10718},{"krate":0,"index":10720}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10763},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61075,"byte_end":61085,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":10766}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10824},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61333,"byte_end":61346,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":10827}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10884},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61614,"byte_end":61630,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":10886}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10942},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":61973,"byte_end":61984,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":10945}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11014},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62218,"byte_end":62225,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":11018}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11088},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62465,"byte_end":62471,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":11092}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11161},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62721,"byte_end":62728,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":11164}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11222},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":62936,"byte_end":62942,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":11225}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11283},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63161,"byte_end":63170,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":11286}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11344},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63442,"byte_end":63452,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":11347}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11405},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":63825,"byte_end":63830,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":11408}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11466},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64071,"byte_end":64077,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":11469}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11528},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64334,"byte_end":64345,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":11532}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11601},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64629,"byte_end":64641,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":11604}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64931,"byte_end":64943,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":869},{"krate":0,"index":870}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64867,"byte_end":64920,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66095,"byte_end":66107,"line_start":171,"line_end":171,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"pub fn flatten_sink<Item>(Self) -> FlattenSink<Self, Self::Ok> where\nSelf::Ok: Sink<Item, Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64961,"byte_end":65037,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65042,"byte_end":65067,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65072,"byte_end":65075,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65080,"byte_end":65150,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65155,"byte_end":65228,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65233,"byte_end":65247,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65252,"byte_end":65255,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65260,"byte_end":65330,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65335,"byte_end":65353,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65358,"byte_end":65361,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65366,"byte_end":65380,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65385,"byte_end":65388,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65393,"byte_end":65400,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65405,"byte_end":65453,"line_start":151,"line_end":151,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65458,"byte_end":65486,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65491,"byte_end":65543,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65548,"byte_end":65567,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65572,"byte_end":65597,"line_start":155,"line_end":155,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65602,"byte_end":65605,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65610,"byte_end":65666,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65671,"byte_end":65703,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65708,"byte_end":65718,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65723,"byte_end":65740,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65745,"byte_end":65792,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65797,"byte_end":65833,"line_start":162,"line_end":162,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65838,"byte_end":65845,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65850,"byte_end":65911,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65916,"byte_end":65919,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65924,"byte_end":65956,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65961,"byte_end":65994,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":65999,"byte_end":66006,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66011,"byte_end":66035,"line_start":169,"line_end":169,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67703,"byte_end":67709,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66331,"byte_end":66389,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66394,"byte_end":66397,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66402,"byte_end":66477,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66482,"byte_end":66552,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66557,"byte_end":66630,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66635,"byte_end":66664,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66669,"byte_end":66672,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66677,"byte_end":66752,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66757,"byte_end":66832,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66837,"byte_end":66884,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66889,"byte_end":66892,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66897,"byte_end":66972,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":66977,"byte_end":67003,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67008,"byte_end":67011,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67016,"byte_end":67030,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67035,"byte_end":67038,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67043,"byte_end":67050,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67055,"byte_end":67093,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67098,"byte_end":67101,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67106,"byte_end":67147,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67152,"byte_end":67197,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67202,"byte_end":67244,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67249,"byte_end":67285,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67290,"byte_end":67299,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67304,"byte_end":67311,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67316,"byte_end":67319,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67324,"byte_end":67396,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67401,"byte_end":67412,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67417,"byte_end":67420,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67425,"byte_end":67432,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67437,"byte_end":67475,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67480,"byte_end":67483,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67488,"byte_end":67529,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67534,"byte_end":67580,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67585,"byte_end":67627,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67632,"byte_end":67669,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67674,"byte_end":67683,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67688,"byte_end":67695,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69268,"byte_end":69282,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":67900,"byte_end":68017,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68022,"byte_end":68025,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68030,"byte_end":68152,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68157,"byte_end":68207,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68212,"byte_end":68215,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68220,"byte_end":68295,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68300,"byte_end":68375,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68380,"byte_end":68427,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68432,"byte_end":68435,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68440,"byte_end":68515,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68520,"byte_end":68595,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68600,"byte_end":68647,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68652,"byte_end":68655,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68660,"byte_end":68735,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68740,"byte_end":68766,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68771,"byte_end":68774,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68779,"byte_end":68793,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68798,"byte_end":68801,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68806,"byte_end":68813,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68818,"byte_end":68856,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68861,"byte_end":68864,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68869,"byte_end":68910,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68915,"byte_end":68960,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":68965,"byte_end":69026,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69031,"byte_end":69063,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69068,"byte_end":69071,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69076,"byte_end":69122,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69127,"byte_end":69188,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69193,"byte_end":69226,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69231,"byte_end":69240,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69245,"byte_end":69252,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69257,"byte_end":69260,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70965,"byte_end":70972,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69516,"byte_end":69572,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69577,"byte_end":69580,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69585,"byte_end":69659,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69664,"byte_end":69725,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69730,"byte_end":69800,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69805,"byte_end":69880,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69885,"byte_end":69920,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69925,"byte_end":69928,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":69933,"byte_end":70008,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70013,"byte_end":70088,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70093,"byte_end":70140,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70145,"byte_end":70148,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70153,"byte_end":70228,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70233,"byte_end":70259,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70264,"byte_end":70267,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70272,"byte_end":70286,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70291,"byte_end":70294,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70299,"byte_end":70306,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70311,"byte_end":70349,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70354,"byte_end":70357,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70362,"byte_end":70403,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70408,"byte_end":70454,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70459,"byte_end":70502,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70507,"byte_end":70544,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70549,"byte_end":70558,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70563,"byte_end":70570,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70575,"byte_end":70578,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70583,"byte_end":70656,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70661,"byte_end":70675,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70680,"byte_end":70683,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70688,"byte_end":70695,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70700,"byte_end":70738,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70743,"byte_end":70746,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70751,"byte_end":70792,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70797,"byte_end":70842,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70847,"byte_end":70890,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70895,"byte_end":70931,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70936,"byte_end":70945,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":70950,"byte_end":70957,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72062,"byte_end":72070,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71165,"byte_end":71235,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71240,"byte_end":71289,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71294,"byte_end":71297,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71302,"byte_end":71365,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71370,"byte_end":71438,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71443,"byte_end":71516,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71521,"byte_end":71597,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71602,"byte_end":71647,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71652,"byte_end":71655,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71660,"byte_end":71735,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71740,"byte_end":71766,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71771,"byte_end":71774,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71779,"byte_end":71793,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71798,"byte_end":71801,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71806,"byte_end":71813,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71818,"byte_end":71856,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71861,"byte_end":71864,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71869,"byte_end":71910,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71915,"byte_end":71966,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":71971,"byte_end":72028,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72033,"byte_end":72042,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72047,"byte_end":72054,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72366,"byte_end":72373,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72246,"byte_end":72304,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72309,"byte_end":72358,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73928,"byte_end":73936,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72547,"byte_end":72616,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72621,"byte_end":72695,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72700,"byte_end":72703,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72708,"byte_end":72783,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72788,"byte_end":72858,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72863,"byte_end":72928,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":72933,"byte_end":72999,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73004,"byte_end":73038,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73043,"byte_end":73046,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73051,"byte_end":73126,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73131,"byte_end":73157,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73162,"byte_end":73165,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73170,"byte_end":73184,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73189,"byte_end":73192,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73197,"byte_end":73204,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73209,"byte_end":73247,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73252,"byte_end":73255,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73260,"byte_end":73301,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73306,"byte_end":73351,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73356,"byte_end":73431,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73436,"byte_end":73472,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73477,"byte_end":73486,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73491,"byte_end":73498,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73503,"byte_end":73506,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73511,"byte_end":73587,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73592,"byte_end":73603,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73608,"byte_end":73611,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73616,"byte_end":73623,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73628,"byte_end":73666,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73671,"byte_end":73674,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73679,"byte_end":73720,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73725,"byte_end":73771,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73776,"byte_end":73852,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73857,"byte_end":73894,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73899,"byte_end":73908,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":73913,"byte_end":73920,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75557,"byte_end":75564,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74190,"byte_end":74255,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74260,"byte_end":74332,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74337,"byte_end":74340,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74345,"byte_end":74420,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74425,"byte_end":74495,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74500,"byte_end":74565,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74570,"byte_end":74646,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74651,"byte_end":74669,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74674,"byte_end":74677,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74682,"byte_end":74757,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74762,"byte_end":74788,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74793,"byte_end":74796,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74801,"byte_end":74815,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74820,"byte_end":74823,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74828,"byte_end":74835,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74840,"byte_end":74878,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74883,"byte_end":74886,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74891,"byte_end":74932,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74937,"byte_end":74983,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":74988,"byte_end":75063,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75068,"byte_end":75105,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75110,"byte_end":75119,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75124,"byte_end":75131,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75136,"byte_end":75139,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75144,"byte_end":75217,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75222,"byte_end":75236,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75241,"byte_end":75244,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75249,"byte_end":75256,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75261,"byte_end":75299,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75304,"byte_end":75307,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75312,"byte_end":75353,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75358,"byte_end":75403,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75408,"byte_end":75482,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75487,"byte_end":75523,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75528,"byte_end":75537,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75542,"byte_end":75549,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76540,"byte_end":76550,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75813,"byte_end":75886,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75891,"byte_end":75894,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75899,"byte_end":75974,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":75979,"byte_end":76052,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76057,"byte_end":76126,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76131,"byte_end":76184,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76189,"byte_end":76192,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76197,"byte_end":76211,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76216,"byte_end":76219,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76224,"byte_end":76231,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76236,"byte_end":76277,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76282,"byte_end":76320,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76325,"byte_end":76328,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76333,"byte_end":76375,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76380,"byte_end":76461,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76466,"byte_end":76506,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76511,"byte_end":76520,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76525,"byte_end":76532,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77476,"byte_end":77487,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76749,"byte_end":76820,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76825,"byte_end":76828,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76833,"byte_end":76908,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76913,"byte_end":76986,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":76991,"byte_end":77060,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77065,"byte_end":77119,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77124,"byte_end":77127,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77132,"byte_end":77146,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77151,"byte_end":77154,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77159,"byte_end":77166,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77171,"byte_end":77212,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77217,"byte_end":77255,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77260,"byte_end":77263,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77268,"byte_end":77311,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77316,"byte_end":77396,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77401,"byte_end":77442,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77447,"byte_end":77456,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77461,"byte_end":77468,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77872,"byte_end":77883,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77691,"byte_end":77766,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77771,"byte_end":77800,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77805,"byte_end":77808,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":77813,"byte_end":77864,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79062,"byte_end":79080,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78118,"byte_end":78193,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78198,"byte_end":78221,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78226,"byte_end":78229,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78234,"byte_end":78306,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78311,"byte_end":78384,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78389,"byte_end":78403,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78408,"byte_end":78411,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78416,"byte_end":78486,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78491,"byte_end":78509,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78514,"byte_end":78517,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78522,"byte_end":78536,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78541,"byte_end":78544,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78549,"byte_end":78556,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78561,"byte_end":78602,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78607,"byte_end":78645,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78650,"byte_end":78696,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78701,"byte_end":78704,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78709,"byte_end":78769,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78774,"byte_end":78853,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78858,"byte_end":78861,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78866,"byte_end":78923,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78928,"byte_end":78980,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":78985,"byte_end":79028,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79033,"byte_end":79042,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79047,"byte_end":79054,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80171,"byte_end":80185,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79340,"byte_end":79411,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79416,"byte_end":79453,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79458,"byte_end":79507,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79512,"byte_end":79515,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79520,"byte_end":79589,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79594,"byte_end":79667,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79672,"byte_end":79742,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79747,"byte_end":79765,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79770,"byte_end":79773,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79778,"byte_end":79846,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79851,"byte_end":79854,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79859,"byte_end":79873,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79878,"byte_end":79881,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79886,"byte_end":79893,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79898,"byte_end":79936,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79941,"byte_end":79944,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79949,"byte_end":79990,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":79995,"byte_end":80047,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80052,"byte_end":80099,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80104,"byte_end":80137,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80142,"byte_end":80151,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80156,"byte_end":80163,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81440,"byte_end":81451,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80739,"byte_end":80792,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80797,"byte_end":80833,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80838,"byte_end":80841,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80846,"byte_end":80895,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80900,"byte_end":80967,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80972,"byte_end":80985,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80990,"byte_end":80993,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":80998,"byte_end":81012,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81017,"byte_end":81020,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81025,"byte_end":81032,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81037,"byte_end":81096,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81101,"byte_end":81104,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81109,"byte_end":81128,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81133,"byte_end":81151,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81156,"byte_end":81228,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81233,"byte_end":81265,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81270,"byte_end":81277,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81282,"byte_end":81358,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81363,"byte_end":81366,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81371,"byte_end":81420,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81425,"byte_end":81432,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81710,"byte_end":81724,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81607,"byte_end":81680,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":81685,"byte_end":81702,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":11659},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":89893,"byte_end":89897,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":11661}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":89759,"byte_end":89796,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":89814,"byte_end":89881,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":940},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90439,"byte_end":90443,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90002,"byte_end":90070,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90071,"byte_end":90074,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90075,"byte_end":90138,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90139,"byte_end":90142,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90143,"byte_end":90157,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90158,"byte_end":90161,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90162,"byte_end":90169,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90170,"byte_end":90211,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90212,"byte_end":90236,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90237,"byte_end":90240,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90241,"byte_end":90273,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90274,"byte_end":90301,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90302,"byte_end":90305,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90306,"byte_end":90343,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90344,"byte_end":90368,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90369,"byte_end":90376,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90377,"byte_end":90413,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90414,"byte_end":90423,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90424,"byte_end":90431,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11665},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91270,"byte_end":91277,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":11667}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91131,"byte_end":91173,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91191,"byte_end":91258,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":986},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91796,"byte_end":91803,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91418,"byte_end":91498,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91499,"byte_end":91512,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91513,"byte_end":91516,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91517,"byte_end":91579,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91580,"byte_end":91583,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91584,"byte_end":91598,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91599,"byte_end":91602,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91603,"byte_end":91616,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91617,"byte_end":91658,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91659,"byte_end":91683,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91684,"byte_end":91687,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91688,"byte_end":91723,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91724,"byte_end":91750,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91751,"byte_end":91770,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91771,"byte_end":91780,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91781,"byte_end":91788,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11673},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92575,"byte_end":92581,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":11671},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92540,"byte_end":92570,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11676},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92648,"byte_end":92652,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":11671},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92605,"byte_end":92643,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11679},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92814,"byte_end":92818,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":11671},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92671,"byte_end":92737,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92742,"byte_end":92809,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":11671},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92511,"byte_end":92520,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":11673},{"krate":0,"index":11676},{"krate":0,"index":11679}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92389,"byte_end":92426,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92427,"byte_end":92430,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92431,"byte_end":92484,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1033},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93339,"byte_end":93349,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92878,"byte_end":92915,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92916,"byte_end":92919,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92920,"byte_end":92934,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92935,"byte_end":92938,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92939,"byte_end":92946,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92947,"byte_end":92988,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92989,"byte_end":93013,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93014,"byte_end":93039,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93040,"byte_end":93043,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93044,"byte_end":93093,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93094,"byte_end":93115,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93116,"byte_end":93168,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93169,"byte_end":93204,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93205,"byte_end":93260,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93261,"byte_end":93313,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93314,"byte_end":93323,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93324,"byte_end":93331,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93790,"byte_end":93800,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93492,"byte_end":93577,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93582,"byte_end":93653,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93658,"byte_end":93731,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93736,"byte_end":93764,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93769,"byte_end":93778,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94148,"byte_end":94159,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94028,"byte_end":94094,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94099,"byte_end":94122,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94127,"byte_end":94136,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11686},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95784,"byte_end":95790,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":11684},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95749,"byte_end":95779,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11689},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95857,"byte_end":95861,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":11684},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95814,"byte_end":95852,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11692},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96069,"byte_end":96073,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":11684},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95876,"byte_end":95945,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95950,"byte_end":96020,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96025,"byte_end":96064,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":11684},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95714,"byte_end":95726,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":11686},{"krate":0,"index":11689},{"krate":0,"index":11692}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95574,"byte_end":95625,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95626,"byte_end":95629,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":95630,"byte_end":95687,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1085},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96187,"byte_end":96201,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96139,"byte_end":96179,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96688,"byte_end":96698,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96379,"byte_end":96464,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96469,"byte_end":96540,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96545,"byte_end":96629,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96634,"byte_end":96662,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96667,"byte_end":96676,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":97048,"byte_end":97059,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96925,"byte_end":96994,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96999,"byte_end":97022,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":97027,"byte_end":97036,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11697},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99270,"byte_end":99282,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":11699}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1162},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100400,"byte_end":100406,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1164}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100280,"byte_end":100320,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100321,"byte_end":100388,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1167},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100993,"byte_end":101000,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100457,"byte_end":100528,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100529,"byte_end":100532,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100533,"byte_end":100599,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100600,"byte_end":100603,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100604,"byte_end":100618,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100619,"byte_end":100622,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100623,"byte_end":100630,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100631,"byte_end":100672,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100673,"byte_end":100706,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100707,"byte_end":100746,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100747,"byte_end":100750,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100751,"byte_end":100808,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100809,"byte_end":100852,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100853,"byte_end":100858,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100859,"byte_end":100862,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100863,"byte_end":100904,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100905,"byte_end":100967,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100968,"byte_end":100977,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100978,"byte_end":100985,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":101934,"byte_end":101947,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":11738}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1226},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105355,"byte_end":105369,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104167,"byte_end":104240,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104241,"byte_end":104365,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104366,"byte_end":104369,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104370,"byte_end":104383,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104384,"byte_end":104387,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104388,"byte_end":104455,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104456,"byte_end":104459,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104460,"byte_end":104626,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104627,"byte_end":104752,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104753,"byte_end":104756,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104757,"byte_end":104771,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104772,"byte_end":104775,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104776,"byte_end":104783,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104784,"byte_end":104825,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104826,"byte_end":104850,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104851,"byte_end":104854,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104855,"byte_end":104907,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104908,"byte_end":104941,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104942,"byte_end":104945,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":104946,"byte_end":105007,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105008,"byte_end":105038,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105039,"byte_end":105048,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105049,"byte_end":105056,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105057,"byte_end":105060,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105061,"byte_end":105085,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105086,"byte_end":105089,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105090,"byte_end":105097,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105098,"byte_end":105139,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105140,"byte_end":105175,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105176,"byte_end":105223,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105224,"byte_end":105240,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105241,"byte_end":105300,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105301,"byte_end":105329,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105330,"byte_end":105339,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":105340,"byte_end":105347,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11775},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105792,"byte_end":105797,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105641,"byte_end":105688,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105713,"byte_end":105780,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105920,"byte_end":105930,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105837,"byte_end":105894,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105899,"byte_end":105908,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106596,"byte_end":106601,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106350,"byte_end":106410,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106411,"byte_end":106414,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106415,"byte_end":106429,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106430,"byte_end":106433,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106434,"byte_end":106441,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106442,"byte_end":106483,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106484,"byte_end":106508,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106509,"byte_end":106512,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106513,"byte_end":106542,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106543,"byte_end":106570,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106571,"byte_end":106580,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106581,"byte_end":106588,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1270},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106936,"byte_end":106938,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106670,"byte_end":106737,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106738,"byte_end":106741,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106742,"byte_end":106756,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106757,"byte_end":106760,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106761,"byte_end":106768,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106769,"byte_end":106810,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106811,"byte_end":106835,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106836,"byte_end":106839,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106840,"byte_end":106878,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106879,"byte_end":106910,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106911,"byte_end":106920,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106921,"byte_end":106928,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1273},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107269,"byte_end":107272,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107002,"byte_end":107068,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107069,"byte_end":107072,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107073,"byte_end":107087,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107088,"byte_end":107091,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107092,"byte_end":107099,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107100,"byte_end":107141,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107142,"byte_end":107166,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107167,"byte_end":107170,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107171,"byte_end":107210,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107211,"byte_end":107243,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107244,"byte_end":107253,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":107254,"byte_end":107261,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11877},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109558,"byte_end":109562,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":11880},{"krate":0,"index":11881}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11922},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109628,"byte_end":109633,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":11926},{"krate":0,"index":11927},{"krate":0,"index":11928}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11979},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109705,"byte_end":109710,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":11984},{"krate":0,"index":11985},{"krate":0,"index":11986},{"krate":0,"index":11987}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12048},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109788,"byte_end":109793,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":12054},{"krate":0,"index":12055},{"krate":0,"index":12056},{"krate":0,"index":12057},{"krate":0,"index":12058}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1324},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110408,"byte_end":110412,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109831,"byte_end":109902,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109903,"byte_end":109906,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109907,"byte_end":109978,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":109979,"byte_end":110054,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110055,"byte_end":110058,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110059,"byte_end":110128,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110129,"byte_end":110155,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110156,"byte_end":110159,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110160,"byte_end":110174,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110175,"byte_end":110178,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110179,"byte_end":110186,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110187,"byte_end":110228,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110229,"byte_end":110253,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110254,"byte_end":110257,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110258,"byte_end":110282,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110283,"byte_end":110307,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110308,"byte_end":110342,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110343,"byte_end":110346,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110347,"byte_end":110382,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110383,"byte_end":110392,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110393,"byte_end":110400,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1327},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110958,"byte_end":110963,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110619,"byte_end":110671,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110672,"byte_end":110675,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110676,"byte_end":110690,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110691,"byte_end":110694,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110695,"byte_end":110702,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110703,"byte_end":110744,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110745,"byte_end":110769,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110770,"byte_end":110773,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110774,"byte_end":110798,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110799,"byte_end":110823,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110824,"byte_end":110848,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110849,"byte_end":110888,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110889,"byte_end":110892,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110893,"byte_end":110932,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110933,"byte_end":110942,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":110943,"byte_end":110950,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1331},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111625,"byte_end":111630,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111255,"byte_end":111307,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111308,"byte_end":111311,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111312,"byte_end":111326,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111327,"byte_end":111330,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111331,"byte_end":111338,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111339,"byte_end":111380,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111381,"byte_end":111405,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111406,"byte_end":111409,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111410,"byte_end":111434,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111435,"byte_end":111459,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111460,"byte_end":111484,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111485,"byte_end":111509,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111510,"byte_end":111552,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111553,"byte_end":111556,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111557,"byte_end":111599,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111600,"byte_end":111609,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111610,"byte_end":111617,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1336},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112395,"byte_end":112400,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":111994,"byte_end":112046,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112047,"byte_end":112050,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112051,"byte_end":112065,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112066,"byte_end":112069,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112070,"byte_end":112077,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112078,"byte_end":112119,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112120,"byte_end":112144,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112145,"byte_end":112148,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112149,"byte_end":112173,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112174,"byte_end":112198,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112199,"byte_end":112223,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112224,"byte_end":112248,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112249,"byte_end":112273,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112274,"byte_end":112319,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112320,"byte_end":112323,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112324,"byte_end":112369,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112370,"byte_end":112379,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join.rs","byte_start":112380,"byte_end":112387,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1417},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":113760,"byte_end":113767,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1419}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":113639,"byte_end":113706,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":113707,"byte_end":113748,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1430},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115862,"byte_end":115870,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114576,"byte_end":114656,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114657,"byte_end":114667,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114668,"byte_end":114671,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114672,"byte_end":114751,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114752,"byte_end":114832,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114833,"byte_end":114851,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114852,"byte_end":114855,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114856,"byte_end":114933,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114934,"byte_end":114991,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114992,"byte_end":114995,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114996,"byte_end":115010,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115011,"byte_end":115014,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115015,"byte_end":115097,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115098,"byte_end":115182,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115183,"byte_end":115267,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115268,"byte_end":115271,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115272,"byte_end":115341,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115342,"byte_end":115345,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115346,"byte_end":115414,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115415,"byte_end":115418,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115419,"byte_end":115496,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115497,"byte_end":115578,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115579,"byte_end":115582,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115583,"byte_end":115597,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115598,"byte_end":115601,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115602,"byte_end":115609,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115610,"byte_end":115651,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115652,"byte_end":115686,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115687,"byte_end":115690,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115691,"byte_end":115728,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115729,"byte_end":115732,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115733,"byte_end":115780,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115781,"byte_end":115784,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115785,"byte_end":115836,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115837,"byte_end":115846,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":115847,"byte_end":115854,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12129},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118323,"byte_end":118329,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":12132}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118185,"byte_end":118226,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118227,"byte_end":118294,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1479},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120593,"byte_end":120599,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118420,"byte_end":118490,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118491,"byte_end":118494,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118495,"byte_end":118573,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118574,"byte_end":118650,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118651,"byte_end":118723,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118724,"byte_end":118727,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118728,"byte_end":118800,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118801,"byte_end":118829,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118830,"byte_end":118833,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118834,"byte_end":118901,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118902,"byte_end":118966,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118967,"byte_end":119017,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119018,"byte_end":119021,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119022,"byte_end":119036,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119037,"byte_end":119040,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119041,"byte_end":119061,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119062,"byte_end":119065,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119066,"byte_end":119073,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119074,"byte_end":119115,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119116,"byte_end":119134,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119135,"byte_end":119151,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119152,"byte_end":119175,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119176,"byte_end":119197,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119198,"byte_end":119204,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119205,"byte_end":119208,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119209,"byte_end":119300,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119301,"byte_end":119326,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119327,"byte_end":119386,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119387,"byte_end":119396,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119397,"byte_end":119403,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119404,"byte_end":119429,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119430,"byte_end":119460,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119461,"byte_end":119467,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119468,"byte_end":119471,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119472,"byte_end":119518,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119519,"byte_end":119541,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119542,"byte_end":119564,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119565,"byte_end":119568,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119569,"byte_end":119631,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119632,"byte_end":119716,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119717,"byte_end":119790,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119791,"byte_end":119875,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119876,"byte_end":119949,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119950,"byte_end":119956,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119957,"byte_end":119960,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119961,"byte_end":119985,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119986,"byte_end":119995,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":119996,"byte_end":120003,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120004,"byte_end":120007,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120008,"byte_end":120034,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120035,"byte_end":120038,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120039,"byte_end":120046,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120047,"byte_end":120106,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120107,"byte_end":120110,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120111,"byte_end":120164,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120165,"byte_end":120168,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120169,"byte_end":120244,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120245,"byte_end":120277,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120278,"byte_end":120310,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120311,"byte_end":120316,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120317,"byte_end":120361,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120362,"byte_end":120388,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120389,"byte_end":120466,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120467,"byte_end":120546,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120547,"byte_end":120560,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120561,"byte_end":120571,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120572,"byte_end":120577,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120578,"byte_end":120585,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12137},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122056,"byte_end":122065,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":12139}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":121916,"byte_end":121959,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":121977,"byte_end":122044,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1529},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122845,"byte_end":122855,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122143,"byte_end":122209,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122210,"byte_end":122213,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122214,"byte_end":122294,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122295,"byte_end":122373,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122374,"byte_end":122442,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122443,"byte_end":122446,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122447,"byte_end":122527,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122528,"byte_end":122602,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122603,"byte_end":122606,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122607,"byte_end":122684,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122685,"byte_end":122742,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122743,"byte_end":122746,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122747,"byte_end":122759,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122760,"byte_end":122763,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122764,"byte_end":122837,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":123236,"byte_end":123246,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":123161,"byte_end":123224,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12213},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127007,"byte_end":127014,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":12216},{"krate":0,"index":12217}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12258},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127084,"byte_end":127092,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":12262},{"krate":0,"index":12263},{"krate":0,"index":12264}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12315},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127168,"byte_end":127176,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":12320},{"krate":0,"index":12321},{"krate":0,"index":12322},{"krate":0,"index":12323}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12384},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127258,"byte_end":127266,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":12390},{"krate":0,"index":12391},{"krate":0,"index":12392},{"krate":0,"index":12393},{"krate":0,"index":12394}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1585},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128539,"byte_end":128547,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127304,"byte_end":127377,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127378,"byte_end":127410,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127411,"byte_end":127414,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127415,"byte_end":127486,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127487,"byte_end":127563,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127564,"byte_end":127636,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127637,"byte_end":127653,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127654,"byte_end":127657,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127658,"byte_end":127727,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127728,"byte_end":127754,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127755,"byte_end":127758,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127759,"byte_end":127773,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127774,"byte_end":127777,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127778,"byte_end":127854,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127855,"byte_end":127891,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127892,"byte_end":127895,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127896,"byte_end":127903,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127904,"byte_end":127945,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127946,"byte_end":127970,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127971,"byte_end":127974,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":127975,"byte_end":128020,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128021,"byte_end":128066,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128067,"byte_end":128105,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128106,"byte_end":128109,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128110,"byte_end":128149,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128150,"byte_end":128159,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128160,"byte_end":128167,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128168,"byte_end":128171,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128172,"byte_end":128242,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128243,"byte_end":128258,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128259,"byte_end":128262,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128263,"byte_end":128270,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128271,"byte_end":128312,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128313,"byte_end":128337,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128338,"byte_end":128341,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128342,"byte_end":128387,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128388,"byte_end":128434,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128435,"byte_end":128473,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128474,"byte_end":128477,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128478,"byte_end":128513,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128514,"byte_end":128523,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128524,"byte_end":128531,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1588},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129203,"byte_end":129212,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128785,"byte_end":128845,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128846,"byte_end":128849,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128850,"byte_end":128864,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128865,"byte_end":128868,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128869,"byte_end":128876,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128877,"byte_end":128918,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128919,"byte_end":128943,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128944,"byte_end":128947,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128948,"byte_end":128993,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":128994,"byte_end":129039,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129040,"byte_end":129085,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129086,"byte_end":129129,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129130,"byte_end":129133,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129134,"byte_end":129177,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129178,"byte_end":129187,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129188,"byte_end":129195,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1592},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130040,"byte_end":130049,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129570,"byte_end":129630,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129631,"byte_end":129634,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129635,"byte_end":129649,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129650,"byte_end":129653,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129654,"byte_end":129661,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129662,"byte_end":129703,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129704,"byte_end":129728,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129729,"byte_end":129732,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129733,"byte_end":129778,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129779,"byte_end":129824,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129825,"byte_end":129870,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129871,"byte_end":129916,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129917,"byte_end":129963,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129964,"byte_end":129967,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":129968,"byte_end":130014,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130015,"byte_end":130024,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130025,"byte_end":130032,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1597},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":131021,"byte_end":131030,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130499,"byte_end":130559,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130560,"byte_end":130563,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130564,"byte_end":130578,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130579,"byte_end":130582,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130583,"byte_end":130590,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130591,"byte_end":130632,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130633,"byte_end":130657,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130658,"byte_end":130661,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130662,"byte_end":130707,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130708,"byte_end":130753,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130754,"byte_end":130799,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130800,"byte_end":130845,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130846,"byte_end":130891,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130892,"byte_end":130941,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130942,"byte_end":130945,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130946,"byte_end":130995,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":130996,"byte_end":131005,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join.rs","byte_start":131006,"byte_end":131013,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132522,"byte_end":132532,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1682}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132397,"byte_end":132442,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132443,"byte_end":132510,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1686},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134125,"byte_end":134137,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132876,"byte_end":132955,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132956,"byte_end":132986,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132987,"byte_end":132990,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132991,"byte_end":133070,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133071,"byte_end":133151,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133152,"byte_end":133170,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133171,"byte_end":133174,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133175,"byte_end":133253,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133254,"byte_end":133334,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133335,"byte_end":133409,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133410,"byte_end":133433,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133434,"byte_end":133437,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133438,"byte_end":133515,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133516,"byte_end":133573,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133574,"byte_end":133577,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133578,"byte_end":133592,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133593,"byte_end":133596,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133597,"byte_end":133604,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133605,"byte_end":133646,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133647,"byte_end":133693,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133694,"byte_end":133697,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133698,"byte_end":133721,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133722,"byte_end":133756,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133757,"byte_end":133791,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133792,"byte_end":133826,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133827,"byte_end":133833,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133834,"byte_end":133837,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133838,"byte_end":133901,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133902,"byte_end":133905,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133906,"byte_end":133929,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133930,"byte_end":133964,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":133965,"byte_end":134000,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134001,"byte_end":134035,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134036,"byte_end":134042,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134043,"byte_end":134046,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134047,"byte_end":134099,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134100,"byte_end":134109,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134110,"byte_end":134117,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12465},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136035,"byte_end":136044,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":12468}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":135893,"byte_end":135938,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":135939,"byte_end":136006,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1732},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137629,"byte_end":137639,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136138,"byte_end":136208,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136209,"byte_end":136212,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136213,"byte_end":136291,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136292,"byte_end":136368,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136369,"byte_end":136441,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136442,"byte_end":136445,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136446,"byte_end":136518,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136519,"byte_end":136547,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136548,"byte_end":136551,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136552,"byte_end":136619,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136620,"byte_end":136691,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136692,"byte_end":136742,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136743,"byte_end":136746,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136747,"byte_end":136761,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136762,"byte_end":136765,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136766,"byte_end":136773,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136774,"byte_end":136858,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136859,"byte_end":136862,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136863,"byte_end":136920,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136921,"byte_end":136924,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136925,"byte_end":137007,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137008,"byte_end":137065,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137066,"byte_end":137123,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137124,"byte_end":137150,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137151,"byte_end":137156,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137157,"byte_end":137252,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137253,"byte_end":137276,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137277,"byte_end":137357,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137358,"byte_end":137439,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137440,"byte_end":137510,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137511,"byte_end":137582,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137583,"byte_end":137596,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137597,"byte_end":137607,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137608,"byte_end":137613,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137614,"byte_end":137621,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12473},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139270,"byte_end":139278,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":12475}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139131,"byte_end":139173,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139191,"byte_end":139258,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1782},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":140000,"byte_end":140009,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139355,"byte_end":139449,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139450,"byte_end":139453,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139454,"byte_end":139543,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139544,"byte_end":139628,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139629,"byte_end":139710,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139711,"byte_end":139756,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139757,"byte_end":139760,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139761,"byte_end":139839,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139840,"byte_end":139897,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139898,"byte_end":139901,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139902,"byte_end":139914,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139915,"byte_end":139918,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139919,"byte_end":139992,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12482},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142752,"byte_end":142756,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142719,"byte_end":142747,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12485},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142812,"byte_end":142817,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142778,"byte_end":142807,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":12479},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142700,"byte_end":142706,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":12482},{"krate":0,"index":12485}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142177,"byte_end":142283,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142284,"byte_end":142287,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142288,"byte_end":142369,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142370,"byte_end":142373,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142374,"byte_end":142385,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142386,"byte_end":142418,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142419,"byte_end":142422,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142423,"byte_end":142464,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142465,"byte_end":142485,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142486,"byte_end":142489,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142490,"byte_end":142513,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142514,"byte_end":142553,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142554,"byte_end":142566,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142567,"byte_end":142607,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142608,"byte_end":142614,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142615,"byte_end":142618,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142619,"byte_end":142649,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142650,"byte_end":142658,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142659,"byte_end":142666,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143371,"byte_end":143383,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143223,"byte_end":143281,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143286,"byte_end":143289,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143294,"byte_end":143359,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143763,"byte_end":143776,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143614,"byte_end":143672,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143677,"byte_end":143680,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143685,"byte_end":143751,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":144064,"byte_end":144074,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143991,"byte_end":144052,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1951},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150678,"byte_end":150687,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150308,"byte_end":150395,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150396,"byte_end":150399,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150400,"byte_end":150476,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150477,"byte_end":150530,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150531,"byte_end":150534,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150535,"byte_end":150612,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/abortable.rs","byte_start":150613,"byte_end":150670,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1985},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4241},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4256},{"krate":0,"index":4259},{"krate":0,"index":4262},{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":4271},{"krate":0,"index":4274},{"krate":0,"index":4277},{"krate":0,"index":4280},{"krate":0,"index":4283},{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4292},{"krate":0,"index":4295},{"krate":0,"index":4298},{"krate":0,"index":4301},{"krate":0,"index":4304},{"krate":0,"index":4307},{"krate":0,"index":4310},{"krate":0,"index":4313},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4350},{"krate":0,"index":4353},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4360},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":5613},{"krate":0,"index":5614},{"krate":0,"index":5617},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5629},{"krate":0,"index":5632},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5641},{"krate":0,"index":5644},{"krate":0,"index":5647},{"krate":0,"index":5650},{"krate":0,"index":5653},{"krate":0,"index":5656},{"krate":0,"index":5659},{"krate":0,"index":5662},{"krate":0,"index":5665},{"krate":0,"index":5668},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5684},{"krate":0,"index":5687},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5697},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5727},{"krate":0,"index":5730},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5767},{"krate":0,"index":5770},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5811},{"krate":0,"index":5814},{"krate":0,"index":5853},{"krate":0,"index":5854},{"krate":0,"index":5857},{"krate":0,"index":5860},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5907},{"krate":0,"index":5910},{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5953},{"krate":0,"index":5956},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5996},{"krate":0,"index":5999},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6031},{"krate":0,"index":6034},{"krate":0,"index":6088},{"krate":0,"index":6089},{"krate":0,"index":6092},{"krate":0,"index":6095},{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6239},{"krate":0,"index":6240},{"krate":0,"index":6243},{"krate":0,"index":6246},{"krate":0,"index":6353},{"krate":0,"index":6356},{"krate":0,"index":6759},{"krate":0,"index":6762},{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6891},{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6911},{"krate":0,"index":6914},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6920},{"krate":0,"index":6923}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150939,"byte_end":150964,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150965,"byte_end":150968,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150969,"byte_end":150994,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150995,"byte_end":150998,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":150999,"byte_end":151072,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151073,"byte_end":151098,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151099,"byte_end":151178,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151179,"byte_end":151216,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151217,"byte_end":151290,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":151291,"byte_end":151321,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":12496},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":208792,"byte_end":208797,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12499},{"krate":0,"index":12500}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12545},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":210922,"byte_end":210929,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":12548},{"krate":0,"index":12549}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12594},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":212363,"byte_end":212368,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":12598},{"krate":0,"index":12599},{"krate":0,"index":12600}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12656},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":214202,"byte_end":214208,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":12658},{"krate":0,"index":12659}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12696},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":215880,"byte_end":215885,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":12698},{"krate":0,"index":12699}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12733},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":217195,"byte_end":217200,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":12735},{"krate":0,"index":12736}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12773},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":218847,"byte_end":218856,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":12775},{"krate":0,"index":12776}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12821},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":220488,"byte_end":220494,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":12825},{"krate":0,"index":12826},{"krate":0,"index":12827},{"krate":0,"index":12828}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12890},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":223888,"byte_end":223897,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":12894},{"krate":0,"index":12895},{"krate":0,"index":12896}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12955},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":226903,"byte_end":226910,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":12958},{"krate":0,"index":12959}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13014},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":156845,"byte_end":156852,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":13016}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13075},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":228727,"byte_end":228731,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":13080},{"krate":0,"index":13081},{"krate":0,"index":13082},{"krate":0,"index":13083}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13144},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":231188,"byte_end":231191,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":13148},{"krate":0,"index":13149},{"krate":0,"index":13150},{"krate":0,"index":13151}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13205},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":233764,"byte_end":233767,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":13209},{"krate":0,"index":13210},{"krate":0,"index":13211},{"krate":0,"index":13212}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13266},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":236433,"byte_end":236440,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":13270},{"krate":0,"index":13271},{"krate":0,"index":13272}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13331},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":157566,"byte_end":157573,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":13334}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13389},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":238676,"byte_end":238683,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":13393},{"krate":0,"index":13394},{"krate":0,"index":13395}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13446},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":240640,"byte_end":240644,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":13448},{"krate":0,"index":13449}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":241096,"byte_end":241103,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":240827,"byte_end":240889,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":240894,"byte_end":240897,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":240902,"byte_end":240970,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":240975,"byte_end":241041,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":241046,"byte_end":241084,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":13494},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242462,"byte_end":242474,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":13496}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242292,"byte_end":242365,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242383,"byte_end":242450,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243037,"byte_end":243044,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242645,"byte_end":242718,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242723,"byte_end":242740,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242745,"byte_end":242748,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242753,"byte_end":242834,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242839,"byte_end":242921,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242926,"byte_end":243005,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243010,"byte_end":243025,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243655,"byte_end":243662,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243109,"byte_end":243176,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243181,"byte_end":243212,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243217,"byte_end":243220,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243225,"byte_end":243298,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243303,"byte_end":243358,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243363,"byte_end":243366,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243371,"byte_end":243452,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243457,"byte_end":243539,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243544,"byte_end":243623,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243628,"byte_end":243643,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244288,"byte_end":244299,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243735,"byte_end":243809,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243814,"byte_end":243845,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243850,"byte_end":243853,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243858,"byte_end":243931,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243936,"byte_end":243991,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":243996,"byte_end":243999,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244004,"byte_end":244085,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244090,"byte_end":244172,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244177,"byte_end":244256,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244261,"byte_end":244276,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244932,"byte_end":244942,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244412,"byte_end":244474,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244479,"byte_end":244482,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244487,"byte_end":244559,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244564,"byte_end":244635,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244640,"byte_end":244643,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244648,"byte_end":244729,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244734,"byte_end":244816,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244821,"byte_end":244900,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":244905,"byte_end":244920,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13503},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158192,"byte_end":158199,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":13506}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13578},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":245966,"byte_end":245969,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":13581},{"krate":0,"index":13582}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13635},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":158560,"byte_end":158567,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":13639}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13724},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247629,"byte_end":247633,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":13727}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247473,"byte_end":247532,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247550,"byte_end":247617,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13732},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248641,"byte_end":248655,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":13735}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248457,"byte_end":248532,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248533,"byte_end":248544,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248562,"byte_end":248629,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13740},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250246,"byte_end":250254,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":13742},{"krate":0,"index":13743}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250687,"byte_end":250691,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250539,"byte_end":250605,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250610,"byte_end":250675,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251016,"byte_end":251025,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250778,"byte_end":250840,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250845,"byte_end":250848,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250853,"byte_end":250926,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250931,"byte_end":251004,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252340,"byte_end":252348,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251461,"byte_end":251535,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251540,"byte_end":251605,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251610,"byte_end":251613,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251618,"byte_end":251632,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251637,"byte_end":251640,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251645,"byte_end":251652,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251657,"byte_end":251698,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251703,"byte_end":251746,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251751,"byte_end":251776,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251781,"byte_end":251784,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251789,"byte_end":251845,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251850,"byte_end":251871,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251876,"byte_end":251879,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251884,"byte_end":251947,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":251952,"byte_end":252006,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252011,"byte_end":252014,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252019,"byte_end":252095,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252100,"byte_end":252155,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252160,"byte_end":252180,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252185,"byte_end":252204,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252209,"byte_end":252218,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252223,"byte_end":252228,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252233,"byte_end":252236,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252241,"byte_end":252302,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252307,"byte_end":252316,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252321,"byte_end":252328,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252523,"byte_end":252536,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252441,"byte_end":252511,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254527,"byte_end":254534,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":252999,"byte_end":253072,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253077,"byte_end":253111,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253116,"byte_end":253119,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253124,"byte_end":253199,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253204,"byte_end":253244,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253249,"byte_end":253252,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253257,"byte_end":253271,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253276,"byte_end":253279,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253284,"byte_end":253324,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253329,"byte_end":253332,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253337,"byte_end":253344,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253349,"byte_end":253390,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253395,"byte_end":253438,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253443,"byte_end":253468,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253473,"byte_end":253476,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253481,"byte_end":253528,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253533,"byte_end":253554,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253559,"byte_end":253612,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253617,"byte_end":253685,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253690,"byte_end":253763,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253768,"byte_end":253833,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253838,"byte_end":253922,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253927,"byte_end":253972,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253977,"byte_end":253986,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":253991,"byte_end":253998,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254003,"byte_end":254006,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254011,"byte_end":254047,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254052,"byte_end":254055,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254060,"byte_end":254067,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254072,"byte_end":254113,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254118,"byte_end":254161,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254166,"byte_end":254191,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254196,"byte_end":254199,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254204,"byte_end":254252,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254257,"byte_end":254278,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254283,"byte_end":254322,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254327,"byte_end":254392,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254397,"byte_end":254438,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254443,"byte_end":254489,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254494,"byte_end":254503,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254508,"byte_end":254515,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255558,"byte_end":255568,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254700,"byte_end":254773,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254778,"byte_end":254802,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254807,"byte_end":254810,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254815,"byte_end":254828,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254833,"byte_end":254836,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254841,"byte_end":254881,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254886,"byte_end":254889,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254894,"byte_end":254901,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254906,"byte_end":254947,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":254952,"byte_end":254995,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255000,"byte_end":255025,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255030,"byte_end":255033,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255038,"byte_end":255085,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255090,"byte_end":255111,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255116,"byte_end":255169,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255174,"byte_end":255236,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255241,"byte_end":255314,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255319,"byte_end":255378,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255383,"byte_end":255470,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255475,"byte_end":255520,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255525,"byte_end":255534,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255539,"byte_end":255546,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13788},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":257086,"byte_end":257090,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":13791}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13829},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":258148,"byte_end":258155,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":13832}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13870},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":259238,"byte_end":259244,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":13874}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13919},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":261108,"byte_end":261116,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":13923}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13968},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":262733,"byte_end":262737,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":13970},{"krate":0,"index":13971}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14016},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":264500,"byte_end":264509,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":14020},{"krate":0,"index":14021},{"krate":0,"index":14022},{"krate":0,"index":14023},{"krate":0,"index":14024}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14089},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":268013,"byte_end":268017,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":14091},{"krate":0,"index":14092}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14137},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":270053,"byte_end":270062,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":14141},{"krate":0,"index":14142},{"krate":0,"index":14143},{"krate":0,"index":14144},{"krate":0,"index":14145}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14210},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":273542,"byte_end":273551,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":14213},{"krate":0,"index":14214},{"krate":0,"index":14215},{"krate":0,"index":14216}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274835,"byte_end":274846,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274535,"byte_end":274589,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274594,"byte_end":274688,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274693,"byte_end":274756,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274761,"byte_end":274823,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276130,"byte_end":276141,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274983,"byte_end":275048,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275053,"byte_end":275110,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275115,"byte_end":275118,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275123,"byte_end":275188,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275193,"byte_end":275253,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275258,"byte_end":275261,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275266,"byte_end":275334,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275339,"byte_end":275382,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275387,"byte_end":275390,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275395,"byte_end":275409,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275414,"byte_end":275417,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275422,"byte_end":275429,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275434,"byte_end":275475,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275480,"byte_end":275504,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275509,"byte_end":275552,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275557,"byte_end":275585,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275590,"byte_end":275593,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275598,"byte_end":275636,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275641,"byte_end":275644,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275649,"byte_end":275667,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275672,"byte_end":275714,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275719,"byte_end":275734,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275739,"byte_end":275758,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275763,"byte_end":275788,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275793,"byte_end":275809,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275814,"byte_end":275847,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275852,"byte_end":275861,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275866,"byte_end":275873,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275878,"byte_end":275881,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275886,"byte_end":275935,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275940,"byte_end":275994,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":275999,"byte_end":276002,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276007,"byte_end":276054,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276059,"byte_end":276092,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276097,"byte_end":276106,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276111,"byte_end":276118,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276317,"byte_end":276327,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276220,"byte_end":276281,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276286,"byte_end":276305,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":14271},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":278259,"byte_end":278263,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":14275},{"krate":0,"index":14276},{"krate":0,"index":14277}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14336},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":280803,"byte_end":280806,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":14339},{"krate":0,"index":14340},{"krate":0,"index":14341},{"krate":0,"index":14342}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281324,"byte_end":281331,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281216,"byte_end":281290,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281295,"byte_end":281312,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281687,"byte_end":281694,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281425,"byte_end":281493,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281498,"byte_end":281529,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281534,"byte_end":281537,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281542,"byte_end":281615,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281620,"byte_end":281675,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3619},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282069,"byte_end":282080,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281800,"byte_end":281875,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281880,"byte_end":281911,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281916,"byte_end":281919,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281924,"byte_end":281997,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282002,"byte_end":282057,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282486,"byte_end":282496,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282250,"byte_end":282313,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282318,"byte_end":282321,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282326,"byte_end":282398,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282403,"byte_end":282474,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":14393},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":285325,"byte_end":285331,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":14395},{"krate":0,"index":14396},{"krate":0,"index":14397}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14445},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":288434,"byte_end":288445,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":14447},{"krate":0,"index":14448},{"krate":0,"index":14449}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14497},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":291991,"byte_end":291995,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":14502},{"krate":0,"index":14503},{"krate":0,"index":14504}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14570},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":295419,"byte_end":295434,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14572},{"krate":0,"index":14573},{"krate":0,"index":14574}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14619},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":298745,"byte_end":298753,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":14621},{"krate":0,"index":14622},{"krate":0,"index":14623}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14668},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":301748,"byte_end":301765,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14672},{"krate":0,"index":14673},{"krate":0,"index":14674},{"krate":0,"index":14675}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14729},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305210,"byte_end":305221,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305047,"byte_end":305084,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305102,"byte_end":305150,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4034},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305548,"byte_end":305555,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"pub fn reunite<Item>(Self, SplitSink<S, Item>)\n-> Result<S, ReuniteError<S, Item>> where S: Sink<Item>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305311,"byte_end":305379,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305384,"byte_end":305458,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305463,"byte_end":305536,"line_start":21,"line_end":21,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":14736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306230,"byte_end":306239,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":14739},{"krate":0,"index":14740}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306071,"byte_end":306106,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306124,"byte_end":306170,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4049},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306642,"byte_end":306649,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"pub fn reunite(Self, SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306405,"byte_end":306473,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306478,"byte_end":306552,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306557,"byte_end":306630,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4067},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309103,"byte_end":309115,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":308904,"byte_end":308982,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":308983,"byte_end":309043,"line_start":127,"line_end":127,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4071},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309125,"byte_end":309147,"line_start":129,"line_end":129,"column_start":34,"column_end":56},"name":"0","qualname":"::stream::stream::split::ReuniteError::0","value":"stream::stream::split::SplitSink<T, Item>","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4072},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309149,"byte_end":309167,"line_start":129,"line_end":129,"column_start":58,"column_end":76},"name":"1","qualname":"::stream::stream::split::ReuniteError::1","value":"stream::stream::split::SplitStream<T>","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14745},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":310085,"byte_end":310096,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":14747},{"krate":0,"index":14748}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4146},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162032,"byte_end":162041,"line_start":230,"line_end":230,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4152},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4160},{"krate":0,"index":4163},{"krate":0,"index":4165},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4173},{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4200},{"krate":0,"index":4203},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4214},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4220},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4227},{"krate":0,"index":4229},{"krate":0,"index":4231},{"krate":0,"index":4233},{"krate":0,"index":4235},{"krate":0,"index":4236}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161921,"byte_end":161995,"line_start":228,"line_end":228,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161996,"byte_end":162021,"line_start":229,"line_end":229,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4147},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162951,"byte_end":162955,"line_start":254,"line_end":254,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162056,"byte_end":162122,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162127,"byte_end":162130,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162135,"byte_end":162203,"line_start":233,"line_end":233,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162208,"byte_end":162283,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162288,"byte_end":162363,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162368,"byte_end":162422,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162427,"byte_end":162502,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162507,"byte_end":162517,"line_start":238,"line_end":238,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162522,"byte_end":162525,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162530,"byte_end":162544,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162549,"byte_end":162552,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162557,"byte_end":162564,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162569,"byte_end":162610,"line_start":243,"line_end":243,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162615,"byte_end":162658,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162663,"byte_end":162666,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162671,"byte_end":162712,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162717,"byte_end":162720,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162725,"byte_end":162770,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162775,"byte_end":162820,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162825,"byte_end":162870,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162875,"byte_end":162917,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162922,"byte_end":162931,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162936,"byte_end":162943,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4148},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164194,"byte_end":164205,"line_start":289,"line_end":289,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163097,"byte_end":163169,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163174,"byte_end":163235,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163240,"byte_end":163243,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163248,"byte_end":163323,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163328,"byte_end":163382,"line_start":265,"line_end":265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163387,"byte_end":163390,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163395,"byte_end":163468,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163473,"byte_end":163535,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163540,"byte_end":163615,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163620,"byte_end":163674,"line_start":270,"line_end":270,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163679,"byte_end":163754,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163759,"byte_end":163769,"line_start":272,"line_end":272,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163774,"byte_end":163777,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163782,"byte_end":163796,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163801,"byte_end":163804,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163809,"byte_end":163816,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163821,"byte_end":163862,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163867,"byte_end":163910,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163915,"byte_end":163918,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163923,"byte_end":163960,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163965,"byte_end":163968,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":163973,"byte_end":164025,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164030,"byte_end":164060,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164065,"byte_end":164068,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164073,"byte_end":164125,"line_start":285,"line_end":285,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164130,"byte_end":164160,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164165,"byte_end":164174,"line_start":287,"line_end":287,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164179,"byte_end":164186,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4149},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165206,"byte_end":165209,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164370,"byte_end":164445,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164450,"byte_end":164473,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164478,"byte_end":164481,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164486,"byte_end":164558,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164563,"byte_end":164627,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164632,"byte_end":164669,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164674,"byte_end":164677,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164682,"byte_end":164758,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164763,"byte_end":164834,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164839,"byte_end":164860,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164865,"byte_end":164868,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164873,"byte_end":164887,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164892,"byte_end":164895,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164900,"byte_end":164907,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164912,"byte_end":164953,"line_start":310,"line_end":310,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":164958,"byte_end":165001,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165006,"byte_end":165009,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165014,"byte_end":165051,"line_start":313,"line_end":313,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165056,"byte_end":165095,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165100,"byte_end":165103,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165108,"byte_end":165172,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165177,"byte_end":165186,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165191,"byte_end":165198,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4152},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166769,"byte_end":166778,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165376,"byte_end":165447,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165452,"byte_end":165471,"line_start":328,"line_end":328,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165476,"byte_end":165479,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165484,"byte_end":165549,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165554,"byte_end":165623,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165628,"byte_end":165639,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165644,"byte_end":165647,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165652,"byte_end":165727,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165732,"byte_end":165814,"line_start":335,"line_end":335,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165819,"byte_end":165837,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165842,"byte_end":165845,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165850,"byte_end":165873,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165878,"byte_end":165881,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165886,"byte_end":165961,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":165966,"byte_end":166053,"line_start":341,"line_end":341,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166058,"byte_end":166114,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166119,"byte_end":166122,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166127,"byte_end":166139,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166144,"byte_end":166147,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166152,"byte_end":166221,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166226,"byte_end":166251,"line_start":347,"line_end":347,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166256,"byte_end":166259,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166264,"byte_end":166278,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166283,"byte_end":166286,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166291,"byte_end":166298,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166303,"byte_end":166344,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166349,"byte_end":166392,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166397,"byte_end":166400,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166405,"byte_end":166456,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166461,"byte_end":166464,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166469,"byte_end":166509,"line_start":357,"line_end":357,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166514,"byte_end":166517,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166522,"byte_end":166574,"line_start":359,"line_end":359,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166579,"byte_end":166631,"line_start":360,"line_end":360,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166636,"byte_end":166688,"line_start":361,"line_end":361,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166693,"byte_end":166735,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166740,"byte_end":166749,"line_start":363,"line_end":363,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166754,"byte_end":166761,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168007,"byte_end":168013,"line_start":398,"line_end":398,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166922,"byte_end":166994,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":166999,"byte_end":167026,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167031,"byte_end":167034,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167039,"byte_end":167114,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167119,"byte_end":167190,"line_start":376,"line_end":376,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167195,"byte_end":167267,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167272,"byte_end":167346,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167351,"byte_end":167409,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167414,"byte_end":167417,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167422,"byte_end":167498,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167503,"byte_end":167577,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167582,"byte_end":167603,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167608,"byte_end":167611,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167616,"byte_end":167630,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167635,"byte_end":167638,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167643,"byte_end":167650,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167655,"byte_end":167696,"line_start":388,"line_end":388,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167701,"byte_end":167725,"line_start":389,"line_end":389,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167730,"byte_end":167773,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167778,"byte_end":167781,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167786,"byte_end":167824,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167829,"byte_end":167890,"line_start":393,"line_end":393,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167895,"byte_end":167898,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167903,"byte_end":167973,"line_start":395,"line_end":395,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167978,"byte_end":167987,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":167992,"byte_end":167999,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4156},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169338,"byte_end":169348,"line_start":432,"line_end":432,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168241,"byte_end":168316,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168321,"byte_end":168397,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168402,"byte_end":168405,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168410,"byte_end":168485,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168490,"byte_end":168565,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168570,"byte_end":168646,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168651,"byte_end":168716,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168721,"byte_end":168724,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168729,"byte_end":168805,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168810,"byte_end":168884,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168889,"byte_end":168914,"line_start":417,"line_end":417,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168919,"byte_end":168922,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168927,"byte_end":168941,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168946,"byte_end":168953,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":168958,"byte_end":168999,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169004,"byte_end":169047,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169052,"byte_end":169055,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169060,"byte_end":169098,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169103,"byte_end":169153,"line_start":425,"line_end":425,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169158,"byte_end":169209,"line_start":426,"line_end":426,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169214,"byte_end":169221,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169226,"byte_end":169229,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169234,"byte_end":169304,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169309,"byte_end":169318,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169323,"byte_end":169330,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170377,"byte_end":170381,"line_start":463,"line_end":463,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169580,"byte_end":169653,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169658,"byte_end":169686,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169691,"byte_end":169694,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169699,"byte_end":169773,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169778,"byte_end":169845,"line_start":445,"line_end":445,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169850,"byte_end":169895,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169900,"byte_end":169903,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169908,"byte_end":169984,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":169989,"byte_end":170015,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170020,"byte_end":170023,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170028,"byte_end":170042,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170047,"byte_end":170050,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170055,"byte_end":170062,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170067,"byte_end":170108,"line_start":454,"line_end":454,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170113,"byte_end":170156,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170161,"byte_end":170164,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170169,"byte_end":170206,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170211,"byte_end":170266,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170271,"byte_end":170274,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170279,"byte_end":170343,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170348,"byte_end":170357,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170362,"byte_end":170369,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171315,"byte_end":171322,"line_start":497,"line_end":497,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170590,"byte_end":170644,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170649,"byte_end":170704,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170709,"byte_end":170712,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170717,"byte_end":170785,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170790,"byte_end":170793,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170798,"byte_end":170812,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170817,"byte_end":170820,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170825,"byte_end":170832,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170837,"byte_end":170878,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170883,"byte_end":170914,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170919,"byte_end":170954,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170959,"byte_end":170979,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170984,"byte_end":170987,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":170992,"byte_end":171029,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171034,"byte_end":171037,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171042,"byte_end":171069,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171074,"byte_end":171098,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171103,"byte_end":171145,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171150,"byte_end":171159,"line_start":490,"line_end":490,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171164,"byte_end":171171,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171176,"byte_end":171179,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171184,"byte_end":171232,"line_start":493,"line_end":493,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171237,"byte_end":171281,"line_start":494,"line_end":494,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171286,"byte_end":171295,"line_start":495,"line_end":495,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171300,"byte_end":171307,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4165},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172441,"byte_end":172446,"line_start":534,"line_end":534,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171480,"byte_end":171531,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171536,"byte_end":171571,"line_start":505,"line_end":505,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171576,"byte_end":171579,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171584,"byte_end":171638,"line_start":507,"line_end":507,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171643,"byte_end":171700,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171705,"byte_end":171741,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171746,"byte_end":171749,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171754,"byte_end":171822,"line_start":511,"line_end":511,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171827,"byte_end":171830,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171835,"byte_end":171849,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171854,"byte_end":171857,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171862,"byte_end":171869,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171874,"byte_end":171915,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171920,"byte_end":171951,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171956,"byte_end":171991,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":171996,"byte_end":172016,"line_start":519,"line_end":519,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172021,"byte_end":172024,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172029,"byte_end":172066,"line_start":521,"line_end":521,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172071,"byte_end":172074,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172079,"byte_end":172106,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172111,"byte_end":172154,"line_start":524,"line_end":524,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172159,"byte_end":172202,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172207,"byte_end":172250,"line_start":526,"line_end":526,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172255,"byte_end":172262,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172267,"byte_end":172270,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172275,"byte_end":172329,"line_start":529,"line_end":529,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172334,"byte_end":172368,"line_start":530,"line_end":530,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172373,"byte_end":172407,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172412,"byte_end":172421,"line_start":532,"line_end":532,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172426,"byte_end":172433,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173742,"byte_end":173748,"line_start":575,"line_end":575,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172707,"byte_end":172769,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172774,"byte_end":172838,"line_start":544,"line_end":544,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172843,"byte_end":172846,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172851,"byte_end":172915,"line_start":546,"line_end":546,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172920,"byte_end":172985,"line_start":547,"line_end":547,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":172990,"byte_end":173036,"line_start":548,"line_end":548,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173041,"byte_end":173044,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173049,"byte_end":173098,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173103,"byte_end":173143,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173148,"byte_end":173151,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173156,"byte_end":173170,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173175,"byte_end":173178,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173183,"byte_end":173190,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173195,"byte_end":173236,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173241,"byte_end":173272,"line_start":557,"line_end":557,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173277,"byte_end":173312,"line_start":558,"line_end":558,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173317,"byte_end":173337,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173342,"byte_end":173345,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173350,"byte_end":173387,"line_start":561,"line_end":561,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173392,"byte_end":173395,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173400,"byte_end":173427,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173432,"byte_end":173463,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173468,"byte_end":173494,"line_start":565,"line_end":565,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173499,"byte_end":173565,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173570,"byte_end":173579,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173584,"byte_end":173591,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173596,"byte_end":173599,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173604,"byte_end":173639,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173644,"byte_end":173647,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173652,"byte_end":173708,"line_start":572,"line_end":572,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173713,"byte_end":173722,"line_start":573,"line_end":573,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173727,"byte_end":173734,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174768,"byte_end":174773,"line_start":608,"line_end":608,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":173978,"byte_end":174044,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174049,"byte_end":174052,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174057,"byte_end":174080,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174085,"byte_end":174088,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174093,"byte_end":174169,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174174,"byte_end":174249,"line_start":588,"line_end":588,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174254,"byte_end":174331,"line_start":589,"line_end":589,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174336,"byte_end":174339,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174344,"byte_end":174356,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174361,"byte_end":174364,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174369,"byte_end":174443,"line_start":593,"line_end":593,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174448,"byte_end":174461,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174466,"byte_end":174469,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174474,"byte_end":174488,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174493,"byte_end":174496,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174501,"byte_end":174508,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174513,"byte_end":174554,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174559,"byte_end":174602,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174607,"byte_end":174610,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174615,"byte_end":174653,"line_start":602,"line_end":602,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174658,"byte_end":174695,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174700,"byte_end":174703,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174708,"byte_end":174734,"line_start":605,"line_end":605,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174739,"byte_end":174748,"line_start":606,"line_end":606,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174753,"byte_end":174760,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175729,"byte_end":175734,"line_start":638,"line_end":638,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174895,"byte_end":174926,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174931,"byte_end":174934,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":174939,"byte_end":175006,"line_start":617,"line_end":617,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175011,"byte_end":175083,"line_start":618,"line_end":618,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175088,"byte_end":175145,"line_start":619,"line_end":619,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175150,"byte_end":175153,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175158,"byte_end":175172,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175177,"byte_end":175180,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175185,"byte_end":175192,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175197,"byte_end":175238,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175243,"byte_end":175286,"line_start":625,"line_end":625,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175291,"byte_end":175313,"line_start":626,"line_end":626,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175318,"byte_end":175365,"line_start":627,"line_end":627,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175370,"byte_end":175373,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175378,"byte_end":175419,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175424,"byte_end":175465,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175470,"byte_end":175511,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175516,"byte_end":175557,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175562,"byte_end":175603,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175608,"byte_end":175649,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175654,"byte_end":175695,"line_start":635,"line_end":635,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175700,"byte_end":175709,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175714,"byte_end":175721,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176684,"byte_end":176688,"line_start":665,"line_end":665,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175869,"byte_end":175936,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175941,"byte_end":175993,"line_start":646,"line_end":646,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":175998,"byte_end":176001,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176006,"byte_end":176076,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176081,"byte_end":176157,"line_start":649,"line_end":649,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176162,"byte_end":176238,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176243,"byte_end":176313,"line_start":651,"line_end":651,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176318,"byte_end":176344,"line_start":652,"line_end":652,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176349,"byte_end":176352,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176357,"byte_end":176371,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176376,"byte_end":176379,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176384,"byte_end":176391,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176396,"byte_end":176437,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176442,"byte_end":176485,"line_start":658,"line_end":658,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176490,"byte_end":176493,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176498,"byte_end":176541,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176546,"byte_end":176615,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176620,"byte_end":176650,"line_start":662,"line_end":662,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176655,"byte_end":176664,"line_start":663,"line_end":663,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176669,"byte_end":176676,"line_start":664,"line_end":664,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4177},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177389,"byte_end":177392,"line_start":687,"line_end":687,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":176923,"byte_end":177036,"line_start":674,"line_end":674,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177041,"byte_end":177044,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177049,"byte_end":177063,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177068,"byte_end":177071,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177076,"byte_end":177083,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177088,"byte_end":177129,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177134,"byte_end":177177,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177182,"byte_end":177185,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177190,"byte_end":177234,"line_start":682,"line_end":682,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177239,"byte_end":177308,"line_start":683,"line_end":683,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177313,"byte_end":177355,"line_start":684,"line_end":684,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177360,"byte_end":177369,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177374,"byte_end":177381,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4180},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178079,"byte_end":178082,"line_start":709,"line_end":709,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177607,"byte_end":177720,"line_start":696,"line_end":696,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177725,"byte_end":177728,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177733,"byte_end":177747,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177752,"byte_end":177755,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177760,"byte_end":177767,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177772,"byte_end":177813,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177818,"byte_end":177861,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177866,"byte_end":177869,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177874,"byte_end":177918,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":177923,"byte_end":177995,"line_start":705,"line_end":705,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178000,"byte_end":178045,"line_start":706,"line_end":706,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178050,"byte_end":178059,"line_start":707,"line_end":707,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178064,"byte_end":178071,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179256,"byte_end":179263,"line_start":749,"line_end":749,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178297,"byte_end":178362,"line_start":718,"line_end":718,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178367,"byte_end":178370,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178375,"byte_end":178389,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178394,"byte_end":178397,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178402,"byte_end":178409,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178414,"byte_end":178455,"line_start":723,"line_end":723,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178460,"byte_end":178491,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178496,"byte_end":178531,"line_start":725,"line_end":725,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178536,"byte_end":178556,"line_start":726,"line_end":726,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178561,"byte_end":178564,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178569,"byte_end":178608,"line_start":728,"line_end":728,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178613,"byte_end":178652,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178657,"byte_end":178696,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178701,"byte_end":178704,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178709,"byte_end":178736,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178741,"byte_end":178780,"line_start":733,"line_end":733,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178785,"byte_end":178824,"line_start":734,"line_end":734,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178829,"byte_end":178836,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178841,"byte_end":178868,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178873,"byte_end":178912,"line_start":737,"line_end":737,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178917,"byte_end":178956,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178961,"byte_end":178968,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":178973,"byte_end":179000,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179005,"byte_end":179046,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179051,"byte_end":179092,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179097,"byte_end":179104,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179109,"byte_end":179112,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179117,"byte_end":179176,"line_start":745,"line_end":745,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179181,"byte_end":179222,"line_start":746,"line_end":746,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179227,"byte_end":179236,"line_start":747,"line_end":747,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179241,"byte_end":179248,"line_start":748,"line_end":748,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180525,"byte_end":180533,"line_start":782,"line_end":782,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179440,"byte_end":179512,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179517,"byte_end":179520,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179525,"byte_end":179602,"line_start":759,"line_end":759,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179607,"byte_end":179682,"line_start":760,"line_end":760,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179687,"byte_end":179763,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179768,"byte_end":179771,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179776,"byte_end":179858,"line_start":763,"line_end":763,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179863,"byte_end":179946,"line_start":764,"line_end":764,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179951,"byte_end":179954,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":179959,"byte_end":180035,"line_start":766,"line_end":766,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180040,"byte_end":180116,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180121,"byte_end":180142,"line_start":768,"line_end":768,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180147,"byte_end":180150,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180155,"byte_end":180169,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180174,"byte_end":180177,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180182,"byte_end":180189,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180194,"byte_end":180235,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180240,"byte_end":180283,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180288,"byte_end":180291,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180296,"byte_end":180333,"line_start":776,"line_end":776,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180338,"byte_end":180405,"line_start":777,"line_end":777,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180410,"byte_end":180413,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180418,"byte_end":180491,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180496,"byte_end":180505,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180510,"byte_end":180517,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181545,"byte_end":181549,"line_start":815,"line_end":815,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180736,"byte_end":180807,"line_start":791,"line_end":791,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180812,"byte_end":180842,"line_start":792,"line_end":792,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180847,"byte_end":180850,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180855,"byte_end":180930,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":180935,"byte_end":181006,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181011,"byte_end":181051,"line_start":796,"line_end":796,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181056,"byte_end":181059,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181064,"byte_end":181078,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181083,"byte_end":181086,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181091,"byte_end":181098,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181103,"byte_end":181144,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181149,"byte_end":181173,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181178,"byte_end":181221,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181226,"byte_end":181229,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181234,"byte_end":181272,"line_start":805,"line_end":805,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181277,"byte_end":181280,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181285,"byte_end":181329,"line_start":807,"line_end":807,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181334,"byte_end":181354,"line_start":808,"line_end":808,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181359,"byte_end":181422,"line_start":809,"line_end":809,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181427,"byte_end":181434,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181439,"byte_end":181442,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181447,"byte_end":181511,"line_start":812,"line_end":812,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181516,"byte_end":181525,"line_start":813,"line_end":813,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181530,"byte_end":181537,"line_start":814,"line_end":814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182596,"byte_end":182606,"line_start":846,"line_end":846,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181818,"byte_end":181892,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181897,"byte_end":181920,"line_start":825,"line_end":825,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181925,"byte_end":181928,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":181933,"byte_end":182006,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182011,"byte_end":182083,"line_start":828,"line_end":828,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182088,"byte_end":182165,"line_start":829,"line_end":829,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182170,"byte_end":182181,"line_start":830,"line_end":830,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182186,"byte_end":182189,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182194,"byte_end":182208,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182213,"byte_end":182216,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182221,"byte_end":182228,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182233,"byte_end":182274,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182279,"byte_end":182303,"line_start":836,"line_end":836,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182308,"byte_end":182351,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182356,"byte_end":182359,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182364,"byte_end":182402,"line_start":839,"line_end":839,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182407,"byte_end":182410,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182415,"byte_end":182478,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182483,"byte_end":182486,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182491,"byte_end":182562,"line_start":843,"line_end":843,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182567,"byte_end":182576,"line_start":844,"line_end":844,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182581,"byte_end":182588,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183595,"byte_end":183605,"line_start":876,"line_end":876,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182840,"byte_end":182916,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182921,"byte_end":182944,"line_start":856,"line_end":856,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182949,"byte_end":182952,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":182957,"byte_end":183032,"line_start":858,"line_end":858,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183037,"byte_end":183109,"line_start":859,"line_end":859,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183114,"byte_end":183181,"line_start":860,"line_end":860,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183186,"byte_end":183189,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183194,"byte_end":183208,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183213,"byte_end":183216,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183221,"byte_end":183228,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183233,"byte_end":183274,"line_start":865,"line_end":865,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183279,"byte_end":183303,"line_start":866,"line_end":866,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183308,"byte_end":183351,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183356,"byte_end":183359,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183364,"byte_end":183402,"line_start":869,"line_end":869,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183407,"byte_end":183410,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183415,"byte_end":183478,"line_start":871,"line_end":871,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183483,"byte_end":183486,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183491,"byte_end":183561,"line_start":873,"line_end":873,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183566,"byte_end":183575,"line_start":874,"line_end":874,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183580,"byte_end":183587,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185121,"byte_end":185131,"line_start":921,"line_end":921,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183839,"byte_end":183909,"line_start":885,"line_end":885,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183914,"byte_end":183917,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183922,"byte_end":183993,"line_start":887,"line_end":887,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":183998,"byte_end":184070,"line_start":888,"line_end":888,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184075,"byte_end":184145,"line_start":889,"line_end":889,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184150,"byte_end":184153,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184158,"byte_end":184229,"line_start":891,"line_end":891,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184234,"byte_end":184320,"line_start":892,"line_end":892,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184325,"byte_end":184392,"line_start":893,"line_end":893,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184397,"byte_end":184461,"line_start":894,"line_end":894,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184466,"byte_end":184469,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184474,"byte_end":184488,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184493,"byte_end":184496,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184501,"byte_end":184508,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184513,"byte_end":184554,"line_start":899,"line_end":899,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184559,"byte_end":184583,"line_start":900,"line_end":900,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184588,"byte_end":184631,"line_start":901,"line_end":901,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184636,"byte_end":184664,"line_start":902,"line_end":902,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184669,"byte_end":184672,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184677,"byte_end":184715,"line_start":904,"line_end":904,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184720,"byte_end":184723,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184728,"byte_end":184746,"line_start":906,"line_end":906,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184751,"byte_end":184793,"line_start":907,"line_end":907,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184798,"byte_end":184813,"line_start":908,"line_end":908,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184818,"byte_end":184837,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184842,"byte_end":184867,"line_start":910,"line_end":910,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184872,"byte_end":184888,"line_start":911,"line_end":911,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184893,"byte_end":184920,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184925,"byte_end":184934,"line_start":913,"line_end":913,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184939,"byte_end":184946,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184951,"byte_end":184954,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":184959,"byte_end":185004,"line_start":916,"line_end":916,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185009,"byte_end":185012,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185017,"byte_end":185087,"line_start":918,"line_end":918,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185092,"byte_end":185101,"line_start":919,"line_end":919,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185106,"byte_end":185113,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186370,"byte_end":186378,"line_start":962,"line_end":962,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185312,"byte_end":185383,"line_start":929,"line_end":929,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185388,"byte_end":185431,"line_start":930,"line_end":930,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185436,"byte_end":185439,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185444,"byte_end":185519,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185524,"byte_end":185594,"line_start":933,"line_end":933,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185599,"byte_end":185637,"line_start":934,"line_end":934,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185642,"byte_end":185645,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185650,"byte_end":185725,"line_start":936,"line_end":936,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185730,"byte_end":185773,"line_start":937,"line_end":937,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185778,"byte_end":185781,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185786,"byte_end":185859,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185864,"byte_end":185907,"line_start":940,"line_end":940,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185912,"byte_end":185915,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185920,"byte_end":185934,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185939,"byte_end":185942,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185947,"byte_end":185954,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":185959,"byte_end":186000,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186005,"byte_end":186029,"line_start":946,"line_end":946,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186034,"byte_end":186077,"line_start":947,"line_end":947,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186082,"byte_end":186085,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186090,"byte_end":186108,"line_start":949,"line_end":949,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186113,"byte_end":186116,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186121,"byte_end":186126,"line_start":951,"line_end":951,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186131,"byte_end":186192,"line_start":952,"line_end":952,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186197,"byte_end":186219,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186224,"byte_end":186253,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186258,"byte_end":186269,"line_start":955,"line_end":955,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186274,"byte_end":186292,"line_start":956,"line_end":956,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186297,"byte_end":186302,"line_start":957,"line_end":957,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186307,"byte_end":186310,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186315,"byte_end":186336,"line_start":959,"line_end":959,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186341,"byte_end":186350,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186355,"byte_end":186362,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4203},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188540,"byte_end":188559,"line_start":1018,"line_end":1018,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186597,"byte_end":186668,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186673,"byte_end":186747,"line_start":972,"line_end":972,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186752,"byte_end":186766,"line_start":973,"line_end":973,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186771,"byte_end":186774,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186779,"byte_end":186842,"line_start":975,"line_end":975,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186847,"byte_end":186918,"line_start":976,"line_end":976,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186923,"byte_end":186975,"line_start":977,"line_end":977,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186980,"byte_end":186983,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":186988,"byte_end":187063,"line_start":979,"line_end":979,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187068,"byte_end":187138,"line_start":980,"line_end":980,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187143,"byte_end":187207,"line_start":981,"line_end":981,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187212,"byte_end":187215,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187220,"byte_end":187291,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187296,"byte_end":187366,"line_start":984,"line_end":984,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187371,"byte_end":187432,"line_start":985,"line_end":985,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187437,"byte_end":187504,"line_start":986,"line_end":986,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187509,"byte_end":187578,"line_start":987,"line_end":987,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187583,"byte_end":187655,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187660,"byte_end":187663,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187668,"byte_end":187743,"line_start":990,"line_end":990,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187748,"byte_end":187805,"line_start":991,"line_end":991,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187810,"byte_end":187813,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187818,"byte_end":187832,"line_start":993,"line_end":993,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187837,"byte_end":187840,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187845,"byte_end":187852,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187857,"byte_end":187898,"line_start":996,"line_end":996,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187903,"byte_end":187937,"line_start":997,"line_end":997,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187942,"byte_end":187985,"line_start":998,"line_end":998,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187990,"byte_end":187993,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":187998,"byte_end":188038,"line_start":1000,"line_end":1000,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188043,"byte_end":188083,"line_start":1001,"line_end":1001,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188088,"byte_end":188128,"line_start":1002,"line_end":1002,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188133,"byte_end":188136,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188141,"byte_end":188209,"line_start":1004,"line_end":1004,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188214,"byte_end":188236,"line_start":1005,"line_end":1005,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188241,"byte_end":188266,"line_start":1006,"line_end":1006,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188271,"byte_end":188301,"line_start":1007,"line_end":1007,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188306,"byte_end":188315,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188320,"byte_end":188326,"line_start":1009,"line_end":1009,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188331,"byte_end":188357,"line_start":1010,"line_end":1010,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188362,"byte_end":188388,"line_start":1011,"line_end":1011,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188393,"byte_end":188419,"line_start":1012,"line_end":1012,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188424,"byte_end":188438,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188443,"byte_end":188451,"line_start":1014,"line_end":1014,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188456,"byte_end":188463,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188468,"byte_end":188502,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188507,"byte_end":188532,"line_start":1017,"line_end":1017,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4207},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189384,"byte_end":189388,"line_start":1047,"line_end":1047,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188876,"byte_end":188947,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188952,"byte_end":188955,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":188960,"byte_end":189033,"line_start":1033,"line_end":1033,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189038,"byte_end":189073,"line_start":1034,"line_end":1034,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189078,"byte_end":189081,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189086,"byte_end":189100,"line_start":1036,"line_end":1036,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189105,"byte_end":189108,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189113,"byte_end":189120,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189125,"byte_end":189166,"line_start":1039,"line_end":1039,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189171,"byte_end":189214,"line_start":1040,"line_end":1040,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189219,"byte_end":189222,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189227,"byte_end":189273,"line_start":1042,"line_end":1042,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189278,"byte_end":189281,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189286,"byte_end":189350,"line_start":1044,"line_end":1044,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189355,"byte_end":189364,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189369,"byte_end":189376,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4208},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190053,"byte_end":190057,"line_start":1070,"line_end":1070,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189526,"byte_end":189598,"line_start":1054,"line_end":1054,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189603,"byte_end":189606,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189611,"byte_end":189684,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189689,"byte_end":189735,"line_start":1057,"line_end":1057,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189740,"byte_end":189743,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189748,"byte_end":189762,"line_start":1059,"line_end":1059,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189767,"byte_end":189770,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189775,"byte_end":189782,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189787,"byte_end":189828,"line_start":1062,"line_end":1062,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189833,"byte_end":189876,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189881,"byte_end":189884,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189889,"byte_end":189935,"line_start":1065,"line_end":1065,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189940,"byte_end":189943,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":189948,"byte_end":190019,"line_start":1067,"line_end":1067,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190024,"byte_end":190033,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190038,"byte_end":190045,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4209},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191678,"byte_end":191682,"line_start":1116,"line_end":1116,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190195,"byte_end":190266,"line_start":1077,"line_end":1077,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190271,"byte_end":190344,"line_start":1078,"line_end":1078,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190349,"byte_end":190387,"line_start":1079,"line_end":1079,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190392,"byte_end":190395,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190400,"byte_end":190454,"line_start":1081,"line_end":1081,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190459,"byte_end":190531,"line_start":1082,"line_end":1082,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190536,"byte_end":190612,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190617,"byte_end":190685,"line_start":1084,"line_end":1084,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190690,"byte_end":190766,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190771,"byte_end":190793,"line_start":1086,"line_end":1086,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190798,"byte_end":190801,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190806,"byte_end":190873,"line_start":1088,"line_end":1088,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190878,"byte_end":190946,"line_start":1089,"line_end":1089,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190951,"byte_end":190964,"line_start":1090,"line_end":1090,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190969,"byte_end":190972,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190977,"byte_end":190991,"line_start":1092,"line_end":1092,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":190996,"byte_end":190999,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191004,"byte_end":191011,"line_start":1094,"line_end":1094,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191016,"byte_end":191059,"line_start":1095,"line_end":1095,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191064,"byte_end":191107,"line_start":1096,"line_end":1096,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191112,"byte_end":191140,"line_start":1097,"line_end":1097,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191145,"byte_end":191148,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191153,"byte_end":191171,"line_start":1099,"line_end":1099,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191176,"byte_end":191214,"line_start":1100,"line_end":1100,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191219,"byte_end":191234,"line_start":1101,"line_end":1101,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191239,"byte_end":191256,"line_start":1102,"line_end":1102,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191261,"byte_end":191303,"line_start":1103,"line_end":1103,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191308,"byte_end":191343,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191348,"byte_end":191392,"line_start":1105,"line_end":1105,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191397,"byte_end":191406,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191411,"byte_end":191425,"line_start":1107,"line_end":1107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191430,"byte_end":191433,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191438,"byte_end":191481,"line_start":1109,"line_end":1109,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191486,"byte_end":191523,"line_start":1110,"line_end":1110,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191528,"byte_end":191565,"line_start":1111,"line_end":1111,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191570,"byte_end":191604,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191609,"byte_end":191643,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191648,"byte_end":191658,"line_start":1114,"line_end":1114,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191663,"byte_end":191670,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192611,"byte_end":192617,"line_start":1149,"line_end":1149,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191807,"byte_end":191854,"line_start":1123,"line_end":1123,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191859,"byte_end":191862,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191867,"byte_end":191941,"line_start":1125,"line_end":1125,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191946,"byte_end":191983,"line_start":1126,"line_end":1126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191988,"byte_end":191991,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":191996,"byte_end":192010,"line_start":1128,"line_end":1128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192015,"byte_end":192018,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192023,"byte_end":192030,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192035,"byte_end":192076,"line_start":1131,"line_end":1131,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192081,"byte_end":192124,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192129,"byte_end":192132,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192137,"byte_end":192177,"line_start":1134,"line_end":1134,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192182,"byte_end":192185,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192190,"byte_end":192219,"line_start":1136,"line_end":1136,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192224,"byte_end":192252,"line_start":1137,"line_end":1137,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192257,"byte_end":192314,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192319,"byte_end":192346,"line_start":1139,"line_end":1139,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192351,"byte_end":192374,"line_start":1140,"line_end":1140,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192379,"byte_end":192382,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192387,"byte_end":192422,"line_start":1142,"line_end":1142,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192427,"byte_end":192455,"line_start":1143,"line_end":1143,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192460,"byte_end":192517,"line_start":1144,"line_end":1144,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192522,"byte_end":192549,"line_start":1145,"line_end":1145,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192554,"byte_end":192577,"line_start":1146,"line_end":1146,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192582,"byte_end":192591,"line_start":1147,"line_end":1147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192596,"byte_end":192603,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4211},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194376,"byte_end":194388,"line_start":1194,"line_end":1194,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192668,"byte_end":192722,"line_start":1153,"line_end":1153,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192727,"byte_end":192730,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192735,"byte_end":192810,"line_start":1155,"line_end":1155,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192815,"byte_end":192818,"line_start":1156,"line_end":1156,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192823,"byte_end":192898,"line_start":1157,"line_end":1157,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192903,"byte_end":192977,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":192982,"byte_end":193056,"line_start":1159,"line_end":1159,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193061,"byte_end":193110,"line_start":1160,"line_end":1160,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193115,"byte_end":193118,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193123,"byte_end":193198,"line_start":1162,"line_end":1162,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193203,"byte_end":193273,"line_start":1163,"line_end":1163,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193278,"byte_end":193345,"line_start":1164,"line_end":1164,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193350,"byte_end":193422,"line_start":1165,"line_end":1165,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193427,"byte_end":193496,"line_start":1166,"line_end":1166,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193501,"byte_end":193516,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193521,"byte_end":193524,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193529,"byte_end":193593,"line_start":1169,"line_end":1169,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193598,"byte_end":193655,"line_start":1170,"line_end":1170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193660,"byte_end":193663,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193668,"byte_end":193682,"line_start":1172,"line_end":1172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193687,"byte_end":193690,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193695,"byte_end":193702,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193707,"byte_end":193748,"line_start":1175,"line_end":1175,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193753,"byte_end":193796,"line_start":1176,"line_end":1176,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193801,"byte_end":193804,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193809,"byte_end":193871,"line_start":1178,"line_end":1178,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193876,"byte_end":193906,"line_start":1179,"line_end":1179,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193911,"byte_end":193965,"line_start":1180,"line_end":1180,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":193970,"byte_end":194000,"line_start":1181,"line_end":1181,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194005,"byte_end":194054,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194059,"byte_end":194062,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194067,"byte_end":194129,"line_start":1184,"line_end":1184,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194134,"byte_end":194156,"line_start":1185,"line_end":1185,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194161,"byte_end":194181,"line_start":1186,"line_end":1186,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194186,"byte_end":194228,"line_start":1187,"line_end":1187,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194233,"byte_end":194238,"line_start":1188,"line_end":1188,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194243,"byte_end":194276,"line_start":1189,"line_end":1189,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194281,"byte_end":194314,"line_start":1190,"line_end":1190,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194319,"byte_end":194328,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194333,"byte_end":194340,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194345,"byte_end":194368,"line_start":1193,"line_end":1193,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4212},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194764,"byte_end":194769,"line_start":1206,"line_end":1206,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194535,"byte_end":194576,"line_start":1201,"line_end":1201,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194581,"byte_end":194584,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194589,"byte_end":194664,"line_start":1203,"line_end":1203,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194669,"byte_end":194726,"line_start":1204,"line_end":1204,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194731,"byte_end":194756,"line_start":1205,"line_end":1205,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195225,"byte_end":195236,"line_start":1220,"line_end":1220,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194924,"byte_end":194965,"line_start":1213,"line_end":1213,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194970,"byte_end":194973,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":194978,"byte_end":195037,"line_start":1215,"line_end":1215,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195042,"byte_end":195045,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195050,"byte_end":195125,"line_start":1217,"line_end":1217,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195130,"byte_end":195187,"line_start":1218,"line_end":1218,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195192,"byte_end":195217,"line_start":1219,"line_end":1219,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4216},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196129,"byte_end":196137,"line_start":1241,"line_end":1241,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195389,"byte_end":195452,"line_start":1227,"line_end":1227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195457,"byte_end":195460,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195465,"byte_end":195540,"line_start":1229,"line_end":1229,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195545,"byte_end":195621,"line_start":1230,"line_end":1230,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195626,"byte_end":195699,"line_start":1231,"line_end":1231,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195704,"byte_end":195777,"line_start":1232,"line_end":1232,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195782,"byte_end":195824,"line_start":1233,"line_end":1233,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195829,"byte_end":195832,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195837,"byte_end":195902,"line_start":1235,"line_end":1235,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195907,"byte_end":195910,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195915,"byte_end":195990,"line_start":1237,"line_end":1237,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":195995,"byte_end":196052,"line_start":1238,"line_end":1238,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196057,"byte_end":196091,"line_start":1239,"line_end":1239,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196096,"byte_end":196121,"line_start":1240,"line_end":1240,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4217},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197817,"byte_end":197833,"line_start":1286,"line_end":1286,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196331,"byte_end":196406,"line_start":1249,"line_end":1249,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196411,"byte_end":196414,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196419,"byte_end":196494,"line_start":1251,"line_end":1251,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196499,"byte_end":196573,"line_start":1252,"line_end":1252,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196578,"byte_end":196650,"line_start":1253,"line_end":1253,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196655,"byte_end":196729,"line_start":1254,"line_end":1254,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196734,"byte_end":196763,"line_start":1255,"line_end":1255,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196768,"byte_end":196771,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196776,"byte_end":196841,"line_start":1257,"line_end":1257,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196846,"byte_end":196849,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196854,"byte_end":196929,"line_start":1259,"line_end":1259,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196934,"byte_end":196991,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":196996,"byte_end":196999,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197004,"byte_end":197018,"line_start":1262,"line_end":1262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197023,"byte_end":197026,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197031,"byte_end":197038,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197043,"byte_end":197084,"line_start":1265,"line_end":1265,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197089,"byte_end":197123,"line_start":1266,"line_end":1266,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197128,"byte_end":197171,"line_start":1267,"line_end":1267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197176,"byte_end":197179,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197184,"byte_end":197234,"line_start":1269,"line_end":1269,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197239,"byte_end":197289,"line_start":1270,"line_end":1270,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197294,"byte_end":197297,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197302,"byte_end":197369,"line_start":1272,"line_end":1272,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197374,"byte_end":197436,"line_start":1273,"line_end":1273,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197441,"byte_end":197444,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197449,"byte_end":197474,"line_start":1275,"line_end":1275,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197479,"byte_end":197533,"line_start":1276,"line_end":1276,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197538,"byte_end":197541,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197546,"byte_end":197571,"line_start":1278,"line_end":1278,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197576,"byte_end":197630,"line_start":1279,"line_end":1279,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197635,"byte_end":197638,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197643,"byte_end":197687,"line_start":1281,"line_end":1281,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197692,"byte_end":197728,"line_start":1282,"line_end":1282,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197733,"byte_end":197740,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197745,"byte_end":197779,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":197784,"byte_end":197809,"line_start":1285,"line_end":1285,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4218},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198729,"byte_end":198732,"line_start":1316,"line_end":1316,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198041,"byte_end":198089,"line_start":1294,"line_end":1294,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198094,"byte_end":198097,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198102,"byte_end":198175,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198180,"byte_end":198252,"line_start":1297,"line_end":1297,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198257,"byte_end":198270,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198275,"byte_end":198278,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198283,"byte_end":198297,"line_start":1300,"line_end":1300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198302,"byte_end":198305,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198310,"byte_end":198317,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198322,"byte_end":198363,"line_start":1303,"line_end":1303,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198368,"byte_end":198411,"line_start":1304,"line_end":1304,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198416,"byte_end":198419,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198424,"byte_end":198462,"line_start":1306,"line_end":1306,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198467,"byte_end":198506,"line_start":1307,"line_end":1307,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198511,"byte_end":198514,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198519,"byte_end":198553,"line_start":1309,"line_end":1309,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198558,"byte_end":198599,"line_start":1310,"line_end":1310,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198604,"byte_end":198632,"line_start":1311,"line_end":1311,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198637,"byte_end":198687,"line_start":1312,"line_end":1312,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198692,"byte_end":198701,"line_start":1313,"line_end":1313,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198706,"byte_end":198713,"line_start":1314,"line_end":1314,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198718,"byte_end":198721,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4220},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199640,"byte_end":199645,"line_start":1347,"line_end":1347,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198913,"byte_end":198950,"line_start":1324,"line_end":1324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198955,"byte_end":198958,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":198963,"byte_end":199034,"line_start":1326,"line_end":1326,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199039,"byte_end":199115,"line_start":1327,"line_end":1327,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199120,"byte_end":199123,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199128,"byte_end":199135,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199140,"byte_end":199181,"line_start":1330,"line_end":1330,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199186,"byte_end":199229,"line_start":1331,"line_end":1331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199234,"byte_end":199237,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199242,"byte_end":199299,"line_start":1333,"line_end":1333,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199304,"byte_end":199360,"line_start":1334,"line_end":1334,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199365,"byte_end":199368,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199373,"byte_end":199413,"line_start":1336,"line_end":1336,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199418,"byte_end":199421,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199426,"byte_end":199474,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199479,"byte_end":199507,"line_start":1339,"line_end":1339,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199512,"byte_end":199527,"line_start":1340,"line_end":1340,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199532,"byte_end":199551,"line_start":1341,"line_end":1341,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199556,"byte_end":199574,"line_start":1342,"line_end":1342,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199579,"byte_end":199594,"line_start":1343,"line_end":1343,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199599,"byte_end":199606,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199611,"byte_end":199620,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199625,"byte_end":199632,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4222},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199983,"byte_end":199991,"line_start":1358,"line_end":1358,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199837,"byte_end":199892,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199897,"byte_end":199900,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":199905,"byte_end":199975,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4223},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201026,"byte_end":201032,"line_start":1384,"line_end":1384,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200124,"byte_end":200191,"line_start":1365,"line_end":1365,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200196,"byte_end":200199,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200204,"byte_end":200278,"line_start":1367,"line_end":1367,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200283,"byte_end":200355,"line_start":1368,"line_end":1368,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200360,"byte_end":200412,"line_start":1369,"line_end":1369,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200417,"byte_end":200420,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200425,"byte_end":200498,"line_start":1371,"line_end":1371,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200503,"byte_end":200577,"line_start":1372,"line_end":1372,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200582,"byte_end":200657,"line_start":1373,"line_end":1373,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200662,"byte_end":200734,"line_start":1374,"line_end":1374,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200739,"byte_end":200751,"line_start":1375,"line_end":1375,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200756,"byte_end":200759,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200764,"byte_end":200839,"line_start":1377,"line_end":1377,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200844,"byte_end":200901,"line_start":1378,"line_end":1378,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200906,"byte_end":200909,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200914,"byte_end":200926,"line_start":1380,"line_end":1380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200931,"byte_end":200934,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200939,"byte_end":200988,"line_start":1382,"line_end":1382,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":200993,"byte_end":201018,"line_start":1383,"line_end":1383,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202129,"byte_end":202141,"line_start":1410,"line_end":1410,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201193,"byte_end":201266,"line_start":1391,"line_end":1391,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201271,"byte_end":201274,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201279,"byte_end":201352,"line_start":1393,"line_end":1393,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201357,"byte_end":201427,"line_start":1394,"line_end":1394,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201432,"byte_end":201507,"line_start":1395,"line_end":1395,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201512,"byte_end":201589,"line_start":1396,"line_end":1396,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201594,"byte_end":201622,"line_start":1397,"line_end":1397,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201627,"byte_end":201630,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201635,"byte_end":201708,"line_start":1399,"line_end":1399,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201713,"byte_end":201788,"line_start":1400,"line_end":1400,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201793,"byte_end":201854,"line_start":1401,"line_end":1401,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201859,"byte_end":201862,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201867,"byte_end":201942,"line_start":1403,"line_end":1403,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":201947,"byte_end":202004,"line_start":1404,"line_end":1404,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202009,"byte_end":202012,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202017,"byte_end":202029,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202034,"byte_end":202037,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202042,"byte_end":202091,"line_start":1408,"line_end":1408,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202096,"byte_end":202121,"line_start":1409,"line_end":1409,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203179,"byte_end":203186,"line_start":1430,"line_end":1430,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"pub fn forward<S>(Self, S) -> Forward<Self, S> where S: Sink<Self::Ok, Error =\nSelf::Error>, Self: TryStream + Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202312,"byte_end":202387,"line_start":1417,"line_end":1417,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202392,"byte_end":202451,"line_start":1418,"line_end":1418,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202456,"byte_end":202459,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202464,"byte_end":202537,"line_start":1420,"line_end":1420,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202542,"byte_end":202613,"line_start":1421,"line_end":1421,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202618,"byte_end":202691,"line_start":1422,"line_end":1422,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202696,"byte_end":202770,"line_start":1423,"line_end":1423,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202775,"byte_end":202845,"line_start":1424,"line_end":1424,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202850,"byte_end":202923,"line_start":1425,"line_end":1425,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`. If the stream produces an error,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":202928,"byte_end":203004,"line_start":1426,"line_end":1426,"column_start":5,"column_end":81}},{"value":"/ that error will be returned by this future without flushing/closing the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203009,"byte_end":203090,"line_start":1427,"line_end":1427,"column_start":5,"column_end":86}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203095,"byte_end":203119,"line_start":1428,"line_end":1428,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204321,"byte_end":204326,"line_start":1454,"line_end":1454,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"pub fn split<Item>(Self) -> (SplitSink<Self, Item>, SplitStream<Self>) where\nSelf: Sink<Item> + Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203744,"byte_end":203816,"line_start":1441,"line_end":1441,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203821,"byte_end":203833,"line_start":1442,"line_end":1442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203838,"byte_end":203841,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203846,"byte_end":203919,"line_start":1444,"line_end":1444,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203924,"byte_end":203986,"line_start":1445,"line_end":1445,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":203991,"byte_end":204013,"line_start":1446,"line_end":1446,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204018,"byte_end":204021,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204026,"byte_end":204101,"line_start":1448,"line_end":1448,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204106,"byte_end":204163,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204168,"byte_end":204192,"line_start":1450,"line_end":1450,"column_start":5,"column_end":29}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204249,"byte_end":204283,"line_start":1452,"line_end":1452,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204288,"byte_end":204313,"line_start":1453,"line_end":1453,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4229},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204938,"byte_end":204945,"line_start":1470,"line_end":1470,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204635,"byte_end":204708,"line_start":1465,"line_end":1465,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204713,"byte_end":204716,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204721,"byte_end":204790,"line_start":1467,"line_end":1467,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204795,"byte_end":204864,"line_start":1468,"line_end":1468,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":204869,"byte_end":204930,"line_start":1469,"line_end":1469,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205401,"byte_end":205412,"line_start":1483,"line_end":1483,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205122,"byte_end":205197,"line_start":1478,"line_end":1478,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205202,"byte_end":205223,"line_start":1479,"line_end":1479,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205228,"byte_end":205231,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205236,"byte_end":205316,"line_start":1481,"line_end":1481,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205321,"byte_end":205393,"line_start":1482,"line_end":1482,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205865,"byte_end":205877,"line_start":1496,"line_end":1496,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205586,"byte_end":205662,"line_start":1491,"line_end":1491,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205667,"byte_end":205688,"line_start":1492,"line_end":1492,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205693,"byte_end":205696,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205701,"byte_end":205780,"line_start":1494,"line_end":1494,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":205785,"byte_end":205857,"line_start":1495,"line_end":1495,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206153,"byte_end":206168,"line_start":1506,"line_end":1506,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206052,"byte_end":206123,"line_start":1504,"line_end":1504,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206128,"byte_end":206145,"line_start":1505,"line_end":1505,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208269,"byte_end":208285,"line_start":1561,"line_end":1561,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":4146},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206315,"byte_end":206390,"line_start":1513,"line_end":1513,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206395,"byte_end":206405,"line_start":1514,"line_end":1514,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206410,"byte_end":206413,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206418,"byte_end":206491,"line_start":1516,"line_end":1516,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206496,"byte_end":206564,"line_start":1517,"line_end":1517,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206569,"byte_end":206617,"line_start":1518,"line_end":1518,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206622,"byte_end":206697,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206702,"byte_end":206778,"line_start":1520,"line_end":1520,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206783,"byte_end":206809,"line_start":1521,"line_end":1521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206814,"byte_end":206817,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206822,"byte_end":206895,"line_start":1523,"line_end":1523,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206900,"byte_end":206970,"line_start":1524,"line_end":1524,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":206975,"byte_end":207015,"line_start":1525,"line_end":1525,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207020,"byte_end":207023,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207028,"byte_end":207082,"line_start":1527,"line_end":1527,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207087,"byte_end":207171,"line_start":1528,"line_end":1528,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207176,"byte_end":207179,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207184,"byte_end":207198,"line_start":1530,"line_end":1530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207203,"byte_end":207206,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207211,"byte_end":207218,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207223,"byte_end":207264,"line_start":1533,"line_end":1533,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207269,"byte_end":207303,"line_start":1534,"line_end":1534,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207308,"byte_end":207363,"line_start":1535,"line_end":1535,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207368,"byte_end":207371,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207376,"byte_end":207411,"line_start":1537,"line_end":1537,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207416,"byte_end":207466,"line_start":1538,"line_end":1538,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207471,"byte_end":207493,"line_start":1539,"line_end":1539,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207498,"byte_end":207508,"line_start":1540,"line_end":1540,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207513,"byte_end":207530,"line_start":1541,"line_end":1541,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207535,"byte_end":207561,"line_start":1542,"line_end":1542,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207566,"byte_end":207621,"line_start":1543,"line_end":1543,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207626,"byte_end":207655,"line_start":1544,"line_end":1544,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207660,"byte_end":207723,"line_start":1545,"line_end":1545,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207728,"byte_end":207774,"line_start":1546,"line_end":1546,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207779,"byte_end":207793,"line_start":1547,"line_end":1547,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207798,"byte_end":207867,"line_start":1548,"line_end":1548,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207872,"byte_end":207897,"line_start":1549,"line_end":1549,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207902,"byte_end":207955,"line_start":1550,"line_end":1550,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207960,"byte_end":207989,"line_start":1551,"line_end":1551,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":207994,"byte_end":208007,"line_start":1552,"line_end":1552,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208012,"byte_end":208082,"line_start":1553,"line_end":1553,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208087,"byte_end":208146,"line_start":1554,"line_end":1554,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208151,"byte_end":208181,"line_start":1555,"line_end":1555,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208186,"byte_end":208195,"line_start":1556,"line_end":1556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208200,"byte_end":208205,"line_start":1557,"line_end":1557,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208210,"byte_end":208235,"line_start":1558,"line_end":1558,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208240,"byte_end":208249,"line_start":1559,"line_end":1559,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":208254,"byte_end":208261,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":14789},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":350244,"byte_end":350251,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":14793},{"krate":0,"index":14794},{"krate":0,"index":14795}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14857},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312253,"byte_end":312260,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":14860}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14935},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312508,"byte_end":312517,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":14938}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15013},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":312818,"byte_end":312828,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":15016}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15088},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":352993,"byte_end":353003,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":15090}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15135},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313254,"byte_end":313259,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":15138}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15213},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":313536,"byte_end":313542,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":15216}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15288},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":354351,"byte_end":354357,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":15292},{"krate":0,"index":15293},{"krate":0,"index":15294}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15353},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357193,"byte_end":357200,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":15356}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357026,"byte_end":357096,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357114,"byte_end":357181,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15361},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":358285,"byte_end":358295,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":15365},{"krate":0,"index":15366},{"krate":0,"index":15367}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15418},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":360181,"byte_end":360190,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":15422},{"krate":0,"index":15423},{"krate":0,"index":15424},{"krate":0,"index":15425}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15487},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":363325,"byte_end":363337,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":15491},{"krate":0,"index":15492},{"krate":0,"index":15493}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15552},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":366342,"byte_end":366352,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":15554},{"krate":0,"index":15555}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15600},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":368530,"byte_end":368540,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":15603},{"krate":0,"index":15604}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15649},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":369889,"byte_end":369898,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":15651},{"krate":0,"index":15652}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15689},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":371409,"byte_end":371418,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":15691},{"krate":0,"index":15692},{"krate":0,"index":15693}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15741},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374670,"byte_end":374684,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374447,"byte_end":374531,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374532,"byte_end":374535,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374536,"byte_end":374633,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":15745},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374691,"byte_end":374701,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":15741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":15746},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374703,"byte_end":374708,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":15741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15762},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":375546,"byte_end":375553,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":15767},{"krate":0,"index":15768},{"krate":0,"index":15769},{"krate":0,"index":15770}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5148},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":380001,"byte_end":380011,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378144,"byte_end":378220,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378221,"byte_end":378224,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378225,"byte_end":378301,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378302,"byte_end":378372,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378373,"byte_end":378432,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378433,"byte_end":378436,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378437,"byte_end":378515,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378516,"byte_end":378593,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378594,"byte_end":378658,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378659,"byte_end":378662,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378663,"byte_end":378735,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378736,"byte_end":378814,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378815,"byte_end":378844,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378845,"byte_end":378848,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378849,"byte_end":378926,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378927,"byte_end":378991,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":378992,"byte_end":379044,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379045,"byte_end":379048,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379049,"byte_end":379126,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379127,"byte_end":379199,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379200,"byte_end":379269,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379270,"byte_end":379348,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379349,"byte_end":379352,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379353,"byte_end":379366,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379367,"byte_end":379370,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379371,"byte_end":379378,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379379,"byte_end":379412,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379413,"byte_end":379436,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379437,"byte_end":379478,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379479,"byte_end":379525,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379526,"byte_end":379529,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379530,"byte_end":379589,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379590,"byte_end":379612,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379613,"byte_end":379647,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379648,"byte_end":379657,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379658,"byte_end":379661,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379662,"byte_end":379685,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379686,"byte_end":379725,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379726,"byte_end":379762,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379763,"byte_end":379806,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379807,"byte_end":379823,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379824,"byte_end":379844,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379845,"byte_end":379854,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379855,"byte_end":379862,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379863,"byte_end":379866,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379867,"byte_end":379932,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379933,"byte_end":379975,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379976,"byte_end":379985,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":379986,"byte_end":379993,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15831},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":380374,"byte_end":380383,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":15835},{"krate":0,"index":15836},{"krate":0,"index":15837}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15888},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":382291,"byte_end":382303,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":15892},{"krate":0,"index":15893},{"krate":0,"index":15894},{"krate":0,"index":15895},{"krate":0,"index":15896}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15961},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":385847,"byte_end":385859,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":15965},{"krate":0,"index":15966},{"krate":0,"index":15967},{"krate":0,"index":15968},{"krate":0,"index":15969}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16034},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":389635,"byte_end":389653,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":16036},{"krate":0,"index":16037},{"krate":0,"index":16038}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16086},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":392193,"byte_end":392204,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":16088},{"krate":0,"index":16089},{"krate":0,"index":16090}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16138},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":394736,"byte_end":394756,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":16142},{"krate":0,"index":16143},{"krate":0,"index":16144},{"krate":0,"index":16145}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16199},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":399018,"byte_end":399031,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":16201},{"krate":0,"index":16202}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":398810,"byte_end":398894,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":398912,"byte_end":398960,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":5559},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316751,"byte_end":316763,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5560},{"krate":0,"index":5562},{"krate":0,"index":5565},{"krate":0,"index":5568},{"krate":0,"index":5571},{"krate":0,"index":5574},{"krate":0,"index":5576},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5583},{"krate":0,"index":5586},{"krate":0,"index":5589},{"krate":0,"index":5593},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5599},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316689,"byte_end":316740,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5560},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317305,"byte_end":317313,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316781,"byte_end":316855,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316860,"byte_end":316886,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316891,"byte_end":316894,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316899,"byte_end":316913,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316918,"byte_end":316921,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316926,"byte_end":316933,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316938,"byte_end":316979,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316984,"byte_end":317030,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317035,"byte_end":317038,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317043,"byte_end":317063,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317068,"byte_end":317113,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317118,"byte_end":317149,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317154,"byte_end":317157,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317162,"byte_end":317216,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317221,"byte_end":317272,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317277,"byte_end":317285,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317290,"byte_end":317297,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5562},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318009,"byte_end":318015,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317489,"byte_end":317562,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317567,"byte_end":317598,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317603,"byte_end":317606,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317611,"byte_end":317625,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317630,"byte_end":317633,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317638,"byte_end":317645,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317650,"byte_end":317691,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317696,"byte_end":317742,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317747,"byte_end":317750,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317755,"byte_end":317775,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317780,"byte_end":317821,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317826,"byte_end":317857,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317862,"byte_end":317865,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317870,"byte_end":317923,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317928,"byte_end":317976,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317981,"byte_end":317989,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":317994,"byte_end":318001,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5565},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318724,"byte_end":318731,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318205,"byte_end":318276,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318281,"byte_end":318312,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318317,"byte_end":318320,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318325,"byte_end":318339,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318344,"byte_end":318347,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318352,"byte_end":318359,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318364,"byte_end":318405,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318410,"byte_end":318456,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318461,"byte_end":318464,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318469,"byte_end":318489,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318494,"byte_end":318535,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318540,"byte_end":318572,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318577,"byte_end":318580,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318585,"byte_end":318638,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318643,"byte_end":318691,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318696,"byte_end":318704,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318709,"byte_end":318716,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5568},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320336,"byte_end":320344,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":318923,"byte_end":318999,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319004,"byte_end":319044,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319049,"byte_end":319052,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319057,"byte_end":319133,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319138,"byte_end":319214,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319219,"byte_end":319292,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319297,"byte_end":319339,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319344,"byte_end":319347,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319352,"byte_end":319425,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319430,"byte_end":319461,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319466,"byte_end":319469,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319474,"byte_end":319548,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319553,"byte_end":319627,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319632,"byte_end":319648,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319653,"byte_end":319656,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319661,"byte_end":319732,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319737,"byte_end":319763,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319768,"byte_end":319771,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319776,"byte_end":319848,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319853,"byte_end":319902,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319907,"byte_end":319910,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319915,"byte_end":319929,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319934,"byte_end":319937,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319942,"byte_end":319949,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319954,"byte_end":319985,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":319990,"byte_end":320014,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320019,"byte_end":320057,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320062,"byte_end":320065,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320070,"byte_end":320126,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320131,"byte_end":320134,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320139,"byte_end":320174,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320179,"byte_end":320218,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320223,"byte_end":320247,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320252,"byte_end":320268,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320273,"byte_end":320289,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320294,"byte_end":320304,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320309,"byte_end":320316,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320321,"byte_end":320328,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5571},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321496,"byte_end":321503,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320597,"byte_end":320662,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320667,"byte_end":320716,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320721,"byte_end":320724,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320729,"byte_end":320808,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320813,"byte_end":320887,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320892,"byte_end":320968,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":320973,"byte_end":321018,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321023,"byte_end":321026,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321031,"byte_end":321106,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321111,"byte_end":321151,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321156,"byte_end":321159,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321164,"byte_end":321273,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321278,"byte_end":321352,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321357,"byte_end":321373,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321378,"byte_end":321381,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321386,"byte_end":321457,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321462,"byte_end":321488,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5574},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322055,"byte_end":322065,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321752,"byte_end":321826,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321831,"byte_end":321841,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321846,"byte_end":321849,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321854,"byte_end":321924,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":321929,"byte_end":322005,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322010,"byte_end":322047,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5576},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322554,"byte_end":322565,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322263,"byte_end":322342,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322347,"byte_end":322350,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322355,"byte_end":322425,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322430,"byte_end":322504,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322509,"byte_end":322546,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5578},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323486,"byte_end":323497,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322768,"byte_end":322821,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322826,"byte_end":322870,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322875,"byte_end":322878,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322883,"byte_end":322932,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":322937,"byte_end":323010,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323015,"byte_end":323035,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323040,"byte_end":323043,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323048,"byte_end":323062,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323067,"byte_end":323070,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323075,"byte_end":323082,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323087,"byte_end":323146,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323151,"byte_end":323154,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323159,"byte_end":323178,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323183,"byte_end":323201,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323206,"byte_end":323278,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323283,"byte_end":323313,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323318,"byte_end":323325,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323330,"byte_end":323404,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323409,"byte_end":323412,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323417,"byte_end":323466,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323471,"byte_end":323478,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5579},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324392,"byte_end":324400,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323653,"byte_end":323727,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323732,"byte_end":323806,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323811,"byte_end":323823,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323828,"byte_end":323831,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323836,"byte_end":323903,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323908,"byte_end":323980,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":323985,"byte_end":324024,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324029,"byte_end":324032,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324037,"byte_end":324051,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324056,"byte_end":324059,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324064,"byte_end":324071,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324076,"byte_end":324117,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324122,"byte_end":324168,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324173,"byte_end":324176,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324181,"byte_end":324238,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324243,"byte_end":324246,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324251,"byte_end":324305,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324310,"byte_end":324359,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324364,"byte_end":324372,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324377,"byte_end":324384,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5580},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325752,"byte_end":325764,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324567,"byte_end":324636,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324641,"byte_end":324697,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324702,"byte_end":324705,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324710,"byte_end":324785,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324790,"byte_end":324860,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324865,"byte_end":324903,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324908,"byte_end":324911,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324916,"byte_end":324994,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":324999,"byte_end":325059,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325064,"byte_end":325121,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325126,"byte_end":325193,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325198,"byte_end":325228,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325233,"byte_end":325236,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325241,"byte_end":325255,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325260,"byte_end":325263,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325268,"byte_end":325275,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325280,"byte_end":325321,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325326,"byte_end":325350,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325355,"byte_end":325401,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325406,"byte_end":325409,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325414,"byte_end":325435,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325440,"byte_end":325443,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325448,"byte_end":325453,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325458,"byte_end":325519,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325524,"byte_end":325546,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325551,"byte_end":325615,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325620,"byte_end":325631,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325636,"byte_end":325675,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325680,"byte_end":325685,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325690,"byte_end":325693,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325698,"byte_end":325719,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325724,"byte_end":325732,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":325737,"byte_end":325744,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5583},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326777,"byte_end":326791,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326028,"byte_end":326102,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326107,"byte_end":326130,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326135,"byte_end":326138,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326143,"byte_end":326174,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326179,"byte_end":326256,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326261,"byte_end":326290,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326295,"byte_end":326298,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326303,"byte_end":326317,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326322,"byte_end":326325,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326330,"byte_end":326337,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326342,"byte_end":326383,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326388,"byte_end":326412,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326417,"byte_end":326463,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326468,"byte_end":326471,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326476,"byte_end":326545,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326550,"byte_end":326620,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326625,"byte_end":326628,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326633,"byte_end":326700,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326705,"byte_end":326744,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326749,"byte_end":326757,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":326762,"byte_end":326769,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5586},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327824,"byte_end":327838,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327068,"byte_end":327142,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327147,"byte_end":327170,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327175,"byte_end":327178,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327183,"byte_end":327214,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327219,"byte_end":327296,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327301,"byte_end":327330,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327335,"byte_end":327338,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327343,"byte_end":327357,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327362,"byte_end":327365,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327370,"byte_end":327377,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327382,"byte_end":327423,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327428,"byte_end":327452,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327457,"byte_end":327503,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327508,"byte_end":327511,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327516,"byte_end":327592,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327597,"byte_end":327667,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327672,"byte_end":327675,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327680,"byte_end":327747,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327752,"byte_end":327791,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327796,"byte_end":327804,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":327809,"byte_end":327816,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5589},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329753,"byte_end":329776,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328115,"byte_end":328197,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328202,"byte_end":328276,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328281,"byte_end":328331,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328336,"byte_end":328339,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328344,"byte_end":328366,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328371,"byte_end":328457,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328462,"byte_end":328547,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328552,"byte_end":328580,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328585,"byte_end":328588,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328593,"byte_end":328668,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328673,"byte_end":328730,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328735,"byte_end":328738,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328743,"byte_end":328757,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328762,"byte_end":328765,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328770,"byte_end":328777,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328782,"byte_end":328823,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328828,"byte_end":328862,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328867,"byte_end":328924,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328929,"byte_end":328932,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328937,"byte_end":328977,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":328982,"byte_end":329022,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329027,"byte_end":329068,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329073,"byte_end":329076,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329081,"byte_end":329132,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329137,"byte_end":329190,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329195,"byte_end":329217,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329222,"byte_end":329247,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329252,"byte_end":329314,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329319,"byte_end":329334,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329339,"byte_end":329348,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329353,"byte_end":329359,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329364,"byte_end":329367,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329372,"byte_end":329398,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329403,"byte_end":329470,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329475,"byte_end":329489,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329494,"byte_end":329497,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329502,"byte_end":329563,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329568,"byte_end":329596,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329601,"byte_end":329651,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329656,"byte_end":329664,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329669,"byte_end":329676,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329681,"byte_end":329715,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":329720,"byte_end":329745,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5593},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331225,"byte_end":331236,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330186,"byte_end":330238,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330243,"byte_end":330310,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330315,"byte_end":330318,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330323,"byte_end":330397,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330402,"byte_end":330483,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330488,"byte_end":330558,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330563,"byte_end":330566,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330571,"byte_end":330639,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330644,"byte_end":330647,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330652,"byte_end":330666,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330671,"byte_end":330674,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330679,"byte_end":330686,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330691,"byte_end":330732,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330737,"byte_end":330768,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330773,"byte_end":330811,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330816,"byte_end":330836,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330841,"byte_end":330844,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330849,"byte_end":330886,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330891,"byte_end":330894,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330899,"byte_end":330926,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330931,"byte_end":330955,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":330960,"byte_end":331006,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331011,"byte_end":331020,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331025,"byte_end":331068,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331073,"byte_end":331080,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331085,"byte_end":331088,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331093,"byte_end":331156,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331161,"byte_end":331192,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331197,"byte_end":331205,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331210,"byte_end":331217,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333051,"byte_end":333061,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331419,"byte_end":331497,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331502,"byte_end":331505,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331510,"byte_end":331595,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331600,"byte_end":331672,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331677,"byte_end":331729,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331734,"byte_end":331737,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331742,"byte_end":331815,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331820,"byte_end":331894,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331899,"byte_end":331974,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":331979,"byte_end":332051,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332056,"byte_end":332068,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332073,"byte_end":332076,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332081,"byte_end":332156,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332161,"byte_end":332218,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332223,"byte_end":332226,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332231,"byte_end":332262,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332267,"byte_end":332336,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332341,"byte_end":332370,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332375,"byte_end":332378,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332383,"byte_end":332397,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332402,"byte_end":332405,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332410,"byte_end":332417,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332422,"byte_end":332463,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332468,"byte_end":332530,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332535,"byte_end":332538,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332543,"byte_end":332634,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332639,"byte_end":332681,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332686,"byte_end":332689,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332694,"byte_end":332756,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332761,"byte_end":332834,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332839,"byte_end":332901,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332906,"byte_end":332914,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332919,"byte_end":332926,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332931,"byte_end":332934,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332939,"byte_end":332951,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332956,"byte_end":332959,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":332964,"byte_end":333013,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333018,"byte_end":333043,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5596},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334584,"byte_end":334594,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333296,"byte_end":333369,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333374,"byte_end":333408,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333413,"byte_end":333416,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333421,"byte_end":333496,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333501,"byte_end":333576,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333581,"byte_end":333654,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333659,"byte_end":333730,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333735,"byte_end":333785,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333790,"byte_end":333793,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333798,"byte_end":333869,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333874,"byte_end":333877,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333882,"byte_end":333958,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":333963,"byte_end":334033,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334038,"byte_end":334063,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334068,"byte_end":334071,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334076,"byte_end":334090,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334095,"byte_end":334102,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334107,"byte_end":334148,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334153,"byte_end":334177,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334182,"byte_end":334239,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334244,"byte_end":334247,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334252,"byte_end":334332,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334337,"byte_end":334380,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334385,"byte_end":334418,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334423,"byte_end":334430,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334435,"byte_end":334438,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334443,"byte_end":334491,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334496,"byte_end":334551,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334556,"byte_end":334564,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334569,"byte_end":334576,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336221,"byte_end":336235,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334845,"byte_end":334907,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334912,"byte_end":334980,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":334985,"byte_end":335019,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335024,"byte_end":335027,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335032,"byte_end":335107,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335112,"byte_end":335187,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335192,"byte_end":335268,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335273,"byte_end":335338,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335343,"byte_end":335346,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335351,"byte_end":335422,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335427,"byte_end":335430,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335435,"byte_end":335511,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335516,"byte_end":335590,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335595,"byte_end":335620,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335625,"byte_end":335628,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335633,"byte_end":335647,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335652,"byte_end":335659,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335664,"byte_end":335705,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335710,"byte_end":335767,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335772,"byte_end":335797,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335802,"byte_end":335805,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335810,"byte_end":335880,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335885,"byte_end":335940,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":335945,"byte_end":336007,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336012,"byte_end":336027,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336032,"byte_end":336039,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336044,"byte_end":336047,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336052,"byte_end":336073,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336078,"byte_end":336127,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336132,"byte_end":336188,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336193,"byte_end":336201,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336206,"byte_end":336213,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5603},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337927,"byte_end":337938,"line_start":752,"line_end":752,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336512,"byte_end":336577,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336582,"byte_end":336585,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336590,"byte_end":336663,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336668,"byte_end":336741,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336746,"byte_end":336819,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336824,"byte_end":336894,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336899,"byte_end":336902,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336907,"byte_end":336921,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336926,"byte_end":336929,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336934,"byte_end":336941,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336946,"byte_end":336987,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":336992,"byte_end":337023,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337028,"byte_end":337079,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337084,"byte_end":337104,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337109,"byte_end":337112,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337117,"byte_end":337156,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337161,"byte_end":337200,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337205,"byte_end":337244,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337249,"byte_end":337252,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337257,"byte_end":337284,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337289,"byte_end":337332,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337337,"byte_end":337344,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337349,"byte_end":337376,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337381,"byte_end":337424,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337429,"byte_end":337473,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337478,"byte_end":337485,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337490,"byte_end":337517,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337522,"byte_end":337567,"line_start":741,"line_end":741,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337572,"byte_end":337617,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337622,"byte_end":337666,"line_start":743,"line_end":743,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337671,"byte_end":337678,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337683,"byte_end":337686,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337691,"byte_end":337730,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337735,"byte_end":337784,"line_start":747,"line_end":747,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337789,"byte_end":337838,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337843,"byte_end":337893,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337898,"byte_end":337907,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":337912,"byte_end":337919,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5604},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339530,"byte_end":339538,"line_start":791,"line_end":791,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338243,"byte_end":338313,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338318,"byte_end":338378,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338383,"byte_end":338386,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338391,"byte_end":338461,"line_start":766,"line_end":766,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338466,"byte_end":338542,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338547,"byte_end":338623,"line_start":768,"line_end":768,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338628,"byte_end":338698,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338703,"byte_end":338729,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338734,"byte_end":338737,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338742,"byte_end":338822,"line_start":772,"line_end":772,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338827,"byte_end":338896,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338901,"byte_end":338922,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338927,"byte_end":338930,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338935,"byte_end":338949,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338954,"byte_end":338957,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338962,"byte_end":338969,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":338974,"byte_end":339015,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339020,"byte_end":339066,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339071,"byte_end":339074,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339079,"byte_end":339148,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339153,"byte_end":339230,"line_start":783,"line_end":783,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339235,"byte_end":339268,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339273,"byte_end":339276,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339281,"byte_end":339367,"line_start":786,"line_end":786,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339372,"byte_end":339458,"line_start":787,"line_end":787,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339463,"byte_end":339497,"line_start":788,"line_end":788,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339502,"byte_end":339510,"line_start":789,"line_end":789,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339515,"byte_end":339522,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341064,"byte_end":341074,"line_start":834,"line_end":834,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339818,"byte_end":339880,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339885,"byte_end":339960,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339965,"byte_end":339968,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":339973,"byte_end":340044,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340049,"byte_end":340125,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340130,"byte_end":340169,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340174,"byte_end":340177,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340182,"byte_end":340268,"line_start":807,"line_end":807,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340273,"byte_end":340276,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340281,"byte_end":340365,"line_start":809,"line_end":809,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340370,"byte_end":340426,"line_start":810,"line_end":810,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340431,"byte_end":340434,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340439,"byte_end":340453,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340458,"byte_end":340461,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340466,"byte_end":340473,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340478,"byte_end":340519,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340524,"byte_end":340555,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340560,"byte_end":340598,"line_start":817,"line_end":817,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340603,"byte_end":340623,"line_start":818,"line_end":818,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340628,"byte_end":340631,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340636,"byte_end":340697,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340702,"byte_end":340705,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340710,"byte_end":340737,"line_start":822,"line_end":822,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340742,"byte_end":340773,"line_start":823,"line_end":823,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340778,"byte_end":340804,"line_start":824,"line_end":824,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340809,"byte_end":340879,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340884,"byte_end":340893,"line_start":826,"line_end":826,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340898,"byte_end":340905,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340910,"byte_end":340913,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340918,"byte_end":340957,"line_start":829,"line_end":829,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340962,"byte_end":340965,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":340970,"byte_end":341030,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341035,"byte_end":341044,"line_start":832,"line_end":832,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341049,"byte_end":341056,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343796,"byte_end":343816,"line_start":901,"line_end":901,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341328,"byte_end":341406,"line_start":842,"line_end":842,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341411,"byte_end":341414,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341419,"byte_end":341524,"line_start":844,"line_end":844,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341529,"byte_end":341572,"line_start":845,"line_end":845,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341577,"byte_end":341580,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341585,"byte_end":341653,"line_start":847,"line_end":847,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341658,"byte_end":341731,"line_start":848,"line_end":848,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341736,"byte_end":341792,"line_start":849,"line_end":849,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341797,"byte_end":341800,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341805,"byte_end":341880,"line_start":851,"line_end":851,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341885,"byte_end":341958,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":341963,"byte_end":342028,"line_start":853,"line_end":853,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342033,"byte_end":342036,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342041,"byte_end":342116,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342121,"byte_end":342178,"line_start":856,"line_end":856,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342183,"byte_end":342186,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342191,"byte_end":342205,"line_start":858,"line_end":858,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342210,"byte_end":342213,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342218,"byte_end":342270,"line_start":860,"line_end":860,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342275,"byte_end":342282,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342287,"byte_end":342328,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342333,"byte_end":342367,"line_start":863,"line_end":863,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342372,"byte_end":342429,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342434,"byte_end":342437,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342442,"byte_end":342492,"line_start":866,"line_end":866,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342497,"byte_end":342547,"line_start":867,"line_end":867,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342552,"byte_end":342555,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342560,"byte_end":342635,"line_start":869,"line_end":869,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342640,"byte_end":342643,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342648,"byte_end":342714,"line_start":871,"line_end":871,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342719,"byte_end":342722,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342727,"byte_end":342752,"line_start":873,"line_end":873,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342757,"byte_end":342811,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342816,"byte_end":342819,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342824,"byte_end":342849,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342854,"byte_end":342908,"line_start":877,"line_end":877,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342913,"byte_end":342916,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342921,"byte_end":342965,"line_start":879,"line_end":879,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":342970,"byte_end":343006,"line_start":880,"line_end":880,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343011,"byte_end":343018,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343023,"byte_end":343026,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343031,"byte_end":343091,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343096,"byte_end":343103,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343108,"byte_end":343149,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343154,"byte_end":343185,"line_start":886,"line_end":886,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343190,"byte_end":343241,"line_start":887,"line_end":887,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343246,"byte_end":343249,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343254,"byte_end":343308,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343313,"byte_end":343379,"line_start":890,"line_end":890,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343384,"byte_end":343387,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343392,"byte_end":343441,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343446,"byte_end":343500,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343505,"byte_end":343508,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343513,"byte_end":343566,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343571,"byte_end":343643,"line_start":896,"line_end":896,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343648,"byte_end":343707,"line_start":897,"line_end":897,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343712,"byte_end":343719,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343724,"byte_end":343758,"line_start":899,"line_end":899,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":343763,"byte_end":343788,"line_start":900,"line_end":900,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346797,"byte_end":346809,"line_start":977,"line_end":977,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344093,"byte_end":344159,"line_start":911,"line_end":911,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344164,"byte_end":344167,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344172,"byte_end":344277,"line_start":913,"line_end":913,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344282,"byte_end":344325,"line_start":914,"line_end":914,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344330,"byte_end":344333,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344338,"byte_end":344406,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344411,"byte_end":344487,"line_start":917,"line_end":917,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344492,"byte_end":344522,"line_start":918,"line_end":918,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344527,"byte_end":344530,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344535,"byte_end":344610,"line_start":920,"line_end":920,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344615,"byte_end":344688,"line_start":921,"line_end":921,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344693,"byte_end":344758,"line_start":922,"line_end":922,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344763,"byte_end":344766,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344771,"byte_end":344846,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344851,"byte_end":344908,"line_start":925,"line_end":925,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344913,"byte_end":344916,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344921,"byte_end":344935,"line_start":927,"line_end":927,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344940,"byte_end":344943,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":344948,"byte_end":344998,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345003,"byte_end":345010,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345015,"byte_end":345056,"line_start":931,"line_end":931,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345061,"byte_end":345095,"line_start":932,"line_end":932,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345100,"byte_end":345130,"line_start":933,"line_end":933,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345135,"byte_end":345192,"line_start":934,"line_end":934,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345197,"byte_end":345200,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345205,"byte_end":345255,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345260,"byte_end":345310,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345315,"byte_end":345318,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345323,"byte_end":345362,"line_start":939,"line_end":939,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345367,"byte_end":345446,"line_start":940,"line_end":940,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345451,"byte_end":345454,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345459,"byte_end":345521,"line_start":942,"line_end":942,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345526,"byte_end":345529,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345534,"byte_end":345597,"line_start":944,"line_end":944,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345602,"byte_end":345605,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345610,"byte_end":345639,"line_start":946,"line_end":946,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345644,"byte_end":345707,"line_start":947,"line_end":947,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345712,"byte_end":345742,"line_start":948,"line_end":948,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345747,"byte_end":345761,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345766,"byte_end":345769,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345774,"byte_end":345799,"line_start":951,"line_end":951,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345804,"byte_end":345858,"line_start":952,"line_end":952,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345863,"byte_end":345917,"line_start":953,"line_end":953,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345922,"byte_end":345925,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345930,"byte_end":345974,"line_start":955,"line_end":955,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":345979,"byte_end":346015,"line_start":956,"line_end":956,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346020,"byte_end":346027,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346032,"byte_end":346035,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346040,"byte_end":346100,"line_start":959,"line_end":959,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346105,"byte_end":346112,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346117,"byte_end":346158,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346163,"byte_end":346194,"line_start":962,"line_end":962,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346199,"byte_end":346250,"line_start":963,"line_end":963,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346255,"byte_end":346258,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346263,"byte_end":346317,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346322,"byte_end":346380,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346385,"byte_end":346388,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346393,"byte_end":346442,"line_start":968,"line_end":968,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346447,"byte_end":346501,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346506,"byte_end":346509,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346514,"byte_end":346567,"line_start":971,"line_end":971,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346572,"byte_end":346644,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346649,"byte_end":346708,"line_start":973,"line_end":973,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346713,"byte_end":346720,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346725,"byte_end":346759,"line_start":975,"line_end":975,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":346764,"byte_end":346789,"line_start":976,"line_end":976,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347264,"byte_end":347283,"line_start":991,"line_end":991,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347156,"byte_end":347234,"line_start":989,"line_end":989,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":347239,"byte_end":347256,"line_start":990,"line_end":990,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5612},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349577,"byte_end":349592,"line_start":1057,"line_end":1057,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":5559},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348355,"byte_end":348437,"line_start":1029,"line_end":1029,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348442,"byte_end":348445,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348450,"byte_end":348565,"line_start":1031,"line_end":1031,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348570,"byte_end":348661,"line_start":1032,"line_end":1032,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348666,"byte_end":348756,"line_start":1033,"line_end":1033,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348761,"byte_end":348846,"line_start":1034,"line_end":1034,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348851,"byte_end":348854,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348859,"byte_end":348923,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348928,"byte_end":348985,"line_start":1037,"line_end":1037,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348990,"byte_end":348993,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":348998,"byte_end":349012,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349017,"byte_end":349020,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349025,"byte_end":349032,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349037,"byte_end":349078,"line_start":1042,"line_end":1042,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349083,"byte_end":349129,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349134,"byte_end":349168,"line_start":1044,"line_end":1044,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349173,"byte_end":349176,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349181,"byte_end":349242,"line_start":1046,"line_end":1046,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349247,"byte_end":349293,"line_start":1047,"line_end":1047,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349298,"byte_end":349327,"line_start":1048,"line_end":1048,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349332,"byte_end":349335,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349340,"byte_end":349396,"line_start":1050,"line_end":1050,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349401,"byte_end":349439,"line_start":1051,"line_end":1051,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349444,"byte_end":349452,"line_start":1052,"line_end":1052,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349457,"byte_end":349464,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349469,"byte_end":349491,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":349546,"byte_end":349569,"line_start":1056,"line_end":1056,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":16218},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":403892,"byte_end":403896,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":16220}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":403770,"byte_end":403807,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":403832,"byte_end":403880,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5716},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404414,"byte_end":404418,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":403948,"byte_end":404012,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404013,"byte_end":404041,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404042,"byte_end":404045,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404046,"byte_end":404119,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404120,"byte_end":404175,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404176,"byte_end":404179,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404180,"byte_end":404187,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404188,"byte_end":404229,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404230,"byte_end":404273,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404274,"byte_end":404277,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404278,"byte_end":404322,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404323,"byte_end":404388,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404389,"byte_end":404398,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404399,"byte_end":404406,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16227},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405109,"byte_end":405115,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":16229}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":404985,"byte_end":405024,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405049,"byte_end":405097,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5751},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405639,"byte_end":405645,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405137,"byte_end":405197,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405198,"byte_end":405201,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405202,"byte_end":405269,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405270,"byte_end":405342,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405343,"byte_end":405400,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405401,"byte_end":405404,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405405,"byte_end":405412,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405413,"byte_end":405454,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405455,"byte_end":405498,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405499,"byte_end":405502,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405503,"byte_end":405538,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405539,"byte_end":405613,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405614,"byte_end":405623,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405624,"byte_end":405631,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16236},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406636,"byte_end":406646,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":16238}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406334,"byte_end":406394,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406395,"byte_end":406447,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406448,"byte_end":406451,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406452,"byte_end":406515,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406516,"byte_end":406551,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406576,"byte_end":406624,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5804},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408934,"byte_end":408945,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407162,"byte_end":407233,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407234,"byte_end":407301,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407302,"byte_end":407305,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407306,"byte_end":407378,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407379,"byte_end":407382,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407383,"byte_end":407457,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407458,"byte_end":407510,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407511,"byte_end":407514,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407515,"byte_end":407587,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407588,"byte_end":407661,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407662,"byte_end":407699,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407700,"byte_end":407703,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407704,"byte_end":407718,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407719,"byte_end":407722,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407723,"byte_end":407739,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407740,"byte_end":407743,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407744,"byte_end":407751,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407752,"byte_end":407793,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407794,"byte_end":407837,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407838,"byte_end":407841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407842,"byte_end":407910,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407911,"byte_end":407989,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407990,"byte_end":408021,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408022,"byte_end":408043,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408044,"byte_end":408047,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408048,"byte_end":408082,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408083,"byte_end":408138,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408139,"byte_end":408142,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408143,"byte_end":408196,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408197,"byte_end":408250,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408251,"byte_end":408304,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408305,"byte_end":408314,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408315,"byte_end":408322,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408323,"byte_end":408326,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408327,"byte_end":408363,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408364,"byte_end":408367,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408368,"byte_end":408379,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408380,"byte_end":408421,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408422,"byte_end":408465,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408466,"byte_end":408469,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408470,"byte_end":408519,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408520,"byte_end":408541,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408542,"byte_end":408619,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408620,"byte_end":408653,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408654,"byte_end":408657,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408658,"byte_end":408701,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408702,"byte_end":408745,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408746,"byte_end":408789,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408790,"byte_end":408833,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408834,"byte_end":408837,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408838,"byte_end":408867,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408868,"byte_end":408908,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408909,"byte_end":408918,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":408919,"byte_end":408926,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16245},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409336,"byte_end":409341,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":16247}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409220,"byte_end":409258,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409276,"byte_end":409324,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409510,"byte_end":409515,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409380,"byte_end":409428,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409429,"byte_end":409432,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409433,"byte_end":409502,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5890},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410600,"byte_end":410604,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410293,"byte_end":410334,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410335,"byte_end":410338,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410339,"byte_end":410346,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410347,"byte_end":410388,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410389,"byte_end":410432,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410433,"byte_end":410436,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410437,"byte_end":410481,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410482,"byte_end":410537,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410538,"byte_end":410574,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410575,"byte_end":410584,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410585,"byte_end":410592,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16251},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410866,"byte_end":410870,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":16253}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16287},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412046,"byte_end":412053,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":16289}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":411926,"byte_end":411968,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":411986,"byte_end":412034,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5934},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412229,"byte_end":412236,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412097,"byte_end":412151,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412152,"byte_end":412155,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412156,"byte_end":412221,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5976},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413079,"byte_end":413085,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5978}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":412978,"byte_end":413018,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413019,"byte_end":413067,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5984},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413773,"byte_end":413780,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413285,"byte_end":413358,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413359,"byte_end":413362,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413363,"byte_end":413422,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413423,"byte_end":413426,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413427,"byte_end":413441,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413442,"byte_end":413445,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413446,"byte_end":413453,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413454,"byte_end":413487,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413488,"byte_end":413516,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413517,"byte_end":413520,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413521,"byte_end":413550,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413551,"byte_end":413554,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413555,"byte_end":413619,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413620,"byte_end":413673,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413674,"byte_end":413695,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413696,"byte_end":413749,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413750,"byte_end":413757,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413758,"byte_end":413765,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16293},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":414541,"byte_end":414554,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":16295}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6025},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416535,"byte_end":416549,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415654,"byte_end":415767,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415768,"byte_end":415771,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415772,"byte_end":415867,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415868,"byte_end":415871,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415872,"byte_end":415886,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415887,"byte_end":415890,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415891,"byte_end":415898,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415899,"byte_end":415940,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415941,"byte_end":415984,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415985,"byte_end":416013,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416014,"byte_end":416017,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416018,"byte_end":416091,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416092,"byte_end":416145,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416146,"byte_end":416199,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416200,"byte_end":416237,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416238,"byte_end":416241,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416242,"byte_end":416310,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416311,"byte_end":416339,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416340,"byte_end":416353,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416354,"byte_end":416363,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416364,"byte_end":416416,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416417,"byte_end":416471,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416472,"byte_end":416509,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416510,"byte_end":416519,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":416520,"byte_end":416527,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16332},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417082,"byte_end":417088,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":16335}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6068},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418114,"byte_end":418120,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417210,"byte_end":417278,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417279,"byte_end":417355,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417356,"byte_end":417404,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417405,"byte_end":417408,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417409,"byte_end":417484,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417485,"byte_end":417554,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417555,"byte_end":417582,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417583,"byte_end":417586,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417587,"byte_end":417658,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417659,"byte_end":417679,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417680,"byte_end":417683,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417684,"byte_end":417699,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417700,"byte_end":417703,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417704,"byte_end":417715,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417716,"byte_end":417757,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417758,"byte_end":417813,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417814,"byte_end":417817,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417818,"byte_end":417843,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417844,"byte_end":417870,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417871,"byte_end":417874,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417875,"byte_end":417913,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417914,"byte_end":417917,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417918,"byte_end":417939,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417940,"byte_end":417976,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":417977,"byte_end":418029,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418030,"byte_end":418082,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418083,"byte_end":418088,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418089,"byte_end":418098,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418099,"byte_end":418106,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6075},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418589,"byte_end":418596,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418481,"byte_end":418555,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418560,"byte_end":418577,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6076},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418924,"byte_end":418931,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418662,"byte_end":418730,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418735,"byte_end":418766,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418771,"byte_end":418774,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418779,"byte_end":418852,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418857,"byte_end":418912,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6077},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419278,"byte_end":419289,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419009,"byte_end":419084,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419089,"byte_end":419120,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419125,"byte_end":419128,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419133,"byte_end":419206,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419211,"byte_end":419266,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6078},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419663,"byte_end":419673,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419427,"byte_end":419490,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419495,"byte_end":419498,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419503,"byte_end":419575,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419580,"byte_end":419651,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16378},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420615,"byte_end":420619,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":16377},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420584,"byte_end":420610,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":16380},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420657,"byte_end":420662,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":16377},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420625,"byte_end":420652,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":16377},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420569,"byte_end":420577,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":16378},{"krate":0,"index":16380}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420442,"byte_end":420508,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6131},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420743,"byte_end":420749,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420687,"byte_end":420731,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":16396},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421221,"byte_end":421239,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":16401},{"krate":0,"index":16402},{"krate":0,"index":16403},{"krate":0,"index":16404}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6134},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423531,"byte_end":423551,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421402,"byte_end":421479,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421480,"byte_end":421560,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421561,"byte_end":421643,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421644,"byte_end":421709,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421710,"byte_end":421713,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421714,"byte_end":421789,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421790,"byte_end":421859,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421860,"byte_end":421887,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421888,"byte_end":421891,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421892,"byte_end":421963,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421964,"byte_end":421984,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421985,"byte_end":421988,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":421989,"byte_end":422004,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422005,"byte_end":422008,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422009,"byte_end":422025,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422026,"byte_end":422090,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422091,"byte_end":422094,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422095,"byte_end":422106,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422107,"byte_end":422148,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422149,"byte_end":422228,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422229,"byte_end":422232,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422233,"byte_end":422258,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422259,"byte_end":422285,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422286,"byte_end":422289,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422290,"byte_end":422354,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422355,"byte_end":422429,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422430,"byte_end":422500,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422501,"byte_end":422552,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422553,"byte_end":422612,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422613,"byte_end":422616,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422617,"byte_end":422680,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422681,"byte_end":422684,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422685,"byte_end":422706,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422707,"byte_end":422762,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422763,"byte_end":422815,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422816,"byte_end":422821,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422822,"byte_end":422831,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422832,"byte_end":422839,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422840,"byte_end":422843,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422844,"byte_end":422863,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422864,"byte_end":422931,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":422932,"byte_end":423008,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423009,"byte_end":423012,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423013,"byte_end":423024,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423025,"byte_end":423066,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423067,"byte_end":423146,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423147,"byte_end":423150,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423151,"byte_end":423176,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423177,"byte_end":423203,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423204,"byte_end":423207,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423208,"byte_end":423261,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423262,"byte_end":423265,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423266,"byte_end":423326,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423327,"byte_end":423330,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423331,"byte_end":423352,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423353,"byte_end":423393,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423394,"byte_end":423446,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423447,"byte_end":423499,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423500,"byte_end":423505,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423506,"byte_end":423515,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":423516,"byte_end":423523,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6144},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424168,"byte_end":424175,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424060,"byte_end":424134,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424139,"byte_end":424156,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6145},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424531,"byte_end":424538,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424269,"byte_end":424337,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424342,"byte_end":424373,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424378,"byte_end":424381,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424386,"byte_end":424459,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424464,"byte_end":424519,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6146},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424913,"byte_end":424924,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424644,"byte_end":424719,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424724,"byte_end":424755,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424760,"byte_end":424763,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424768,"byte_end":424841,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424846,"byte_end":424901,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6147},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425330,"byte_end":425340,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425094,"byte_end":425157,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425162,"byte_end":425165,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425170,"byte_end":425242,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425247,"byte_end":425318,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":6216},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":429018,"byte_end":429024,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427576,"byte_end":427646,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427647,"byte_end":427650,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427651,"byte_end":427720,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427721,"byte_end":427802,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427803,"byte_end":427834,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427835,"byte_end":427838,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427839,"byte_end":427918,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427919,"byte_end":427998,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":427999,"byte_end":428053,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428054,"byte_end":428057,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428058,"byte_end":428138,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428139,"byte_end":428209,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428210,"byte_end":428232,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428233,"byte_end":428236,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428237,"byte_end":428314,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428315,"byte_end":428387,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428388,"byte_end":428465,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428466,"byte_end":428526,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428527,"byte_end":428530,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428531,"byte_end":428544,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428545,"byte_end":428548,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428549,"byte_end":428556,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428557,"byte_end":428598,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428599,"byte_end":428642,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428643,"byte_end":428646,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428647,"byte_end":428702,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428703,"byte_end":428726,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428727,"byte_end":428766,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428767,"byte_end":428804,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428805,"byte_end":428844,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428845,"byte_end":428861,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428862,"byte_end":428878,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428879,"byte_end":428888,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428889,"byte_end":428896,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428897,"byte_end":428900,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428901,"byte_end":428953,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428954,"byte_end":428992,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":428993,"byte_end":429002,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":429003,"byte_end":429010,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16465},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":429371,"byte_end":429377,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":16469},{"krate":0,"index":16470}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6316},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434428,"byte_end":434442,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432362,"byte_end":432396,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432397,"byte_end":432400,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432401,"byte_end":432480,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432481,"byte_end":432552,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432553,"byte_end":432629,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432630,"byte_end":432678,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432679,"byte_end":432682,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432683,"byte_end":432762,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432763,"byte_end":432838,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432839,"byte_end":432917,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432918,"byte_end":432998,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432999,"byte_end":433028,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433029,"byte_end":433032,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433033,"byte_end":433111,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433112,"byte_end":433186,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433187,"byte_end":433262,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433263,"byte_end":433338,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433339,"byte_end":433414,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433415,"byte_end":433473,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433474,"byte_end":433477,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433478,"byte_end":433551,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433552,"byte_end":433630,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433631,"byte_end":433689,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433690,"byte_end":433763,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433764,"byte_end":433832,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433833,"byte_end":433909,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433910,"byte_end":433978,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":433979,"byte_end":434032,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434033,"byte_end":434036,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434037,"byte_end":434103,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434104,"byte_end":434183,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434184,"byte_end":434231,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434232,"byte_end":434235,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434236,"byte_end":434309,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434310,"byte_end":434367,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434368,"byte_end":434416,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6326},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434950,"byte_end":434953,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434730,"byte_end":434774,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434779,"byte_end":434782,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434787,"byte_end":434862,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434867,"byte_end":434938,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6327},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435450,"byte_end":435453,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435177,"byte_end":435234,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435239,"byte_end":435242,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435247,"byte_end":435310,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435315,"byte_end":435379,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435384,"byte_end":435438,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6328},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435611,"byte_end":435619,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435548,"byte_end":435599,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6329},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":436043,"byte_end":436047,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435724,"byte_end":435757,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435762,"byte_end":435765,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435770,"byte_end":435846,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435851,"byte_end":435925,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":435930,"byte_end":436003,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":436008,"byte_end":436031,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":6356},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":6357},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6364},{"krate":0,"index":6367},{"krate":0,"index":6370},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6380},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6386},{"krate":0,"index":6389},{"krate":0,"index":6392},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6399},{"krate":0,"index":6400},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6405},{"krate":0,"index":6406},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6415},{"krate":0,"index":6418},{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":6432},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6439},{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":6448},{"krate":0,"index":6451},{"krate":0,"index":6457},{"krate":0,"index":6524},{"krate":0,"index":6525},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6531},{"krate":0,"index":6532},{"krate":0,"index":6534},{"krate":0,"index":6537},{"krate":0,"index":6540},{"krate":0,"index":6604},{"krate":0,"index":6607},{"krate":0,"index":6666},{"krate":0,"index":6667},{"krate":0,"index":6670},{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6679},{"krate":0,"index":6681},{"krate":0,"index":6683},{"krate":0,"index":6685},{"krate":0,"index":6687},{"krate":0,"index":6689},{"krate":0,"index":6692},{"krate":0,"index":6707},{"krate":0,"index":6720},{"krate":0,"index":6723},{"krate":0,"index":6727},{"krate":0,"index":6730},{"krate":0,"index":6736},{"krate":0,"index":6742},{"krate":0,"index":6747},{"krate":0,"index":6752},{"krate":0,"index":6755}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154033,"byte_end":154067,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154068,"byte_end":154093,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":438412,"byte_end":438444,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":438445,"byte_end":438448,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":438449,"byte_end":438524,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":438525,"byte_end":438582,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":16558},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":466429,"byte_end":466439,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":16561},{"krate":0,"index":16562},{"krate":0,"index":16563}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":466341,"byte_end":466400,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":16568},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":466676,"byte_end":466683,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":466588,"byte_end":466647,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":16577},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":466824,"byte_end":466834,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":16580},{"krate":0,"index":16581},{"krate":0,"index":16582},{"krate":0,"index":16583}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":466734,"byte_end":466795,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":16588},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":467122,"byte_end":467126,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":467028,"byte_end":467093,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":16597},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":467263,"byte_end":467271,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":16599},{"krate":0,"index":16600}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":467177,"byte_end":467234,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6674},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441852,"byte_end":441868,"line_start":82,"line_end":82,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6676},{"krate":0,"index":6677},{"krate":0,"index":6678}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":440757,"byte_end":440810,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":440811,"byte_end":440814,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":440815,"byte_end":440883,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":440884,"byte_end":440957,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":440958,"byte_end":441034,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441035,"byte_end":441079,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441080,"byte_end":441083,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441084,"byte_end":441162,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441163,"byte_end":441221,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441222,"byte_end":441286,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441287,"byte_end":441340,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441341,"byte_end":441420,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441421,"byte_end":441450,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441451,"byte_end":441454,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441455,"byte_end":441525,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441526,"byte_end":441603,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441604,"byte_end":441655,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441656,"byte_end":441659,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441660,"byte_end":441733,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441734,"byte_end":441791,"line_start":80,"line_end":80,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":441792,"byte_end":441840,"line_start":81,"line_end":81,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6694},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444485,"byte_end":444488,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444214,"byte_end":444263,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444268,"byte_end":444271,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444276,"byte_end":444343,"line_start":140,"line_end":140,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444348,"byte_end":444422,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444427,"byte_end":444473,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6695},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445483,"byte_end":445486,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445345,"byte_end":445400,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445405,"byte_end":445408,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445413,"byte_end":445471,"line_start":170,"line_end":170,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6696},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445650,"byte_end":445658,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445588,"byte_end":445638,"line_start":176,"line_end":176,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6697},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":446241,"byte_end":446245,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445871,"byte_end":445902,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445907,"byte_end":445910,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445915,"byte_end":445985,"line_start":185,"line_end":185,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":445990,"byte_end":446076,"line_start":186,"line_end":186,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":446081,"byte_end":446157,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":446162,"byte_end":446229,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6698},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":447520,"byte_end":447524,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":447438,"byte_end":447508,"line_start":216,"line_end":216,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6699},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":447722,"byte_end":447734,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":447640,"byte_end":447710,"line_start":224,"line_end":224,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6700},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":448063,"byte_end":448071,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":447982,"byte_end":448051,"line_start":232,"line_end":232,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6701},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":448278,"byte_end":448290,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":448197,"byte_end":448266,"line_start":240,"line_end":240,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6725},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462665,"byte_end":462670,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462612,"byte_end":462653,"line_start":572,"line_end":572,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6762},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6767},{"krate":0,"index":6768},{"krate":0,"index":6770},{"krate":0,"index":6773},{"krate":0,"index":6776},{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6790},{"krate":0,"index":6793},{"krate":0,"index":6796},{"krate":0,"index":6799},{"krate":0,"index":6800},{"krate":0,"index":6803},{"krate":0,"index":6806},{"krate":0,"index":6809},{"krate":0,"index":16604},{"krate":0,"index":16607},{"krate":0,"index":6812},{"krate":0,"index":6815},{"krate":0,"index":6824},{"krate":0,"index":6827},{"krate":0,"index":6831},{"krate":0,"index":6834},{"krate":0,"index":6836},{"krate":0,"index":6840},{"krate":0,"index":6844},{"krate":0,"index":6849},{"krate":0,"index":6855},{"krate":0,"index":16637},{"krate":0,"index":16642},{"krate":0,"index":16646},{"krate":0,"index":16651},{"krate":0,"index":16655},{"krate":0,"index":16659},{"krate":0,"index":6861},{"krate":0,"index":6867},{"krate":0,"index":6869},{"krate":0,"index":6875},{"krate":0,"index":6877},{"krate":0,"index":6882}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154249,"byte_end":154283,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154284,"byte_end":154309,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":479616,"byte_end":479647,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":16604},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":480687,"byte_end":480696,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":16606}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6817},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481178,"byte_end":481181,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":480978,"byte_end":481017,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481022,"byte_end":481025,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481030,"byte_end":481100,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481105,"byte_end":481166,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6818},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481391,"byte_end":481394,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481253,"byte_end":481308,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481313,"byte_end":481316,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481321,"byte_end":481379,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6819},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481510,"byte_end":481518,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481449,"byte_end":481498,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6820},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481880,"byte_end":481884,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481577,"byte_end":481608,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481613,"byte_end":481616,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481621,"byte_end":481693,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481698,"byte_end":481772,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481777,"byte_end":481845,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481850,"byte_end":481868,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6821},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482050,"byte_end":482054,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":481968,"byte_end":482038,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6822},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482204,"byte_end":482212,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482123,"byte_end":482192,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6823},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482348,"byte_end":482353,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482295,"byte_end":482336,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6834},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":484060,"byte_end":484070,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483439,"byte_end":483513,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483514,"byte_end":483517,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483518,"byte_end":483597,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483598,"byte_end":483649,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483650,"byte_end":483724,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483725,"byte_end":483784,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483785,"byte_end":483788,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483789,"byte_end":483861,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483862,"byte_end":483912,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483913,"byte_end":483916,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483917,"byte_end":483994,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483995,"byte_end":484052,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":16637},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485377,"byte_end":485381,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485287,"byte_end":485348,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":16646},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485534,"byte_end":485541,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485446,"byte_end":485505,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":16655},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485695,"byte_end":485703,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485609,"byte_end":485666,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6905},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487718,"byte_end":487727,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487348,"byte_end":487435,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487436,"byte_end":487439,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487440,"byte_end":487516,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487517,"byte_end":487570,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487571,"byte_end":487574,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487575,"byte_end":487652,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/abortable.rs","byte_start":487653,"byte_end":487710,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6939},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6944},{"krate":0,"index":6947},{"krate":0,"index":6950},{"krate":0,"index":6953},{"krate":0,"index":6954},{"krate":0,"index":6957},{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6964},{"krate":0,"index":6967},{"krate":0,"index":6970},{"krate":0,"index":7003},{"krate":0,"index":7006},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7044},{"krate":0,"index":7047},{"krate":0,"index":7095},{"krate":0,"index":7098},{"krate":0,"index":7133},{"krate":0,"index":7136},{"krate":0,"index":7169},{"krate":0,"index":7172},{"krate":0,"index":7213},{"krate":0,"index":7216},{"krate":0,"index":7267},{"krate":0,"index":7270},{"krate":0,"index":7306},{"krate":0,"index":7309},{"krate":0,"index":7378},{"krate":0,"index":7381},{"krate":0,"index":7428},{"krate":0,"index":7429},{"krate":0,"index":7432},{"krate":0,"index":7435},{"krate":0,"index":7516},{"krate":0,"index":7519},{"krate":0,"index":7592},{"krate":0,"index":7595},{"krate":0,"index":7648},{"krate":0,"index":7651},{"krate":0,"index":7654},{"krate":0,"index":7688}],"decl_id":null,"docs":" Asynchronous sinks.","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10823,"byte_end":10847,"line_start":302,"line_end":302,"column_start":1,"column_end":25}},{"value":"/ Asynchronous sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":487955,"byte_end":487978,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":487979,"byte_end":487982,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":487983,"byte_end":488008,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488009,"byte_end":488012,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Sink`] trait, which allows you to asynchronously write data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488013,"byte_end":488085,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ - The [`SinkExt`] trait, which provides adapters for chaining and composing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488086,"byte_end":488165,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":488166,"byte_end":488178,"line_start":7,"line_end":7,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":16662},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499459,"byte_end":499464,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":16666},{"krate":0,"index":16667}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499303,"byte_end":499362,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499380,"byte_end":499447,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16673},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500455,"byte_end":500460,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":16675}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500343,"byte_end":500379,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500397,"byte_end":500443,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":7029},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500859,"byte_end":500864,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"pub fn drain<T>() -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500497,"byte_end":500560,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500561,"byte_end":500564,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500565,"byte_end":500610,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500611,"byte_end":500614,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500615,"byte_end":500629,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500630,"byte_end":500633,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500634,"byte_end":500641,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500642,"byte_end":500683,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500684,"byte_end":500723,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500724,"byte_end":500727,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500728,"byte_end":500762,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500763,"byte_end":500788,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500789,"byte_end":500843,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500844,"byte_end":500851,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16679},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502054,"byte_end":502060,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":16682},{"krate":0,"index":16683}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7078},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502340,"byte_end":502347,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"pub fn get_ref(&Self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502282,"byte_end":502328,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7079},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502478,"byte_end":502485,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502419,"byte_end":502466,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7080},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502643,"byte_end":502654,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502577,"byte_end":502631,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7081},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":503026,"byte_end":503036,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"pub fn into_inner(Self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502792,"byte_end":502853,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502858,"byte_end":502861,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502866,"byte_end":502935,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502940,"byte_end":503014,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":16724},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505282,"byte_end":505286,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Feed","qualname":"::sink::feed::Feed","value":"Feed {  }","parent":null,"children":[{"krate":0,"index":16728},{"krate":0,"index":16729}],"decl_id":null,"docs":" Future for the [`feed`](super::SinkExt::feed) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`feed`](super::SinkExt::feed) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505128,"byte_end":505185,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505203,"byte_end":505270,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16735},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":506617,"byte_end":506622,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":16739},{"krate":0,"index":16740}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":506461,"byte_end":506520,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":506538,"byte_end":506605,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16746},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":507859,"byte_end":507870,"line_start":10,"line_end":10,"column_start":16,"column_end":27},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":16750}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16810},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":509170,"byte_end":509180,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":16813},{"krate":0,"index":16814}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":16869},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":511077,"byte_end":511081,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":16873}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":510923,"byte_end":510980,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":510998,"byte_end":511065,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7349},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":512510,"byte_end":512517,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7355}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":512274,"byte_end":512339,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":512340,"byte_end":512380,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":512431,"byte_end":512498,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":16879},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515468,"byte_end":515474,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::sink::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":16883},{"krate":0,"index":16884}],"decl_id":null,"docs":" Sink for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7411},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":516074,"byte_end":516080,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sink::unfold::unfold","value":"pub fn unfold<T, F, R, Item, E>(T, F) -> Unfold<T, F, R> where\nF: FnMut(T, Item) -> R, R: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink from a function which processes one item at a time.","sig":null,"attributes":[{"value":"/ Create a sink from a function which processes one item at a time.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515565,"byte_end":515634,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515635,"byte_end":515638,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515639,"byte_end":515653,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515654,"byte_end":515657,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515658,"byte_end":515665,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515666,"byte_end":515707,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515708,"byte_end":515747,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515748,"byte_end":515751,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let unfold = sink::unfold(0, |mut sum, i: i32| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515752,"byte_end":515804,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/     async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515805,"byte_end":515825,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         sum += i;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515826,"byte_end":515847,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         eprintln!(\"{}\", i);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515848,"byte_end":515879,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/         Ok::<_, futures::never::Never>(sum)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515880,"byte_end":515927,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515928,"byte_end":515937,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515938,"byte_end":515945,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ futures::pin_mut!(unfold);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515946,"byte_end":515976,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ unfold.send(5).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":515977,"byte_end":516003,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":516004,"byte_end":516058,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":516059,"byte_end":516066,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":16937},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":518058,"byte_end":518062,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":16943},{"krate":0,"index":16944},{"krate":0,"index":16945},{"krate":0,"index":16946}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17020},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":521605,"byte_end":521616,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":17026},{"krate":0,"index":17027},{"krate":0,"index":17028},{"krate":0,"index":17029},{"krate":0,"index":17030}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17107},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":525351,"byte_end":525357,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":17110},{"krate":0,"index":17111},{"krate":0,"index":17112}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":7654},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489272,"byte_end":489279,"line_start":65,"line_end":65,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":7656},{"krate":0,"index":7661},{"krate":0,"index":7665},{"krate":0,"index":7668},{"krate":0,"index":7670},{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676},{"krate":0,"index":7677},{"krate":0,"index":7680},{"krate":0,"index":7682},{"krate":0,"index":7684},{"krate":0,"index":7685},{"krate":0,"index":7686},{"krate":0,"index":7687}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489163,"byte_end":489235,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489236,"byte_end":489261,"line_start":64,"line_end":64,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":7656},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489871,"byte_end":489875,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"pub fn with<U, Fut, F, E>(Self, F) -> With<Self, Item, U, Fut, F> where\nF: FnMut(U) -> Fut, Fut: Future<Output = Result<Item, E>>,\nE: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489304,"byte_end":489351,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489356,"byte_end":489359,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489364,"byte_end":489435,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489440,"byte_end":489491,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489496,"byte_end":489499,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489504,"byte_end":489579,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489584,"byte_end":489660,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489665,"byte_end":489734,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489739,"byte_end":489742,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489747,"byte_end":489819,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489824,"byte_end":489863,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7661},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491231,"byte_end":491244,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"pub fn with_flat_map<U, St, F>(Self, F) -> WithFlatMap<Self, Item, U, St, F>\nwhere F: FnMut(U) -> St, St: Stream<Item = Result<Item, Self::Error>>,\nSelf: Sized","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490137,"byte_end":490184,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490189,"byte_end":490192,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490197,"byte_end":490268,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490273,"byte_end":490324,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490329,"byte_end":490332,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490337,"byte_end":490408,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490413,"byte_end":490489,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490494,"byte_end":490525,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490530,"byte_end":490533,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490538,"byte_end":490610,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490615,"byte_end":490659,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490664,"byte_end":490667,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490672,"byte_end":490686,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490691,"byte_end":490694,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490699,"byte_end":490706,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490711,"byte_end":490752,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490757,"byte_end":490788,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490793,"byte_end":490824,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490829,"byte_end":490872,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490877,"byte_end":490880,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490885,"byte_end":490921,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490926,"byte_end":490929,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490934,"byte_end":490973,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":490978,"byte_end":491015,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491020,"byte_end":491027,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491032,"byte_end":491035,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491040,"byte_end":491070,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491075,"byte_end":491088,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491093,"byte_end":491141,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491146,"byte_end":491197,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491202,"byte_end":491211,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491216,"byte_end":491223,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7665},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491984,"byte_end":491996,"line_start":143,"line_end":143,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"pub fn sink_map_err<E, F>(Self, F) -> SinkMapErr<Self, F> where\nF: FnOnce(Self::Error) -> E, Self: Sized","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":491930,"byte_end":491976,"line_start":142,"line_end":142,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7668},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492364,"byte_end":492377,"line_start":154,"line_end":154,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"pub fn sink_err_into<E>(Self) -> err_into::SinkErrInto<Self, Item, E> where\nSelf: Sized, Self::Error: Into<E>","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492183,"byte_end":492258,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492263,"byte_end":492266,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492271,"byte_end":492356,"line_start":153,"line_end":153,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":7670},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493212,"byte_end":493218,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"pub fn buffer(Self, usize) -> Buffer<Self, Item> where Self: Sized","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492563,"byte_end":492612,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492617,"byte_end":492620,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492625,"byte_end":492691,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492696,"byte_end":492772,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492777,"byte_end":492852,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492857,"byte_end":492895,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492900,"byte_end":492903,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492908,"byte_end":492980,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":492985,"byte_end":493024,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493029,"byte_end":493032,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493037,"byte_end":493112,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493117,"byte_end":493174,"line_start":173,"line_end":173,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493179,"byte_end":493204,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7671},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493412,"byte_end":493417,"line_start":183,"line_end":183,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"pub fn close(&mut Self) -> Close<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493385,"byte_end":493404,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":7672},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493751,"byte_end":493757,"line_start":194,"line_end":194,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"pub fn fanout<Si>(Self, Si) -> Fanout<Self, Si> where Self: Sized,\nItem: Clone, Si: Sink<Item, Error = Self::Error>","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493572,"byte_end":493607,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493612,"byte_end":493615,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493620,"byte_end":493702,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493707,"byte_end":493743,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7674},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494184,"byte_end":494189,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":493983,"byte_end":494032,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494037,"byte_end":494040,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494045,"byte_end":494126,"line_start":205,"line_end":205,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494131,"byte_end":494176,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7675},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494671,"byte_end":494675,"line_start":220,"line_end":220,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"pub fn send(&mut Self, Item) -> Send<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494344,"byte_end":494417,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494422,"byte_end":494460,"line_start":215,"line_end":215,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494465,"byte_end":494468,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494473,"byte_end":494547,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `feed` or `send_all`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494552,"byte_end":494613,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ rather than flushing between each item.**","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494618,"byte_end":494663,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7676},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495152,"byte_end":495156,"line_start":233,"line_end":233,"column_start":8,"column_end":12},"name":"feed","qualname":"::sink::SinkExt::feed","value":"pub fn feed(&mut Self, Item) -> Feed<, Self, Item> where Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been received\n by the sink.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been received","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494846,"byte_end":494912,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ by the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494917,"byte_end":494933,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494938,"byte_end":494941,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `send`, the returned future does not flush the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":494946,"byte_end":495009,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ It is the caller's responsibility to ensure all pending items","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495014,"byte_end":495079,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ are processed, which can be done via `flush` or `close`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495084,"byte_end":495144,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7677},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496063,"byte_end":496071,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"pub fn send_all<'a, St>(&'a mut Self, &'a mut St) -> SendAll where\nSt: TryStream<Ok = Item, Error = Item> + Stream + Unpin + ?Sized, Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495327,"byte_end":495402,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495407,"byte_end":495445,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495450,"byte_end":495453,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495458,"byte_end":495531,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495536,"byte_end":495612,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495617,"byte_end":495691,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed. If the stream produces","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495696,"byte_end":495774,"line_start":246,"line_end":246,"column_start":5,"column_end":83}},{"value":"/ an error, that error will be returned by this future without flushing the sink.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495779,"byte_end":495862,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495867,"byte_end":495870,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495875,"byte_end":495933,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":495938,"byte_end":496013,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496018,"byte_end":496055,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7680},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496869,"byte_end":496878,"line_start":268,"line_end":268,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"pub fn left_sink<Si2>(Self) -> Either<Self, Si2> where Si2: Sink<Item, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496596,"byte_end":496667,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496672,"byte_end":496693,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496698,"byte_end":496701,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496706,"byte_end":496784,"line_start":266,"line_end":266,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":496789,"byte_end":496861,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7682},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497346,"byte_end":497356,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"pub fn right_sink<Si1>(Self) -> Either<Si1, Self> where Si1: Sink<Item, Error\n= Self::Error>, Self: Sized","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497069,"byte_end":497145,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497150,"byte_end":497171,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497176,"byte_end":497179,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497184,"byte_end":497261,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497266,"byte_end":497338,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7684},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498001,"byte_end":498017,"line_start":302,"line_end":302,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"pub fn poll_ready_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497903,"byte_end":497973,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":497978,"byte_end":497993,"line_start":301,"line_end":301,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7685},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498268,"byte_end":498284,"line_start":311,"line_end":311,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"pub fn start_send_unpin(&mut Self, Item) -> Result<(), Self::Error> where\nSelf: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498170,"byte_end":498240,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498245,"byte_end":498260,"line_start":310,"line_end":310,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7686},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498521,"byte_end":498537,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"pub fn poll_flush_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498423,"byte_end":498493,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498498,"byte_end":498513,"line_start":319,"line_end":319,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7687},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498788,"byte_end":498804,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"pub fn poll_close_unpin(&mut Self, &mut Context)\n-> Poll<Result<(), Self::Error>> where Self: Unpin","parent":{"krate":0,"index":7654},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498690,"byte_end":498760,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":498765,"byte_end":498780,"line_start":328,"line_end":328,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":7699},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7704},{"krate":0,"index":7707},{"krate":0,"index":7710},{"krate":0,"index":7713},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7720},{"krate":0,"index":7723},{"krate":0,"index":7726},{"krate":0,"index":7729},{"krate":0,"index":7732},{"krate":0,"index":7735},{"krate":0,"index":7738},{"krate":0,"index":7741},{"krate":0,"index":7744},{"krate":0,"index":7747},{"krate":0,"index":7748},{"krate":0,"index":7751},{"krate":0,"index":7754},{"krate":0,"index":7757},{"krate":0,"index":7791},{"krate":0,"index":7792},{"krate":0,"index":7795}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528025,"byte_end":528058,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528059,"byte_end":528062,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528063,"byte_end":528088,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528089,"byte_end":528092,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528093,"byte_end":528141,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528142,"byte_end":528195,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528196,"byte_end":528244,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528245,"byte_end":528292,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528293,"byte_end":528296,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528297,"byte_end":528371,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/mod.rs","byte_start":528372,"byte_end":528444,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":7785},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529694,"byte_end":529702,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":7786}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529651,"byte_end":529683,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7786},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530699,"byte_end":530704,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":7785},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529716,"byte_end":529781,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529786,"byte_end":529801,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529806,"byte_end":529809,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529814,"byte_end":529884,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529889,"byte_end":529908,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529913,"byte_end":529916,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529921,"byte_end":529990,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529995,"byte_end":530068,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530073,"byte_end":530112,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530117,"byte_end":530120,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530125,"byte_end":530191,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530196,"byte_end":530262,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530267,"byte_end":530338,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530343,"byte_end":530399,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530404,"byte_end":530407,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530412,"byte_end":530419,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530424,"byte_end":530462,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530467,"byte_end":530499,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530504,"byte_end":530507,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530512,"byte_end":530558,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530563,"byte_end":530566,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530571,"byte_end":530608,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530613,"byte_end":530649,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530654,"byte_end":530661,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":530666,"byte_end":530691,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":7788},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532458,"byte_end":532471,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":7789}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532410,"byte_end":532447,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7789},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533514,"byte_end":533525,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":7788},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532490,"byte_end":532555,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532560,"byte_end":532575,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532580,"byte_end":532583,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532588,"byte_end":532658,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532663,"byte_end":532682,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532687,"byte_end":532690,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532695,"byte_end":532764,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532769,"byte_end":532842,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532847,"byte_end":532886,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532891,"byte_end":532894,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532899,"byte_end":532965,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532970,"byte_end":533036,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533041,"byte_end":533112,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533117,"byte_end":533173,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533178,"byte_end":533181,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533186,"byte_end":533193,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533198,"byte_end":533235,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533240,"byte_end":533277,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533282,"byte_end":533285,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533290,"byte_end":533326,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533331,"byte_end":533368,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533373,"byte_end":533376,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533381,"byte_end":533418,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533423,"byte_end":533464,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533469,"byte_end":533476,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":533481,"byte_end":533506,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":7798},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","parent":null,"children":[{"krate":0,"index":7799}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":534930,"byte_end":534972,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":534973,"byte_end":534976,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":534977,"byte_end":535043,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":7799},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535680,"byte_end":535685,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535045,"byte_end":535080,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535081,"byte_end":535084,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535085,"byte_end":535160,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535161,"byte_end":535198,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535199,"byte_end":535202,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535203,"byte_end":535267,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535268,"byte_end":535271,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535272,"byte_end":535343,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535344,"byte_end":535395,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535396,"byte_end":535488,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535489,"byte_end":535492,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535493,"byte_end":535564,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/never.rs","byte_start":535565,"byte_end":535670,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":7800},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":7801},{"krate":0,"index":7804},{"krate":0,"index":7807},{"krate":0,"index":7808},{"krate":0,"index":7811},{"krate":0,"index":7814},{"krate":0,"index":7815},{"krate":0,"index":7818},{"krate":0,"index":7821},{"krate":0,"index":7824},{"krate":0,"index":7827},{"krate":0,"index":7830},{"krate":0,"index":7833},{"krate":0,"index":7834},{"krate":0,"index":7837},{"krate":0,"index":7840},{"krate":0,"index":7843},{"krate":0,"index":7846},{"krate":0,"index":7847},{"krate":0,"index":7849},{"krate":0,"index":7936},{"krate":0,"index":7939},{"krate":0,"index":8030},{"krate":0,"index":8031},{"krate":0,"index":8034},{"krate":0,"index":8037},{"krate":0,"index":8118},{"krate":0,"index":8121},{"krate":0,"index":8169},{"krate":0,"index":8172},{"krate":0,"index":8228},{"krate":0,"index":8231},{"krate":0,"index":8261},{"krate":0,"index":8264},{"krate":0,"index":8309},{"krate":0,"index":8310},{"krate":0,"index":8313},{"krate":0,"index":8316},{"krate":0,"index":8354},{"krate":0,"index":8355},{"krate":0,"index":8358},{"krate":0,"index":8361},{"krate":0,"index":8421},{"krate":0,"index":8424},{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8462},{"krate":0,"index":8465},{"krate":0,"index":8496},{"krate":0,"index":8499},{"krate":0,"index":8529},{"krate":0,"index":8532},{"krate":0,"index":8571},{"krate":0,"index":8574},{"krate":0,"index":8613},{"krate":0,"index":8616},{"krate":0,"index":8646},{"krate":0,"index":8649},{"krate":0,"index":8683},{"krate":0,"index":8686},{"krate":0,"index":8722},{"krate":0,"index":8725},{"krate":0,"index":8770},{"krate":0,"index":8773},{"krate":0,"index":8817},{"krate":0,"index":8820},{"krate":0,"index":8869},{"krate":0,"index":8872},{"krate":0,"index":8910},{"krate":0,"index":8913},{"krate":0,"index":8948},{"krate":0,"index":8949},{"krate":0,"index":8952},{"krate":0,"index":8955},{"krate":0,"index":8989},{"krate":0,"index":8992},{"krate":0,"index":9027},{"krate":0,"index":9028},{"krate":0,"index":9031},{"krate":0,"index":9034},{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9117},{"krate":0,"index":9118},{"krate":0,"index":9120},{"krate":0,"index":9123},{"krate":0,"index":9166},{"krate":0,"index":9169},{"krate":0,"index":9196},{"krate":0,"index":9199},{"krate":0,"index":9229},{"krate":0,"index":9232},{"krate":0,"index":9266},{"krate":0,"index":9269},{"krate":0,"index":9305},{"krate":0,"index":9308},{"krate":0,"index":9323},{"krate":0,"index":9325},{"krate":0,"index":9336},{"krate":0,"index":9338},{"krate":0,"index":9341},{"krate":0,"index":9343},{"krate":0,"index":9351},{"krate":0,"index":9353},{"krate":0,"index":9355}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11117,"byte_end":11139,"line_start":317,"line_end":317,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11186,"byte_end":11209,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":535716,"byte_end":535737,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":535738,"byte_end":535741,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":535742,"byte_end":535815,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":535816,"byte_end":535895,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":535896,"byte_end":535969,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":535970,"byte_end":536045,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536046,"byte_end":536125,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536126,"byte_end":536201,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536202,"byte_end":536230,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536231,"byte_end":536234,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536235,"byte_end":536314,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536315,"byte_end":536393,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536394,"byte_end":536470,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536471,"byte_end":536513,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536514,"byte_end":536517,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536518,"byte_end":536582,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":536583,"byte_end":536640,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":17164},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563727,"byte_end":563737,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563078,"byte_end":563143,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563144,"byte_end":563193,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563194,"byte_end":563265,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563266,"byte_end":563269,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563270,"byte_end":563346,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563347,"byte_end":563418,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563419,"byte_end":563487,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563488,"byte_end":563556,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563557,"byte_end":563632,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563633,"byte_end":563647,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":7894},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564302,"byte_end":564305,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564232,"byte_end":564290,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7895},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564414,"byte_end":564421,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564351,"byte_end":564402,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7896},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564535,"byte_end":564542,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564464,"byte_end":564523,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7897},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564663,"byte_end":564673,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564597,"byte_end":564651,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":17197},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":569539,"byte_end":569548,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":17199},{"krate":0,"index":17200},{"krate":0,"index":17201},{"krate":0,"index":17202}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7997},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":569843,"byte_end":569846,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":569701,"byte_end":569793,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":569798,"byte_end":569831,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7998},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570008,"byte_end":570021,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":569931,"byte_end":569996,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7999},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570527,"byte_end":570533,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570367,"byte_end":570423,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570428,"byte_end":570431,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570436,"byte_end":570515,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8003},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571182,"byte_end":571195,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"pub fn seek_relative(Pin<&mut Self>, i64) -> SeeKRelative<, R>","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570853,"byte_end":570940,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570945,"byte_end":571015,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571020,"byte_end":571104,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571109,"byte_end":571170,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8004},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571665,"byte_end":571683,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"pub fn poll_seek_relative(Pin<&mut Self>, &mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571325,"byte_end":571423,"line_start":84,"line_end":84,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571428,"byte_end":571498,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571503,"byte_end":571587,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":571592,"byte_end":571653,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":17250},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":577879,"byte_end":577891,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":17253},{"krate":0,"index":17254},{"krate":0,"index":17255}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":577714,"byte_end":577801,"line_start":235,"line_end":235,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":577819,"byte_end":577867,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":17260},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":579966,"byte_end":579975,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":17262},{"krate":0,"index":17263},{"krate":0,"index":17264}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8091},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":580250,"byte_end":580253,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":580108,"byte_end":580200,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":580205,"byte_end":580238,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8092},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":580415,"byte_end":580428,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":580338,"byte_end":580403,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8094},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":581551,"byte_end":581557,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":581483,"byte_end":581539,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":17309},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":586646,"byte_end":586656,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":17311}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8152},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":586911,"byte_end":586914,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"pub fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":586760,"byte_end":586848,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":586853,"byte_end":586899,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":8153},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587080,"byte_end":587093,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587002,"byte_end":587068,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":8155},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587667,"byte_end":587673,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587588,"byte_end":587655,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8156},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587851,"byte_end":587858,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587736,"byte_end":587817,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587822,"byte_end":587839,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":17345},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":591695,"byte_end":591700,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":17348},{"krate":0,"index":17349},{"krate":0,"index":17350}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8209},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592066,"byte_end":592073,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":591992,"byte_end":592054,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":8210},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592405,"byte_end":592412,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592142,"byte_end":592212,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592217,"byte_end":592220,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592225,"byte_end":592298,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592303,"byte_end":592376,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592381,"byte_end":592393,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8211},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592771,"byte_end":592782,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592501,"byte_end":592578,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592583,"byte_end":592586,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592591,"byte_end":592664,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592669,"byte_end":592742,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592747,"byte_end":592759,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8212},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592985,"byte_end":592995,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":592917,"byte_end":592973,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":17394},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595525,"byte_end":595530,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":17397}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595363,"byte_end":595428,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595446,"byte_end":595513,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":8301},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":597083,"byte_end":597087,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596234,"byte_end":596309,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596310,"byte_end":596313,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596314,"byte_end":596397,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596398,"byte_end":596478,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596479,"byte_end":596551,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596552,"byte_end":596565,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596566,"byte_end":596569,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596570,"byte_end":596617,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596618,"byte_end":596621,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596622,"byte_end":596636,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596637,"byte_end":596640,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596641,"byte_end":596648,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596649,"byte_end":596690,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596691,"byte_end":596742,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596743,"byte_end":596746,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596747,"byte_end":596790,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596791,"byte_end":596838,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596839,"byte_end":596842,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596843,"byte_end":596896,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596897,"byte_end":596923,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596924,"byte_end":596927,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596928,"byte_end":596953,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":596954,"byte_end":597007,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":597008,"byte_end":597067,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":597068,"byte_end":597075,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17402},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":597432,"byte_end":597436,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":17406}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":8346},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598836,"byte_end":598844,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W>(R, &mut W) -> CopyBuf<, R, W> where R: AsyncBufRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":597980,"byte_end":598055,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598056,"byte_end":598059,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598060,"byte_end":598146,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598147,"byte_end":598227,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598228,"byte_end":598300,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598301,"byte_end":598314,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598315,"byte_end":598318,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598319,"byte_end":598366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598367,"byte_end":598370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598371,"byte_end":598385,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598386,"byte_end":598389,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598390,"byte_end":598397,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598398,"byte_end":598439,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598440,"byte_end":598491,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598492,"byte_end":598495,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598496,"byte_end":598539,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598540,"byte_end":598587,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598588,"byte_end":598591,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598592,"byte_end":598649,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598650,"byte_end":598676,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598677,"byte_end":598680,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598681,"byte_end":598706,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598707,"byte_end":598760,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598761,"byte_end":598820,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":598821,"byte_end":598828,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17456},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":599177,"byte_end":599184,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":17460},{"krate":0,"index":17461},{"krate":0,"index":17462}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17518},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601106,"byte_end":601112,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":17520}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600339,"byte_end":600402,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600403,"byte_end":600436,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600437,"byte_end":600440,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600441,"byte_end":600509,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600510,"byte_end":600592,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600593,"byte_end":600672,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600673,"byte_end":600698,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600699,"byte_end":600702,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600703,"byte_end":600769,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600770,"byte_end":600837,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600838,"byte_end":600871,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600872,"byte_end":600875,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600876,"byte_end":600915,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600916,"byte_end":600955,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600956,"byte_end":600997,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":600998,"byte_end":601061,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8399},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601692,"byte_end":601695,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601171,"byte_end":601246,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601251,"byte_end":601254,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601259,"byte_end":601333,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601338,"byte_end":601406,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601411,"byte_end":601449,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601454,"byte_end":601457,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601462,"byte_end":601476,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601481,"byte_end":601484,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601489,"byte_end":601496,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601501,"byte_end":601529,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601534,"byte_end":601537,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601542,"byte_end":601581,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601586,"byte_end":601634,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601639,"byte_end":601668,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601673,"byte_end":601680,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8400},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602119,"byte_end":602129,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601774,"byte_end":601831,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601836,"byte_end":601839,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601844,"byte_end":601858,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601863,"byte_end":601866,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601871,"byte_end":601878,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601883,"byte_end":601911,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601916,"byte_end":601919,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601924,"byte_end":601963,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601968,"byte_end":602016,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602021,"byte_end":602050,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602055,"byte_end":602058,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602063,"byte_end":602095,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602100,"byte_end":602107,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8401},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602537,"byte_end":602544,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602186,"byte_end":602246,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602251,"byte_end":602254,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602259,"byte_end":602273,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602278,"byte_end":602281,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602286,"byte_end":602293,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602298,"byte_end":602326,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602331,"byte_end":602334,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602339,"byte_end":602378,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602383,"byte_end":602431,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602436,"byte_end":602465,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602470,"byte_end":602473,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602478,"byte_end":602513,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602518,"byte_end":602525,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8402},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603116,"byte_end":603123,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602600,"byte_end":602668,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602673,"byte_end":602676,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602681,"byte_end":602754,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602759,"byte_end":602821,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602826,"byte_end":602829,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602834,"byte_end":602848,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602853,"byte_end":602856,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602861,"byte_end":602868,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602873,"byte_end":602901,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602906,"byte_end":602909,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602914,"byte_end":602957,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":602962,"byte_end":603010,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603015,"byte_end":603044,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603049,"byte_end":603052,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603057,"byte_end":603092,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603097,"byte_end":603104,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8403},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603781,"byte_end":603789,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603187,"byte_end":603235,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603240,"byte_end":603243,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603248,"byte_end":603262,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603267,"byte_end":603270,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603275,"byte_end":603282,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603287,"byte_end":603328,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603333,"byte_end":603387,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603392,"byte_end":603395,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603400,"byte_end":603452,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603457,"byte_end":603460,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603465,"byte_end":603500,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603505,"byte_end":603508,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603513,"byte_end":603556,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603561,"byte_end":603596,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603601,"byte_end":603604,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603609,"byte_end":603653,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603658,"byte_end":603693,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603698,"byte_end":603757,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603762,"byte_end":603769,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8404},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604257,"byte_end":604269,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603847,"byte_end":603884,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603889,"byte_end":603892,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603897,"byte_end":603911,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603916,"byte_end":603919,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603924,"byte_end":603931,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603936,"byte_end":603964,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603969,"byte_end":603972,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":603977,"byte_end":604029,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604034,"byte_end":604037,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604042,"byte_end":604077,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604082,"byte_end":604085,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604090,"byte_end":604115,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604120,"byte_end":604155,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604160,"byte_end":604163,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604168,"byte_end":604193,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604198,"byte_end":604233,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604238,"byte_end":604245,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8448},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607039,"byte_end":607044,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8449}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":606938,"byte_end":606978,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":606979,"byte_end":607027,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":8450},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607604,"byte_end":607609,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607065,"byte_end":607112,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607113,"byte_end":607116,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607117,"byte_end":607189,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607190,"byte_end":607193,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607194,"byte_end":607208,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607209,"byte_end":607212,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607213,"byte_end":607278,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607279,"byte_end":607282,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607283,"byte_end":607290,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607291,"byte_end":607332,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607333,"byte_end":607375,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607376,"byte_end":607379,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607380,"byte_end":607415,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607416,"byte_end":607449,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607450,"byte_end":607496,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607497,"byte_end":607528,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607529,"byte_end":607588,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607589,"byte_end":607596,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17546},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608538,"byte_end":608545,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":17549}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608368,"byte_end":608441,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608459,"byte_end":608526,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17554},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610317,"byte_end":610322,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":17557}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610155,"byte_end":610220,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610238,"byte_end":610305,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17569},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/into_sink.rs","byte_start":611305,"byte_end":611313,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"IntoSink","qualname":"::io::into_sink::IntoSink","value":"IntoSink {  }","parent":null,"children":[{"krate":0,"index":17572},{"krate":0,"index":17573}],"decl_id":null,"docs":" Sink for the [`into_sink`](super::AsyncWriteExt::into_sink) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17618},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":613914,"byte_end":613919,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":17620},{"krate":0,"index":17621},{"krate":0,"index":17622},{"krate":0,"index":17623}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":17666},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615119,"byte_end":615123,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":17669},{"krate":0,"index":17670}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":614960,"byte_end":615022,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615040,"byte_end":615107,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17675},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":616015,"byte_end":616027,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":17678},{"krate":0,"index":17679}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":615838,"byte_end":615918,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":615936,"byte_end":616003,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17684},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":616993,"byte_end":617002,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":17687},{"krate":0,"index":17688}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":616822,"byte_end":616896,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":616914,"byte_end":616981,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17693},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":618342,"byte_end":618350,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":17696},{"krate":0,"index":17697},{"krate":0,"index":17698},{"krate":0,"index":17699}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":618170,"byte_end":618245,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":618263,"byte_end":618330,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17704},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620158,"byte_end":620167,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":17707},{"krate":0,"index":17708},{"krate":0,"index":17709}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":619985,"byte_end":620061,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620079,"byte_end":620146,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17714},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":623173,"byte_end":623185,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":17717},{"krate":0,"index":17718},{"krate":0,"index":17719},{"krate":0,"index":17720}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":622994,"byte_end":623076,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":623094,"byte_end":623161,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17725},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":625023,"byte_end":625032,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":17728},{"krate":0,"index":17729},{"krate":0,"index":17730},{"krate":0,"index":17731}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":624849,"byte_end":624926,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":624944,"byte_end":625011,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8940},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626745,"byte_end":626751,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":8941}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626643,"byte_end":626684,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626685,"byte_end":626733,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":8942},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627308,"byte_end":627314,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626771,"byte_end":626840,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626841,"byte_end":626844,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626845,"byte_end":626925,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626926,"byte_end":626945,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626946,"byte_end":626949,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626950,"byte_end":626964,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626965,"byte_end":626968,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626969,"byte_end":626976,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":626977,"byte_end":627018,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627019,"byte_end":627061,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627062,"byte_end":627065,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627066,"byte_end":627094,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627095,"byte_end":627134,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627135,"byte_end":627185,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627186,"byte_end":627232,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627233,"byte_end":627292,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627293,"byte_end":627300,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628447,"byte_end":628451,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":17739},{"krate":0,"index":17740}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628284,"byte_end":628350,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628368,"byte_end":628435,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9016},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629221,"byte_end":629225,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":9017}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629121,"byte_end":629160,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629161,"byte_end":629209,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":9018},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629833,"byte_end":629837,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629246,"byte_end":629323,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629324,"byte_end":629327,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629328,"byte_end":629423,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629424,"byte_end":629481,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629482,"byte_end":629485,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629486,"byte_end":629500,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629501,"byte_end":629504,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629505,"byte_end":629516,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629517,"byte_end":629558,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629559,"byte_end":629602,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629603,"byte_end":629606,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629607,"byte_end":629644,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629645,"byte_end":629677,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629678,"byte_end":629727,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629728,"byte_end":629757,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629758,"byte_end":629817,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629818,"byte_end":629825,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":17745},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631024,"byte_end":631032,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":17747}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":630927,"byte_end":630995,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":17751},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631161,"byte_end":631170,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":17753}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631064,"byte_end":631132,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9079},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631903,"byte_end":631910,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631657,"byte_end":631734,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631739,"byte_end":631810,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631815,"byte_end":631891,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":9083},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632412,"byte_end":632419,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632166,"byte_end":632243,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632248,"byte_end":632319,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632324,"byte_end":632400,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":9100},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634007,"byte_end":634019,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":633851,"byte_end":633926,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":633927,"byte_end":633995,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9103},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634023,"byte_end":634038,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":9100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9104},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634040,"byte_end":634056,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":9100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17757},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":634899,"byte_end":634903,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":17759},{"krate":0,"index":17760}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9157},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635848,"byte_end":635853,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635095,"byte_end":635148,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635153,"byte_end":635199,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635204,"byte_end":635207,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635212,"byte_end":635222,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635227,"byte_end":635230,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635235,"byte_end":635312,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635317,"byte_end":635386,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635391,"byte_end":635394,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635399,"byte_end":635413,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635418,"byte_end":635421,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635426,"byte_end":635433,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635438,"byte_end":635479,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635484,"byte_end":635528,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635533,"byte_end":635536,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635541,"byte_end":635588,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635593,"byte_end":635621,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635626,"byte_end":635629,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635634,"byte_end":635668,"line_start":41,"line_end":41,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635673,"byte_end":635715,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635720,"byte_end":635723,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635728,"byte_end":635760,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635765,"byte_end":635824,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635829,"byte_end":635836,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9158},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636764,"byte_end":636773,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635900,"byte_end":635971,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":635976,"byte_end":636050,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636055,"byte_end":636130,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636135,"byte_end":636159,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636164,"byte_end":636167,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636172,"byte_end":636186,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636191,"byte_end":636194,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636199,"byte_end":636206,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636211,"byte_end":636252,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636257,"byte_end":636301,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636306,"byte_end":636309,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636314,"byte_end":636361,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636366,"byte_end":636394,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636399,"byte_end":636402,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636407,"byte_end":636441,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636446,"byte_end":636488,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636493,"byte_end":636496,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636501,"byte_end":636522,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636527,"byte_end":636559,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636564,"byte_end":636567,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636572,"byte_end":636595,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636600,"byte_end":636642,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636647,"byte_end":636668,"line_start":73,"line_end":73,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636673,"byte_end":636676,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636681,"byte_end":636740,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636745,"byte_end":636752,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":17801},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639197,"byte_end":639203,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":17803},{"krate":0,"index":17804}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638242,"byte_end":638289,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638290,"byte_end":638293,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638294,"byte_end":638370,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638371,"byte_end":638449,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638450,"byte_end":638526,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638527,"byte_end":638602,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638603,"byte_end":638676,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638677,"byte_end":638708,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638709,"byte_end":638712,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638713,"byte_end":638784,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638785,"byte_end":638864,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638865,"byte_end":638892,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638893,"byte_end":638896,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638897,"byte_end":638971,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":638972,"byte_end":639046,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639047,"byte_end":639126,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639127,"byte_end":639168,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":9182},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639512,"byte_end":639515,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639288,"byte_end":639359,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639364,"byte_end":639374,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639379,"byte_end":639382,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639387,"byte_end":639461,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639466,"byte_end":639500,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":9183},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639694,"byte_end":639701,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639597,"byte_end":639664,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639669,"byte_end":639682,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9184},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639846,"byte_end":639853,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639748,"byte_end":639816,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639821,"byte_end":639834,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9185},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639984,"byte_end":639994,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639912,"byte_end":639972,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":9186},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640135,"byte_end":640140,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640038,"byte_end":640110,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640115,"byte_end":640123,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":9187},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640287,"byte_end":640290,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640195,"byte_end":640262,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640267,"byte_end":640275,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":9188},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640736,"byte_end":640739,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640343,"byte_end":640403,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640408,"byte_end":640411,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640416,"byte_end":640428,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640433,"byte_end":640436,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640441,"byte_end":640514,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640519,"byte_end":640596,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640601,"byte_end":640604,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640609,"byte_end":640666,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":640671,"byte_end":640724,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":17808},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":641926,"byte_end":641931,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":17811},{"krate":0,"index":17812}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":641764,"byte_end":641829,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":641847,"byte_end":641914,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17817},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":642822,"byte_end":642835,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":17820},{"krate":0,"index":17821}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":642642,"byte_end":642725,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":642743,"byte_end":642810,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":17826},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":643794,"byte_end":643802,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":17829},{"krate":0,"index":17830}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":643624,"byte_end":643697,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":643715,"byte_end":643782,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":9308},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539424,"byte_end":539436,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":9309},{"krate":0,"index":9311},{"krate":0,"index":9313},{"krate":0,"index":9315},{"krate":0,"index":9317},{"krate":0,"index":9319},{"krate":0,"index":9321},{"krate":0,"index":9322}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539342,"byte_end":539413,"line_start":144,"line_end":144,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9309},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540289,"byte_end":540294,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539454,"byte_end":539519,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539524,"byte_end":539527,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539532,"byte_end":539612,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539617,"byte_end":539689,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539694,"byte_end":539715,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539720,"byte_end":539723,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539728,"byte_end":539742,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539747,"byte_end":539750,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539755,"byte_end":539762,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539767,"byte_end":539808,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539813,"byte_end":539857,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539862,"byte_end":539865,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539870,"byte_end":539914,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539919,"byte_end":539963,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539968,"byte_end":539971,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539976,"byte_end":540020,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540025,"byte_end":540057,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540062,"byte_end":540065,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540070,"byte_end":540103,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540108,"byte_end":540151,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540156,"byte_end":540205,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540210,"byte_end":540269,"line_start":167,"line_end":167,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540274,"byte_end":540281,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9311},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541347,"byte_end":541351,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540445,"byte_end":540519,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540524,"byte_end":540560,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540565,"byte_end":540568,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540573,"byte_end":540651,"line_start":180,"line_end":180,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540656,"byte_end":540683,"line_start":181,"line_end":181,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540688,"byte_end":540691,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540696,"byte_end":540710,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540715,"byte_end":540718,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540723,"byte_end":540730,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540735,"byte_end":540776,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540781,"byte_end":540825,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540830,"byte_end":540833,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540838,"byte_end":540885,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540890,"byte_end":540920,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540925,"byte_end":540928,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540933,"byte_end":540985,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540990,"byte_end":540993,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":540998,"byte_end":541069,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541074,"byte_end":541138,"line_start":195,"line_end":195,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541143,"byte_end":541188,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541193,"byte_end":541218,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541223,"byte_end":541263,"line_start":198,"line_end":198,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541268,"byte_end":541327,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541332,"byte_end":541339,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9313},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541757,"byte_end":541770,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541519,"byte_end":541603,"line_start":208,"line_end":208,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541608,"byte_end":541626,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541631,"byte_end":541634,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541639,"byte_end":541717,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541722,"byte_end":541749,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9315},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543181,"byte_end":543191,"line_start":257,"line_end":257,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":541968,"byte_end":542040,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542045,"byte_end":542103,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542108,"byte_end":542111,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542116,"byte_end":542190,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542195,"byte_end":542198,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542203,"byte_end":542280,"line_start":225,"line_end":225,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542285,"byte_end":542307,"line_start":226,"line_end":226,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542312,"byte_end":542315,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542320,"byte_end":542334,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542339,"byte_end":542342,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542347,"byte_end":542354,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542359,"byte_end":542400,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542405,"byte_end":542449,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542454,"byte_end":542457,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542462,"byte_end":542509,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542514,"byte_end":542544,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542549,"byte_end":542552,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542557,"byte_end":542599,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542604,"byte_end":542607,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542612,"byte_end":542649,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542654,"byte_end":542713,"line_start":240,"line_end":240,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542718,"byte_end":542725,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542730,"byte_end":542733,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542738,"byte_end":542778,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542783,"byte_end":542786,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542791,"byte_end":542798,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542803,"byte_end":542844,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542849,"byte_end":542899,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542904,"byte_end":542907,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542912,"byte_end":542959,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542964,"byte_end":542994,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":542999,"byte_end":543002,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543007,"byte_end":543061,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543066,"byte_end":543069,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543074,"byte_end":543147,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543152,"byte_end":543161,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543166,"byte_end":543173,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9317},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543996,"byte_end":544007,"line_start":283,"line_end":283,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543366,"byte_end":543439,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543444,"byte_end":543447,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543452,"byte_end":543510,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543515,"byte_end":543518,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543523,"byte_end":543537,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543542,"byte_end":543545,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543550,"byte_end":543557,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543562,"byte_end":543603,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543608,"byte_end":543652,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543657,"byte_end":543660,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543665,"byte_end":543712,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543717,"byte_end":543760,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543765,"byte_end":543768,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543773,"byte_end":543828,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543833,"byte_end":543836,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543841,"byte_end":543866,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543871,"byte_end":543912,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543917,"byte_end":543976,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":543981,"byte_end":543988,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9319},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544828,"byte_end":544842,"line_start":309,"line_end":309,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544188,"byte_end":544261,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544266,"byte_end":544269,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544274,"byte_end":544332,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544337,"byte_end":544340,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544345,"byte_end":544359,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544364,"byte_end":544367,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544372,"byte_end":544379,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544384,"byte_end":544425,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544430,"byte_end":544474,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544479,"byte_end":544482,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544487,"byte_end":544534,"line_start":300,"line_end":300,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544539,"byte_end":544585,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544590,"byte_end":544593,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544598,"byte_end":544656,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544661,"byte_end":544664,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544669,"byte_end":544694,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544699,"byte_end":544744,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544749,"byte_end":544808,"line_start":307,"line_end":307,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":544813,"byte_end":544820,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9321},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546185,"byte_end":546190,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545028,"byte_end":545099,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545104,"byte_end":545107,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545112,"byte_end":545182,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545187,"byte_end":545212,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545217,"byte_end":545220,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545225,"byte_end":545239,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545244,"byte_end":545247,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545252,"byte_end":545259,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545264,"byte_end":545305,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545310,"byte_end":545360,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545365,"byte_end":545368,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545373,"byte_end":545443,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545448,"byte_end":545518,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545523,"byte_end":545574,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545579,"byte_end":545582,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545587,"byte_end":545630,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545635,"byte_end":545698,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545703,"byte_end":545750,"line_start":333,"line_end":333,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545755,"byte_end":545758,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545763,"byte_end":545768,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545773,"byte_end":545844,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545849,"byte_end":545901,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545906,"byte_end":545958,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545963,"byte_end":545968,"line_start":339,"line_end":339,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545973,"byte_end":545976,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":545981,"byte_end":546043,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546048,"byte_end":546101,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546106,"byte_end":546165,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546170,"byte_end":546177,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9322},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546971,"byte_end":546975,"line_start":372,"line_end":372,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":9308},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546378,"byte_end":546448,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546453,"byte_end":546484,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546489,"byte_end":546492,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546497,"byte_end":546511,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546516,"byte_end":546519,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546524,"byte_end":546531,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546536,"byte_end":546577,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546582,"byte_end":546626,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546631,"byte_end":546634,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546639,"byte_end":546686,"line_start":362,"line_end":362,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546691,"byte_end":546719,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546724,"byte_end":546727,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546732,"byte_end":546766,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546771,"byte_end":546813,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546818,"byte_end":546821,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546826,"byte_end":546847,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546852,"byte_end":546887,"line_start":369,"line_end":369,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546892,"byte_end":546951,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":546956,"byte_end":546963,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":9325},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547784,"byte_end":547797,"line_start":398,"line_end":398,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":9326},{"krate":0,"index":9327},{"krate":0,"index":9328},{"krate":0,"index":9330},{"krate":0,"index":9332},{"krate":0,"index":9334}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547701,"byte_end":547773,"line_start":397,"line_end":397,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":9326},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548538,"byte_end":548543,"line_start":421,"line_end":421,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":9325},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547816,"byte_end":547881,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547886,"byte_end":547889,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547894,"byte_end":547908,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547913,"byte_end":547916,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547921,"byte_end":547928,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547933,"byte_end":547974,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547979,"byte_end":548028,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548033,"byte_end":548070,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548075,"byte_end":548078,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548083,"byte_end":548117,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548122,"byte_end":548125,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548130,"byte_end":548135,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548140,"byte_end":548186,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548191,"byte_end":548258,"line_start":412,"line_end":412,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548263,"byte_end":548306,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548311,"byte_end":548354,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548359,"byte_end":548391,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548396,"byte_end":548401,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548406,"byte_end":548409,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548414,"byte_end":548454,"line_start":418,"line_end":418,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548459,"byte_end":548518,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548523,"byte_end":548530,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9327},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548752,"byte_end":548757,"line_start":429,"line_end":429,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":9325},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548679,"byte_end":548744,"line_start":428,"line_end":428,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":9328},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549099,"byte_end":549104,"line_start":440,"line_end":440,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":9325},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548893,"byte_end":548964,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548969,"byte_end":548972,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":548977,"byte_end":549059,"line_start":438,"line_end":438,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549064,"byte_end":549091,"line_start":439,"line_end":439,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9330},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549514,"byte_end":549528,"line_start":452,"line_end":452,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":9325},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549270,"byte_end":549356,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549361,"byte_end":549379,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549384,"byte_end":549387,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549392,"byte_end":549474,"line_start":450,"line_end":450,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549479,"byte_end":549506,"line_start":451,"line_end":451,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9332},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550374,"byte_end":550383,"line_start":479,"line_end":479,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":9325},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549721,"byte_end":549753,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549758,"byte_end":549761,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549766,"byte_end":549847,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549852,"byte_end":549874,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549879,"byte_end":549882,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549887,"byte_end":549965,"line_start":464,"line_end":464,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549970,"byte_end":549973,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549978,"byte_end":549992,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":549997,"byte_end":550000,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550005,"byte_end":550012,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550017,"byte_end":550058,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550063,"byte_end":550108,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550113,"byte_end":550116,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550121,"byte_end":550168,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550173,"byte_end":550176,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550181,"byte_end":550224,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550229,"byte_end":550232,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550237,"byte_end":550290,"line_start":476,"line_end":476,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550295,"byte_end":550354,"line_start":477,"line_end":477,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":550359,"byte_end":550366,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9334},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553927,"byte_end":553936,"line_start":581,"line_end":581,"column_start":8,"column_end":17},"name":"into_sink","qualname":"::io::AsyncWriteExt::into_sink","value":"pub fn into_sink<Item: AsRef<[u8]>>(Self) -> IntoSink<Self, Item> where\nSelf: Sized","parent":{"krate":0,"index":9325},"children":[],"decl_id":null,"docs":" Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","sig":null,"attributes":[{"value":"/ Allow using an [`AsyncWrite`] as a [`Sink`](futures_sink::Sink)`<Item: AsRef<[u8]>>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":552968,"byte_end":553057,"line_start":553,"line_end":553,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553062,"byte_end":553065,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a sink that will write each value passed to it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553070,"byte_end":553142,"line_start":555,"line_end":555,"column_start":5,"column_end":77}},{"value":"/ into the underlying writer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553147,"byte_end":553178,"line_start":556,"line_end":556,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553183,"byte_end":553186,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given writer, returning a wrapped","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553191,"byte_end":553265,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ version.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553270,"byte_end":553282,"line_start":559,"line_end":559,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553287,"byte_end":553290,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553295,"byte_end":553309,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553314,"byte_end":553317,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553322,"byte_end":553329,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553334,"byte_end":553375,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ use futures::io::AsyncWriteExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553380,"byte_end":553415,"line_start":565,"line_end":565,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553420,"byte_end":553463,"line_start":566,"line_end":566,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553468,"byte_end":553471,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok([1, 2, 3]), Ok([4, 5, 6])]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553476,"byte_end":553542,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553547,"byte_end":553550,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let mut writer = vec![];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553555,"byte_end":553583,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553588,"byte_end":553591,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ stream.forward((&mut writer).into_sink()).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553596,"byte_end":553649,"line_start":572,"line_end":572,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553654,"byte_end":553657,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer, vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553662,"byte_end":553709,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553714,"byte_end":553760,"line_start":575,"line_end":575,"column_start":5,"column_end":51}},{"value":"/ # })?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553765,"byte_end":553775,"line_start":576,"line_end":576,"column_start":5,"column_end":15}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553780,"byte_end":553826,"line_start":577,"line_end":577,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553831,"byte_end":553838,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":553843,"byte_end":553867,"line_start":579,"line_end":579,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":9338},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554239,"byte_end":554251,"line_start":592,"line_end":592,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":9339},{"krate":0,"index":9340}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554157,"byte_end":554228,"line_start":591,"line_end":591,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":9339},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554521,"byte_end":554525,"line_start":598,"line_end":598,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554269,"byte_end":554338,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554343,"byte_end":554396,"line_start":594,"line_end":594,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554401,"byte_end":554404,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554409,"byte_end":554486,"line_start":596,"line_end":596,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554491,"byte_end":554513,"line_start":597,"line_end":597,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":9340},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554863,"byte_end":554878,"line_start":609,"line_end":609,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554680,"byte_end":554753,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554758,"byte_end":554782,"line_start":606,"line_end":606,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554787,"byte_end":554790,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554795,"byte_end":554855,"line_start":608,"line_end":608,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":9343},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555130,"byte_end":555145,"line_start":620,"line_end":620,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":9344},{"krate":0,"index":9345},{"krate":0,"index":9346},{"krate":0,"index":9348},{"krate":0,"index":9350}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555045,"byte_end":555119,"line_start":619,"line_end":619,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":9344},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556099,"byte_end":556107,"line_start":644,"line_end":644,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":9343},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555166,"byte_end":555255,"line_start":621,"line_end":621,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555260,"byte_end":555292,"line_start":622,"line_end":622,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555297,"byte_end":555300,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555305,"byte_end":555398,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555403,"byte_end":555406,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555411,"byte_end":555422,"line_start":626,"line_end":626,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555427,"byte_end":555468,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555473,"byte_end":555552,"line_start":628,"line_end":628,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555557,"byte_end":555560,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555565,"byte_end":555653,"line_start":630,"line_end":630,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555658,"byte_end":555661,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555666,"byte_end":555722,"line_start":632,"line_end":632,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555727,"byte_end":555755,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555760,"byte_end":555763,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555768,"byte_end":555818,"line_start":635,"line_end":635,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555823,"byte_end":555851,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555856,"byte_end":555859,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555864,"byte_end":555920,"line_start":638,"line_end":638,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555925,"byte_end":555953,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555958,"byte_end":555961,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555966,"byte_end":556015,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556020,"byte_end":556079,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556084,"byte_end":556091,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9345},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556908,"byte_end":556921,"line_start":668,"line_end":668,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":9343},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556250,"byte_end":556328,"line_start":651,"line_end":651,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556333,"byte_end":556336,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556341,"byte_end":556352,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556357,"byte_end":556398,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556403,"byte_end":556482,"line_start":655,"line_end":655,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556487,"byte_end":556490,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556495,"byte_end":556564,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556569,"byte_end":556572,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556577,"byte_end":556633,"line_start":659,"line_end":659,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556638,"byte_end":556666,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556671,"byte_end":556674,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556679,"byte_end":556729,"line_start":662,"line_end":662,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556734,"byte_end":556762,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556767,"byte_end":556770,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556775,"byte_end":556824,"line_start":665,"line_end":665,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556829,"byte_end":556888,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":556893,"byte_end":556900,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9346},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558612,"byte_end":558622,"line_start":716,"line_end":716,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":9343},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557029,"byte_end":557104,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557109,"byte_end":557176,"line_start":676,"line_end":676,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557181,"byte_end":557278,"line_start":677,"line_end":677,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557283,"byte_end":557286,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557291,"byte_end":557361,"line_start":679,"line_end":679,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557366,"byte_end":557440,"line_start":680,"line_end":680,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557445,"byte_end":557500,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557505,"byte_end":557508,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557513,"byte_end":557591,"line_start":683,"line_end":683,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557596,"byte_end":557623,"line_start":684,"line_end":684,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557628,"byte_end":557631,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557636,"byte_end":557713,"line_start":686,"line_end":686,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557718,"byte_end":557740,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557745,"byte_end":557748,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557753,"byte_end":557767,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557772,"byte_end":557775,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557780,"byte_end":557787,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557792,"byte_end":557833,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557838,"byte_end":557885,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557890,"byte_end":557893,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557898,"byte_end":557947,"line_start":695,"line_end":695,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557952,"byte_end":557977,"line_start":696,"line_end":696,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557982,"byte_end":557985,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":557990,"byte_end":558013,"line_start":698,"line_end":698,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558018,"byte_end":558079,"line_start":699,"line_end":699,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558084,"byte_end":558113,"line_start":700,"line_end":700,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558118,"byte_end":558149,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558154,"byte_end":558170,"line_start":702,"line_end":702,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558175,"byte_end":558178,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558183,"byte_end":558206,"line_start":704,"line_end":704,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558211,"byte_end":558272,"line_start":705,"line_end":705,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558277,"byte_end":558306,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558311,"byte_end":558341,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558346,"byte_end":558362,"line_start":708,"line_end":708,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558367,"byte_end":558370,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558375,"byte_end":558398,"line_start":710,"line_end":710,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558403,"byte_end":558464,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558469,"byte_end":558498,"line_start":712,"line_end":712,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558503,"byte_end":558528,"line_start":713,"line_end":713,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558533,"byte_end":558592,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558597,"byte_end":558604,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9348},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560801,"byte_end":560810,"line_start":774,"line_end":774,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":9343},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558819,"byte_end":558894,"line_start":723,"line_end":723,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558899,"byte_end":558970,"line_start":724,"line_end":724,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":558975,"byte_end":559070,"line_start":725,"line_end":725,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559075,"byte_end":559078,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559083,"byte_end":559153,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559158,"byte_end":559233,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559238,"byte_end":559308,"line_start":729,"line_end":729,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559313,"byte_end":559323,"line_start":730,"line_end":730,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559328,"byte_end":559331,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559336,"byte_end":559414,"line_start":732,"line_end":732,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559419,"byte_end":559446,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559451,"byte_end":559454,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559459,"byte_end":559536,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559541,"byte_end":559563,"line_start":736,"line_end":736,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559568,"byte_end":559571,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559576,"byte_end":559588,"line_start":738,"line_end":738,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559593,"byte_end":559596,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559601,"byte_end":559674,"line_start":740,"line_end":740,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559679,"byte_end":559752,"line_start":741,"line_end":741,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559757,"byte_end":559831,"line_start":742,"line_end":742,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559836,"byte_end":559892,"line_start":743,"line_end":743,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559897,"byte_end":559900,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559905,"byte_end":559952,"line_start":745,"line_end":745,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559957,"byte_end":559960,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559965,"byte_end":559979,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559984,"byte_end":559987,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":559992,"byte_end":559999,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560004,"byte_end":560045,"line_start":750,"line_end":750,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560050,"byte_end":560097,"line_start":751,"line_end":751,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560102,"byte_end":560105,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560110,"byte_end":560156,"line_start":753,"line_end":753,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560161,"byte_end":560193,"line_start":754,"line_end":754,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560198,"byte_end":560201,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560206,"byte_end":560229,"line_start":756,"line_end":756,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560234,"byte_end":560288,"line_start":757,"line_end":757,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560293,"byte_end":560322,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560327,"byte_end":560356,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560361,"byte_end":560377,"line_start":760,"line_end":760,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560382,"byte_end":560385,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560390,"byte_end":560413,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560418,"byte_end":560472,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560477,"byte_end":560506,"line_start":764,"line_end":764,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560511,"byte_end":560538,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560543,"byte_end":560559,"line_start":766,"line_end":766,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560564,"byte_end":560567,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560572,"byte_end":560595,"line_start":768,"line_end":768,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560600,"byte_end":560654,"line_start":769,"line_end":769,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560659,"byte_end":560688,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560693,"byte_end":560717,"line_start":771,"line_end":771,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560722,"byte_end":560781,"line_start":772,"line_end":772,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560786,"byte_end":560793,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9350},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562334,"byte_end":562339,"line_start":813,"line_end":813,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":9343},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":560988,"byte_end":561039,"line_start":781,"line_end":781,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561044,"byte_end":561131,"line_start":782,"line_end":782,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561136,"byte_end":561139,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561144,"byte_end":561210,"line_start":784,"line_end":784,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561215,"byte_end":561297,"line_start":785,"line_end":785,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561302,"byte_end":561362,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561367,"byte_end":561370,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561375,"byte_end":561410,"line_start":788,"line_end":788,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561415,"byte_end":561437,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561442,"byte_end":561445,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561450,"byte_end":561462,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561467,"byte_end":561470,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561475,"byte_end":561566,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561571,"byte_end":561574,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561579,"byte_end":561641,"line_start":795,"line_end":795,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561646,"byte_end":561649,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561654,"byte_end":561668,"line_start":797,"line_end":797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561673,"byte_end":561676,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561681,"byte_end":561688,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561693,"byte_end":561734,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561739,"byte_end":561786,"line_start":801,"line_end":801,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561791,"byte_end":561826,"line_start":802,"line_end":802,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561831,"byte_end":561834,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561839,"byte_end":561894,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561899,"byte_end":561902,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561907,"byte_end":561969,"line_start":806,"line_end":806,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":561974,"byte_end":562045,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562050,"byte_end":562121,"line_start":808,"line_end":808,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562126,"byte_end":562197,"line_start":809,"line_end":809,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562202,"byte_end":562250,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562255,"byte_end":562314,"line_start":811,"line_end":811,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562319,"byte_end":562326,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":9382},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":9383},{"krate":0,"index":9565},{"krate":0,"index":9566},{"krate":0,"index":9569},{"krate":0,"index":9572},{"krate":0,"index":9575},{"krate":0,"index":9578},{"krate":0,"index":9660}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":644718,"byte_end":644765,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":644766,"byte_end":644769,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":644770,"byte_end":644845,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mod.rs","byte_start":644846,"byte_end":644903,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":9437},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646326,"byte_end":646331,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":9439},{"krate":0,"index":9440},{"krate":0,"index":9441}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":645999,"byte_end":646025,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646026,"byte_end":646029,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646030,"byte_end":646044,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646045,"byte_end":646048,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646049,"byte_end":646128,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646129,"byte_end":646211,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646212,"byte_end":646296,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646297,"byte_end":646314,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":9464},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647557,"byte_end":647560,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647507,"byte_end":647545,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":9465},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647987,"byte_end":647997,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647741,"byte_end":647796,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647801,"byte_end":647804,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647809,"byte_end":647823,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647828,"byte_end":647831,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647836,"byte_end":647843,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647848,"byte_end":647877,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647882,"byte_end":647885,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647890,"byte_end":647920,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647925,"byte_end":647963,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647968,"byte_end":647975,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9468},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648211,"byte_end":648219,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648083,"byte_end":648127,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648132,"byte_end":648135,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648140,"byte_end":648199,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":9469},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648640,"byte_end":648644,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648475,"byte_end":648511,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648516,"byte_end":648519,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648524,"byte_end":648597,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648602,"byte_end":648628,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":9470},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649272,"byte_end":649279,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648762,"byte_end":648817,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648822,"byte_end":648825,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648830,"byte_end":648905,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648910,"byte_end":648984,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648989,"byte_end":648992,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648997,"byte_end":649011,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649016,"byte_end":649019,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649024,"byte_end":649031,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649036,"byte_end":649077,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649082,"byte_end":649111,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649116,"byte_end":649119,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649124,"byte_end":649158,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649163,"byte_end":649189,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649194,"byte_end":649234,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649239,"byte_end":649248,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":649253,"byte_end":649260,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9474},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":651001,"byte_end":651016,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":9477},{"krate":0,"index":9478}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":650908,"byte_end":650989,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":9493},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653551,"byte_end":653561,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":9496}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653387,"byte_end":653451,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653452,"byte_end":653525,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653526,"byte_end":653539,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9500},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654130,"byte_end":654133,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653651,"byte_end":653711,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653716,"byte_end":653719,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653724,"byte_end":653737,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653742,"byte_end":653745,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653750,"byte_end":653757,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653762,"byte_end":653803,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653808,"byte_end":653851,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653856,"byte_end":653859,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653864,"byte_end":653917,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653922,"byte_end":653927,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653932,"byte_end":654021,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654026,"byte_end":654068,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654073,"byte_end":654078,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654083,"byte_end":654092,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654097,"byte_end":654104,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654109,"byte_end":654118,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9516},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655425,"byte_end":655441,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":9520},{"krate":0,"index":9521},{"krate":0,"index":9522}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655241,"byte_end":655329,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655330,"byte_end":655413,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":9527},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656207,"byte_end":656210,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655618,"byte_end":655678,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655683,"byte_end":655686,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655691,"byte_end":655704,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655709,"byte_end":655712,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655717,"byte_end":655724,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655729,"byte_end":655770,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655775,"byte_end":655836,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655841,"byte_end":655844,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655849,"byte_end":655902,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655907,"byte_end":655912,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655917,"byte_end":656006,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656011,"byte_end":656101,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656106,"byte_end":656145,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656150,"byte_end":656155,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656160,"byte_end":656169,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656174,"byte_end":656181,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656186,"byte_end":656195,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17856},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669264,"byte_end":669273,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":17858},{"krate":0,"index":17859}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13577155,"byte_end":13577164,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9701},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670683,"byte_end":670686,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669379,"byte_end":669461,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669466,"byte_end":669534,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669539,"byte_end":669542,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669547,"byte_end":669619,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669624,"byte_end":669707,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669712,"byte_end":669737,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669742,"byte_end":669745,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669750,"byte_end":669765,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669770,"byte_end":669773,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669778,"byte_end":669801,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669806,"byte_end":669809,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669814,"byte_end":669821,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669826,"byte_end":669867,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669872,"byte_end":669931,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669936,"byte_end":669939,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669944,"byte_end":670013,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670018,"byte_end":670083,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670088,"byte_end":670113,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670118,"byte_end":670161,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670166,"byte_end":670175,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670180,"byte_end":670187,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670192,"byte_end":670195,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670200,"byte_end":670223,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670228,"byte_end":670231,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670236,"byte_end":670243,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670248,"byte_end":670289,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670294,"byte_end":670346,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670351,"byte_end":670396,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670401,"byte_end":670404,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670409,"byte_end":670478,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670483,"byte_end":670568,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670573,"byte_end":670598,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670603,"byte_end":670645,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670650,"byte_end":670659,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670664,"byte_end":670671,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9702},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671191,"byte_end":671201,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670781,"byte_end":670845,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670850,"byte_end":670918,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670923,"byte_end":670973,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":670978,"byte_end":671032,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671037,"byte_end":671129,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671134,"byte_end":671179,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":17899},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671469,"byte_end":671486,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":17900}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671279,"byte_end":671329,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671330,"byte_end":671406,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671407,"byte_end":671440,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":17903},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671592,"byte_end":671603,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":17904}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671520,"byte_end":671556,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":9704},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671874,"byte_end":671882,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671660,"byte_end":671734,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671739,"byte_end":671779,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671784,"byte_end":671787,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671792,"byte_end":671862,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":17914},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672404,"byte_end":672411,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672295,"byte_end":672347,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9724},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674545,"byte_end":674550,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674178,"byte_end":674246,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674251,"byte_end":674254,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674259,"byte_end":674326,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674331,"byte_end":674399,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674404,"byte_end":674478,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674483,"byte_end":674533,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":9736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":674733,"byte_end":674740,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":9738},{"krate":0,"index":9739}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9738},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":674755,"byte_end":674761,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":9736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9739},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":674770,"byte_end":674779,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":9736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9746},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":674972,"byte_end":674978,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":9748}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9748},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":675003,"byte_end":675011,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":9746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9763},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676317,"byte_end":676321,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17945},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676677,"byte_end":676684,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17966},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677418,"byte_end":677431,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17982},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677773,"byte_end":677782,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17997},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":678737,"byte_end":678744,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18012},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679455,"byte_end":679463,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18027},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":680183,"byte_end":680194,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18039},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":681079,"byte_end":681091,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":18051},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":682239,"byte_end":682253,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9927},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":683018,"byte_end":683024,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39583,"byte_end":39590,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39720,"byte_end":39727,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39952,"byte_end":39959,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":40733,"byte_end":40740,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":40965,"byte_end":40972,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":41825,"byte_end":41832,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":43986,"byte_end":43990,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44097,"byte_end":44101,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45830,"byte_end":45834,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45947,"byte_end":45951,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":46929,"byte_end":46932,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":47101,"byte_end":47104,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":47366,"byte_end":47369,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":48575,"byte_end":48586,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":48729,"byte_end":48740,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49967,"byte_end":49977,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50178,"byte_end":50184,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50227,"byte_end":50233,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50491,"byte_end":50496,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50650,"byte_end":50660,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50892,"byte_end":50897,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50994,"byte_end":50999,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51243,"byte_end":51249,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51673,"byte_end":51679,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53745,"byte_end":53750,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55446,"byte_end":55452,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55604,"byte_end":55610,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":57199,"byte_end":57204,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":58911,"byte_end":58917,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59076,"byte_end":59082,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59510,"byte_end":59518,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59877,"byte_end":59887,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22734,"byte_end":22735,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":82313,"byte_end":82323,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":82474,"byte_end":82484,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":82607,"byte_end":82617,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83326,"byte_end":83336,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83466,"byte_end":83476,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83719,"byte_end":83729,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":84682,"byte_end":84692,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":84935,"byte_end":84945,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":85982,"byte_end":85992,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88269,"byte_end":88282,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88412,"byte_end":88425,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88668,"byte_end":88681,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64859,"byte_end":64862,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":89990,"byte_end":89994,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90590,"byte_end":90594,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90738,"byte_end":90742,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91345,"byte_end":91352,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91913,"byte_end":91920,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":92065,"byte_end":92072,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":92098,"byte_end":92105,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92859,"byte_end":92868,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93471,"byte_end":93480,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94578,"byte_end":94587,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94788,"byte_end":94797,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96117,"byte_end":96129,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96355,"byte_end":96367,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":97480,"byte_end":97492,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":97696,"byte_end":97708,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99358,"byte_end":99370,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99468,"byte_end":99480,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99794,"byte_end":99806,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99993,"byte_end":100005,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100443,"byte_end":100449,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":101143,"byte_end":101149,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":101291,"byte_end":101297,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":102025,"byte_end":102038,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":102604,"byte_end":102617,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":103637,"byte_end":103650,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105822,"byte_end":105827,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106006,"byte_end":106011,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106043,"byte_end":106048,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106145,"byte_end":106150,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114137,"byte_end":114144,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":116905,"byte_end":116912,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":117900,"byte_end":117907,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118403,"byte_end":118409,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120845,"byte_end":120851,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":121555,"byte_end":121561,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122124,"byte_end":122133,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":123140,"byte_end":123149,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":123332,"byte_end":123341,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":124011,"byte_end":124020,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132628,"byte_end":132638,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134468,"byte_end":134478,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":135626,"byte_end":135636,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136118,"byte_end":136127,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137966,"byte_end":137975,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139337,"byte_end":139345,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":140423,"byte_end":140431,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":141862,"byte_end":141870,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142849,"byte_end":142855,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143194,"byte_end":143200,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143585,"byte_end":143591,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143972,"byte_end":143978,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":144219,"byte_end":144225,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":144564,"byte_end":144570,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":144846,"byte_end":144852,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145387,"byte_end":145393,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145700,"byte_end":145706,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":147065,"byte_end":147071,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":147872,"byte_end":147878,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":149185,"byte_end":149191,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":149621,"byte_end":149627,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":208989,"byte_end":208994,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":209220,"byte_end":209225,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":209434,"byte_end":209439,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":211035,"byte_end":211042,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":211307,"byte_end":211314,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2144}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":211492,"byte_end":211499,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":212525,"byte_end":212530,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":212924,"byte_end":212929,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":213179,"byte_end":213184,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":214309,"byte_end":214315,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":214535,"byte_end":214541,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":215249,"byte_end":215255,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":215981,"byte_end":215986,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":216207,"byte_end":216212,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":216344,"byte_end":216349,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":216467,"byte_end":216472,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":217278,"byte_end":217283,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":217439,"byte_end":217444,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":218193,"byte_end":218198,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":218946,"byte_end":218955,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":12813},{"krate":0,"index":12814},{"krate":0,"index":12815},{"krate":0,"index":12816}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":219141,"byte_end":219150,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":219268,"byte_end":219277,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":219930,"byte_end":219939,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":12817},{"krate":0,"index":12818},{"krate":0,"index":12819},{"krate":0,"index":12820}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":220718,"byte_end":220724,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":221197,"byte_end":221203,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":12882},{"krate":0,"index":12883},{"krate":0,"index":12884},{"krate":0,"index":12885}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":221526,"byte_end":221532,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":221869,"byte_end":221875,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":223254,"byte_end":223260,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":12886},{"krate":0,"index":12887},{"krate":0,"index":12888},{"krate":0,"index":12889}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224047,"byte_end":224056,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224353,"byte_end":224362,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":12947},{"krate":0,"index":12948},{"krate":0,"index":12949},{"krate":0,"index":12950}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224629,"byte_end":224638,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224905,"byte_end":224914,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":226332,"byte_end":226341,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":12951},{"krate":0,"index":12952},{"krate":0,"index":12953},{"krate":0,"index":12954}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":227016,"byte_end":227023,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":13004},{"krate":0,"index":13005},{"krate":0,"index":13006},{"krate":0,"index":13007}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":227192,"byte_end":227199,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":227391,"byte_end":227398,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2565},{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":228220,"byte_end":228227,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":13008},{"krate":0,"index":13009},{"krate":0,"index":13010},{"krate":0,"index":13011}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":228912,"byte_end":228916,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":229272,"byte_end":229276,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":229537,"byte_end":229541,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":229776,"byte_end":229780,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":231369,"byte_end":231372,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":231702,"byte_end":231705,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":231958,"byte_end":231961,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":232190,"byte_end":232193,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":233945,"byte_end":233948,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":234278,"byte_end":234281,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":234533,"byte_end":234536,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":234765,"byte_end":234768,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":236604,"byte_end":236611,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":236811,"byte_end":236818,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":237020,"byte_end":237027,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":238832,"byte_end":238839,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":239132,"byte_end":239139,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":239370,"byte_end":239377,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":239616,"byte_end":239623,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":240724,"byte_end":240728,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":13486},{"krate":0,"index":13487},{"krate":0,"index":13488},{"krate":0,"index":13489}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":241225,"byte_end":241229,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":241327,"byte_end":241331,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":242017,"byte_end":242021,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":13490},{"krate":0,"index":13491},{"krate":0,"index":13492},{"krate":0,"index":13493}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242533,"byte_end":242545,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":245035,"byte_end":245047,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":245167,"byte_end":245179,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246064,"byte_end":246067,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246256,"byte_end":246259,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":13623},{"krate":0,"index":13624},{"krate":0,"index":13625},{"krate":0,"index":13626}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246428,"byte_end":246431,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246599,"byte_end":246602,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":247144,"byte_end":247147,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2992},{"krate":0,"index":13627},{"krate":0,"index":13628},{"krate":0,"index":13629},{"krate":0,"index":13630}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247714,"byte_end":247718,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247769,"byte_end":247773,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247924,"byte_end":247928,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":248067,"byte_end":248071,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248722,"byte_end":248736,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248887,"byte_end":248901,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":249045,"byte_end":249059,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250370,"byte_end":250378,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":13780},{"krate":0,"index":13781},{"krate":0,"index":13782},{"krate":0,"index":13783},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255875,"byte_end":255883,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":256025,"byte_end":256033,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":256818,"byte_end":256826,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":13784},{"krate":0,"index":13785},{"krate":0,"index":13786},{"krate":0,"index":13787}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":257192,"byte_end":257196,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":257441,"byte_end":257445,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":257556,"byte_end":257560,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3164},{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":258257,"byte_end":258264,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3168}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":258512,"byte_end":258519,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":258630,"byte_end":258637,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":259357,"byte_end":259363,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":259715,"byte_end":259721,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":259990,"byte_end":259996,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3191},{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":261257,"byte_end":261265,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":261585,"byte_end":261593,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":261777,"byte_end":261785,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":262156,"byte_end":262166,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":262831,"byte_end":262835,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3263},{"krate":0,"index":14008},{"krate":0,"index":14009},{"krate":0,"index":14010},{"krate":0,"index":14011}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":263026,"byte_end":263030,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":263148,"byte_end":263152,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":263963,"byte_end":263967,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":14012},{"krate":0,"index":14013},{"krate":0,"index":14014},{"krate":0,"index":14015}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":264749,"byte_end":264758,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":265210,"byte_end":265219,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":14081},{"krate":0,"index":14082},{"krate":0,"index":14083},{"krate":0,"index":14084}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":265545,"byte_end":265554,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":265802,"byte_end":265811,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":267425,"byte_end":267434,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":14085},{"krate":0,"index":14086},{"krate":0,"index":14087},{"krate":0,"index":14088}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":268111,"byte_end":268115,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":14129},{"krate":0,"index":14130},{"krate":0,"index":14131},{"krate":0,"index":14132}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":268288,"byte_end":268292,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":269264,"byte_end":269268,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3384}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":269516,"byte_end":269520,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":14133},{"krate":0,"index":14134},{"krate":0,"index":14135},{"krate":0,"index":14136}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":270291,"byte_end":270300,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":270748,"byte_end":270757,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":14202},{"krate":0,"index":14203},{"krate":0,"index":14204},{"krate":0,"index":14205}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":271076,"byte_end":271085,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":272604,"byte_end":272613,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":272969,"byte_end":272978,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":14206},{"krate":0,"index":14207},{"krate":0,"index":14208},{"krate":0,"index":14209}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":273997,"byte_end":274006,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274294,"byte_end":274303,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":14263},{"krate":0,"index":14264},{"krate":0,"index":14265},{"krate":0,"index":14266},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276420,"byte_end":276429,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":277461,"byte_end":277470,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":277707,"byte_end":277716,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":14267},{"krate":0,"index":14268},{"krate":0,"index":14269},{"krate":0,"index":14270}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":278412,"byte_end":278416,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":278667,"byte_end":278671,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3560},{"krate":0,"index":14328},{"krate":0,"index":14329},{"krate":0,"index":14330},{"krate":0,"index":14331}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":278917,"byte_end":278921,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":279147,"byte_end":279151,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":280330,"byte_end":280334,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":14332},{"krate":0,"index":14333},{"krate":0,"index":14334},{"krate":0,"index":14335}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281033,"byte_end":281036,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282622,"byte_end":282625,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3624}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282820,"byte_end":282823,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":285518,"byte_end":285524,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":14437},{"krate":0,"index":14438},{"krate":0,"index":14439},{"krate":0,"index":14440}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":286032,"byte_end":286038,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":287654,"byte_end":287660,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":287883,"byte_end":287889,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":14441},{"krate":0,"index":14442},{"krate":0,"index":14443},{"krate":0,"index":14444}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":288632,"byte_end":288643,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":14489},{"krate":0,"index":14490},{"krate":0,"index":14491},{"krate":0,"index":14492}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":288995,"byte_end":289006,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":291175,"byte_end":291186,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":291409,"byte_end":291420,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":14493},{"krate":0,"index":14494},{"krate":0,"index":14495},{"krate":0,"index":14496}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":292184,"byte_end":292188,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3783}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":292674,"byte_end":292678,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3790}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":292842,"byte_end":292846,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3797},{"krate":0,"index":14562},{"krate":0,"index":14563},{"krate":0,"index":14564},{"krate":0,"index":14565}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":293208,"byte_end":293212,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":294439,"byte_end":294443,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3813}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":294817,"byte_end":294821,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3820},{"krate":0,"index":14566},{"krate":0,"index":14567},{"krate":0,"index":14568},{"krate":0,"index":14569}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":295624,"byte_end":295639,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3866}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":295971,"byte_end":295986,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":14611},{"krate":0,"index":14612},{"krate":0,"index":14613},{"krate":0,"index":14614}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":296373,"byte_end":296388,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":297842,"byte_end":297857,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":298141,"byte_end":298156,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":14615},{"krate":0,"index":14616},{"krate":0,"index":14617},{"krate":0,"index":14618}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":298967,"byte_end":298975,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3926}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":299322,"byte_end":299330,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3929},{"krate":0,"index":14660},{"krate":0,"index":14661},{"krate":0,"index":14662},{"krate":0,"index":14663}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":299610,"byte_end":299618,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3934}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":301136,"byte_end":301144,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":14664},{"krate":0,"index":14665},{"krate":0,"index":14666},{"krate":0,"index":14667}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":301955,"byte_end":301972,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":302318,"byte_end":302335,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3988}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":302768,"byte_end":302785,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":303015,"byte_end":303032,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3998},{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305256,"byte_end":305267,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305290,"byte_end":305301,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305734,"byte_end":305745,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4038},{"krate":0,"index":4039}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306323,"byte_end":306332,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306380,"byte_end":306389,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4049}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306853,"byte_end":306862,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4054},{"krate":0,"index":4055}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":307584,"byte_end":307593,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309200,"byte_end":309212,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309388,"byte_end":309400,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4080}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309649,"byte_end":309661,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":310206,"byte_end":310217,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":14785},{"krate":0,"index":14786},{"krate":0,"index":14787},{"krate":0,"index":14788}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":310409,"byte_end":310420,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4137}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":311272,"byte_end":311283,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161899,"byte_end":161900,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":350400,"byte_end":350407,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4475}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":350700,"byte_end":350707,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4480},{"krate":0,"index":14846},{"krate":0,"index":14847},{"krate":0,"index":14848},{"krate":0,"index":14849}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":350988,"byte_end":350995,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":352138,"byte_end":352145,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":352491,"byte_end":352498,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":14850},{"krate":0,"index":14851},{"krate":0,"index":14852},{"krate":0,"index":14853}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353063,"byte_end":353073,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4531},{"krate":0,"index":15124},{"krate":0,"index":15125},{"krate":0,"index":15126},{"krate":0,"index":15127}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353266,"byte_end":353276,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353397,"byte_end":353407,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353831,"byte_end":353841,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4543},{"krate":0,"index":15128},{"krate":0,"index":15129},{"krate":0,"index":15130},{"krate":0,"index":15131}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":354506,"byte_end":354512,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":354804,"byte_end":354810,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4592},{"krate":0,"index":15345},{"krate":0,"index":15346},{"krate":0,"index":15347},{"krate":0,"index":15348}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":355088,"byte_end":355094,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":356371,"byte_end":356377,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":356720,"byte_end":356726,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4610},{"krate":0,"index":15349},{"krate":0,"index":15350},{"krate":0,"index":15351},{"krate":0,"index":15352}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357281,"byte_end":357288,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357342,"byte_end":357349,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4647}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357512,"byte_end":357519,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357661,"byte_end":357668,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4653},{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":358444,"byte_end":358454,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":358750,"byte_end":358760,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4697}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":359005,"byte_end":359015,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4702},{"krate":0,"index":4703}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":360414,"byte_end":360423,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4747}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":360819,"byte_end":360828,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4752},{"krate":0,"index":15479},{"krate":0,"index":15480},{"krate":0,"index":15481},{"krate":0,"index":15482}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":361071,"byte_end":361080,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4757}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":361337,"byte_end":361346,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":362735,"byte_end":362744,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4771},{"krate":0,"index":15483},{"krate":0,"index":15484},{"krate":0,"index":15485},{"krate":0,"index":15486}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":363487,"byte_end":363499,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4815}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":363799,"byte_end":363811,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4820},{"krate":0,"index":15544},{"krate":0,"index":15545},{"krate":0,"index":15546},{"krate":0,"index":15547}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":364008,"byte_end":364020,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":364298,"byte_end":364310,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":365810,"byte_end":365822,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4840},{"krate":0,"index":15548},{"krate":0,"index":15549},{"krate":0,"index":15550},{"krate":0,"index":15551}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":366494,"byte_end":366504,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4876},{"krate":0,"index":15592},{"krate":0,"index":15593},{"krate":0,"index":15594},{"krate":0,"index":15595}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":366769,"byte_end":366779,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4879}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":367025,"byte_end":367035,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4882},{"krate":0,"index":4883}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":367954,"byte_end":367964,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4887},{"krate":0,"index":15596},{"krate":0,"index":15597},{"krate":0,"index":15598},{"krate":0,"index":15599}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":368644,"byte_end":368654,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4928}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":368794,"byte_end":368804,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4932}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":368992,"byte_end":369002,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4936},{"krate":0,"index":4937}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":370000,"byte_end":370009,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4966}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":370228,"byte_end":370237,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":371621,"byte_end":371630,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5026},{"krate":0,"index":5027},{"krate":0,"index":15733},{"krate":0,"index":15734},{"krate":0,"index":15735},{"krate":0,"index":15736}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":372125,"byte_end":372134,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5032}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374082,"byte_end":374091,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5035}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374314,"byte_end":374323,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":15737},{"krate":0,"index":15738},{"krate":0,"index":15739},{"krate":0,"index":15740}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374750,"byte_end":374764,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5043}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374909,"byte_end":374923,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":375110,"byte_end":375124,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":375734,"byte_end":375741,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5096}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":376100,"byte_end":376107,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5102}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":376387,"byte_end":376394,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":376648,"byte_end":376655,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":380518,"byte_end":380527,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5157}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":380789,"byte_end":380798,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5163},{"krate":0,"index":5164}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":382544,"byte_end":382556,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5212}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":383012,"byte_end":383024,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5217},{"krate":0,"index":15953},{"krate":0,"index":15954},{"krate":0,"index":15955},{"krate":0,"index":15956}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":383364,"byte_end":383376,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":384875,"byte_end":384887,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5229}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":385254,"byte_end":385266,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5236},{"krate":0,"index":15957},{"krate":0,"index":15958},{"krate":0,"index":15959},{"krate":0,"index":15960}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":386115,"byte_end":386127,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":386579,"byte_end":386591,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5285},{"krate":0,"index":16026},{"krate":0,"index":16027},{"krate":0,"index":16028},{"krate":0,"index":16029}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":386929,"byte_end":386941,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5292}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":388548,"byte_end":388560,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5297}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":388947,"byte_end":388959,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5304},{"krate":0,"index":16030},{"krate":0,"index":16031},{"krate":0,"index":16032},{"krate":0,"index":16033}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":389848,"byte_end":389866,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5357},{"krate":0,"index":16078},{"krate":0,"index":16079},{"krate":0,"index":16080},{"krate":0,"index":16081}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":390205,"byte_end":390223,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5360},{"krate":0,"index":5361}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":391500,"byte_end":391518,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5366},{"krate":0,"index":16082},{"krate":0,"index":16083},{"krate":0,"index":16084},{"krate":0,"index":16085}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":392429,"byte_end":392440,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5419},{"krate":0,"index":16130},{"krate":0,"index":16131},{"krate":0,"index":16132},{"krate":0,"index":16133}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":392777,"byte_end":392788,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":394065,"byte_end":394076,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5428},{"krate":0,"index":16134},{"krate":0,"index":16135},{"krate":0,"index":16136},{"krate":0,"index":16137}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":394946,"byte_end":394966,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5476}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":395331,"byte_end":395351,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":395590,"byte_end":395610,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5486}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":396058,"byte_end":396078,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5491},{"krate":0,"index":5492}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":399179,"byte_end":399192,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":399408,"byte_end":399421,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5541}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":399633,"byte_end":399646,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":401267,"byte_end":401280,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5549}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":401887,"byte_end":401900,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5552},{"krate":0,"index":5553}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316683,"byte_end":316684,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":403936,"byte_end":403940,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404562,"byte_end":404566,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5722}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405757,"byte_end":405763,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405790,"byte_end":405796,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":406104,"byte_end":406110,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5762}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406707,"byte_end":406717,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406761,"byte_end":406771,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407085,"byte_end":407095,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5803}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409615,"byte_end":409620,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409652,"byte_end":409657,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5844}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409742,"byte_end":409747,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409996,"byte_end":410001,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5852}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410940,"byte_end":410944,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5894}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":411073,"byte_end":411077,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":411682,"byte_end":411686,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5902}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412345,"byte_end":412352,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412384,"byte_end":412391,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5940}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412476,"byte_end":412483,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412728,"byte_end":412735,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5948}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413122,"byte_end":413128,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413159,"byte_end":413165,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5983}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413930,"byte_end":413936,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5990},{"krate":0,"index":5991}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":414632,"byte_end":414645,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6019},{"krate":0,"index":6020},{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415558,"byte_end":415571,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6024}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418458,"byte_end":418464,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419768,"byte_end":419774,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6082}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419953,"byte_end":419959,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6086},{"krate":0,"index":6087}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420672,"byte_end":420680,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6131}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420977,"byte_end":420985,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6133}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424012,"byte_end":424030,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146},{"krate":0,"index":6147}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425479,"byte_end":425497,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6153}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425777,"byte_end":425795,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6159},{"krate":0,"index":6160}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":426907,"byte_end":426925,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6169}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":429496,"byte_end":429502,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6225}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":429742,"byte_end":429748,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6231}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":430028,"byte_end":430034,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6237},{"krate":0,"index":6238}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431582,"byte_end":431594,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6302}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431699,"byte_end":431711,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431742,"byte_end":431754,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6307}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431877,"byte_end":431889,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6310}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432070,"byte_end":432082,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6313},{"krate":0,"index":6314}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434664,"byte_end":434678,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434704,"byte_end":434718,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6326},{"krate":0,"index":6327},{"krate":0,"index":6328},{"krate":0,"index":6329}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":436284,"byte_end":436298,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":436391,"byte_end":436405,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6335},{"krate":0,"index":6336},{"krate":0,"index":6337}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":437567,"byte_end":437581,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6340}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":437747,"byte_end":437761,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6343}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":438041,"byte_end":438055,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":438225,"byte_end":438239,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6351}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/abort.rs","byte_start":466021,"byte_end":466032,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":467391,"byte_end":467399,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6477}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":468473,"byte_end":468481,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":468518,"byte_end":468528,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6485}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469380,"byte_end":469390,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469438,"byte_end":469445,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469708,"byte_end":469715,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469756,"byte_end":469766,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6499},{"krate":0,"index":6500},{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":470635,"byte_end":470645,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":470693,"byte_end":470697,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6509}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":470956,"byte_end":470960,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471129,"byte_end":471139,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471184,"byte_end":471194,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471240,"byte_end":471250,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471295,"byte_end":471305,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471359,"byte_end":471367,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471416,"byte_end":471424,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":472909,"byte_end":472913,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":472948,"byte_end":472952,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":472984,"byte_end":472988,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6596}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":474065,"byte_end":474069,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6599},{"krate":0,"index":6600}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":475069,"byte_end":475073,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6603}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":476523,"byte_end":476538,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6659},{"krate":0,"index":6660},{"krate":0,"index":6661},{"krate":0,"index":6662}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":479194,"byte_end":479209,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6665}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442029,"byte_end":442045,"line_start":88,"line_end":88,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442086,"byte_end":442102,"line_start":89,"line_end":89,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442131,"byte_end":442147,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442172,"byte_end":442188,"line_start":92,"line_end":92,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6686}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442373,"byte_end":442389,"line_start":99,"line_end":99,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6688}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444096,"byte_end":444112,"line_start":131,"line_end":131,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444186,"byte_end":444202,"line_start":137,"line_end":137,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6697},{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":6703},{"krate":0,"index":6704},{"krate":0,"index":6705},{"krate":0,"index":6706}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455733,"byte_end":455749,"line_start":410,"line_end":410,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6709},{"krate":0,"index":6710},{"krate":0,"index":6719}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460171,"byte_end":460175,"line_start":508,"line_end":508,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6718}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462430,"byte_end":462446,"line_start":565,"line_end":565,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6722}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462584,"byte_end":462600,"line_start":571,"line_end":571,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6725},{"krate":0,"index":6726}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":463171,"byte_end":463187,"line_start":591,"line_end":591,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6729}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":464837,"byte_end":464853,"line_start":632,"line_end":632,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":465323,"byte_end":465339,"line_start":646,"line_end":646,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6749}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":465615,"byte_end":465631,"line_start":659,"line_end":659,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6754}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":465753,"byte_end":465769,"line_start":665,"line_end":665,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":480804,"byte_end":480813,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":480958,"byte_end":480967,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6817},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820},{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":6823}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482440,"byte_end":482449,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6826}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482548,"byte_end":482557,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6829},{"krate":0,"index":6830}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483341,"byte_end":483350,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":484368,"byte_end":484377,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6838}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":484522,"byte_end":484531,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6842}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":484714,"byte_end":484723,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":6848}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485806,"byte_end":485810,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6864},{"krate":0,"index":6865},{"krate":0,"index":6866}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486243,"byte_end":486247,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486302,"byte_end":486309,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6874}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486746,"byte_end":486753,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486804,"byte_end":486812,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":487240,"byte_end":487248,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499592,"byte_end":499597,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499791,"byte_end":499796,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499972,"byte_end":499977,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7001},{"krate":0,"index":7002}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500967,"byte_end":500972,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":501000,"byte_end":501005,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502166,"byte_end":502172,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7077},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7080},{"krate":0,"index":7081}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":503140,"byte_end":503146,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7085}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":503358,"byte_end":503364,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7090},{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7094}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505443,"byte_end":505447,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505514,"byte_end":505518,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7125},{"krate":0,"index":7126},{"krate":0,"index":7127}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505882,"byte_end":505886,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7131},{"krate":0,"index":7132}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":506788,"byte_end":506793,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":507144,"byte_end":507149,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7163}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":507325,"byte_end":507330,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7167},{"krate":0,"index":7168}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":507990,"byte_end":508001,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7197},{"krate":0,"index":16800},{"krate":0,"index":16801},{"krate":0,"index":16802},{"krate":0,"index":16803}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":508258,"byte_end":508269,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7202},{"krate":0,"index":16804},{"krate":0,"index":16805},{"krate":0,"index":16806},{"krate":0,"index":16807}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":508473,"byte_end":508484,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7207},{"krate":0,"index":16808},{"krate":0,"index":16809}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":508646,"byte_end":508657,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7212}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":509266,"byte_end":509276,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7243},{"krate":0,"index":16863},{"krate":0,"index":16864},{"krate":0,"index":16865},{"krate":0,"index":16866},{"krate":0,"index":7244}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":509579,"byte_end":509589,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7253},{"krate":0,"index":7255},{"krate":0,"index":7257}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":510545,"byte_end":510555,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7262},{"krate":0,"index":16867},{"krate":0,"index":16868}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":510661,"byte_end":510671,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7266}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":511222,"byte_end":511226,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":511293,"byte_end":511297,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7300}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":511485,"byte_end":511489,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7304},{"krate":0,"index":7305}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":512695,"byte_end":512702,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7359}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":513141,"byte_end":513148,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":513260,"byte_end":513267,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":514043,"byte_end":514050,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7376},{"krate":0,"index":7377}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":516349,"byte_end":516355,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7425},{"krate":0,"index":7426},{"krate":0,"index":7427}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":518272,"byte_end":518276,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7473}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":518539,"byte_end":518543,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7480}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":518880,"byte_end":518884,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7488}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":519255,"byte_end":519259,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7495},{"krate":0,"index":17014},{"krate":0,"index":17015}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":519443,"byte_end":519447,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":17016},{"krate":0,"index":17017},{"krate":0,"index":17018},{"krate":0,"index":17019},{"krate":0,"index":7503}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":520122,"byte_end":520126,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7511},{"krate":0,"index":7512},{"krate":0,"index":7513},{"krate":0,"index":7514},{"krate":0,"index":7515}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":521845,"byte_end":521856,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7558}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":522229,"byte_end":522240,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7565},{"krate":0,"index":17101},{"krate":0,"index":17102},{"krate":0,"index":17103},{"krate":0,"index":17104},{"krate":0,"index":7566}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":523527,"byte_end":523538,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7573},{"krate":0,"index":17105},{"krate":0,"index":17106}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":523761,"byte_end":523772,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7580}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":524021,"byte_end":524032,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7587},{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":525576,"byte_end":525582,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7628},{"krate":0,"index":17160},{"krate":0,"index":17161},{"krate":0,"index":17162},{"krate":0,"index":17163},{"krate":0,"index":7629}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":526310,"byte_end":526316,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7633},{"krate":0,"index":7634},{"krate":0,"index":7635}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":526646,"byte_end":526652,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7639}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":526826,"byte_end":526832,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7643},{"krate":0,"index":7644},{"krate":0,"index":7645},{"krate":0,"index":7646},{"krate":0,"index":7647}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489137,"byte_end":489138,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529566,"byte_end":529568,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529623,"byte_end":529625,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563764,"byte_end":563774,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564212,"byte_end":564222,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7894},{"krate":0,"index":7895},{"krate":0,"index":7896},{"krate":0,"index":7897}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564733,"byte_end":564743,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7900},{"krate":0,"index":7901},{"krate":0,"index":7902},{"krate":0,"index":7903},{"krate":0,"index":7904}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":565288,"byte_end":565298,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7907},{"krate":0,"index":7908},{"krate":0,"index":7909},{"krate":0,"index":7910}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":566090,"byte_end":566100,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7913},{"krate":0,"index":7914},{"krate":0,"index":7915},{"krate":0,"index":7916},{"krate":0,"index":7917}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":566699,"byte_end":566709,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7920},{"krate":0,"index":7921}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567213,"byte_end":567223,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7924}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567367,"byte_end":567377,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7927}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567639,"byte_end":567649,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7930},{"krate":0,"index":7931}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567865,"byte_end":567875,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7934},{"krate":0,"index":7935}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":569682,"byte_end":569691,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7997},{"krate":0,"index":7998},{"krate":0,"index":17242},{"krate":0,"index":17243},{"krate":0,"index":17244},{"krate":0,"index":17245},{"krate":0,"index":7999},{"krate":0,"index":8000}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570834,"byte_end":570843,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8003},{"krate":0,"index":8004}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":572404,"byte_end":572413,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8009},{"krate":0,"index":8010}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":573815,"byte_end":573824,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8014},{"krate":0,"index":8015}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":574654,"byte_end":574663,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":17246},{"krate":0,"index":17247},{"krate":0,"index":17248},{"krate":0,"index":17249}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":574741,"byte_end":574750,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8020}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":575066,"byte_end":575075,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8023}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":577995,"byte_end":578007,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8026},{"krate":0,"index":8027}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":580089,"byte_end":580098,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8091},{"krate":0,"index":8092},{"krate":0,"index":8093},{"krate":0,"index":17301},{"krate":0,"index":17302},{"krate":0,"index":17303},{"krate":0,"index":17304},{"krate":0,"index":8094},{"krate":0,"index":8095},{"krate":0,"index":8096},{"krate":0,"index":8097},{"krate":0,"index":8098},{"krate":0,"index":8099},{"krate":0,"index":8100}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":583697,"byte_end":583706,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8103},{"krate":0,"index":8104},{"krate":0,"index":8106},{"krate":0,"index":8107}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585129,"byte_end":585138,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":17305},{"krate":0,"index":17306}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585219,"byte_end":585228,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":17307},{"krate":0,"index":17308}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585309,"byte_end":585318,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8114}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585677,"byte_end":585686,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8117}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":586740,"byte_end":586750,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8155},{"krate":0,"index":8156}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587952,"byte_end":587962,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8167},{"krate":0,"index":8168}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":591822,"byte_end":591827,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8208},{"krate":0,"index":8209},{"krate":0,"index":8210},{"krate":0,"index":8211},{"krate":0,"index":8212}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":593083,"byte_end":593088,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8216}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":593418,"byte_end":593423,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8220},{"krate":0,"index":8221}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":594492,"byte_end":594497,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8226},{"krate":0,"index":8227}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595608,"byte_end":595613,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595666,"byte_end":595671,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8256}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595813,"byte_end":595818,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8259},{"krate":0,"index":8260}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":597588,"byte_end":597592,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":8307},{"krate":0,"index":8308}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":599315,"byte_end":599322,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8352},{"krate":0,"index":8353}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601155,"byte_end":601161,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8399},{"krate":0,"index":8400},{"krate":0,"index":8401},{"krate":0,"index":8402},{"krate":0,"index":8403},{"krate":0,"index":8404}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604361,"byte_end":604367,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8407}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604654,"byte_end":604660,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8410},{"krate":0,"index":8411}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":605292,"byte_end":605298,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8414},{"krate":0,"index":8415}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606502,"byte_end":606508,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17530},{"krate":0,"index":17531},{"krate":0,"index":17532},{"krate":0,"index":17533}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606583,"byte_end":606589,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17534},{"krate":0,"index":17535},{"krate":0,"index":17536},{"krate":0,"index":17537}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606667,"byte_end":606673,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17538},{"krate":0,"index":17539},{"krate":0,"index":17540},{"krate":0,"index":17541}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606746,"byte_end":606752,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":17542},{"krate":0,"index":17543},{"krate":0,"index":17544},{"krate":0,"index":17545}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607669,"byte_end":607674,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8452}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607883,"byte_end":607888,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8454},{"krate":0,"index":8455}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":608120,"byte_end":608125,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8457}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608623,"byte_end":608630,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608685,"byte_end":608692,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8490}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608823,"byte_end":608830,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8494},{"krate":0,"index":8495}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610400,"byte_end":610405,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610458,"byte_end":610463,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8524}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610576,"byte_end":610581,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8527},{"krate":0,"index":8528}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/into_sink.rs","byte_start":611603,"byte_end":611611,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8561},{"krate":0,"index":8562}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/into_sink.rs","byte_start":612544,"byte_end":612552,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568},{"krate":0,"index":8569},{"krate":0,"index":8570}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":614056,"byte_end":614061,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8608}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":614224,"byte_end":614229,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8611},{"krate":0,"index":8612}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615224,"byte_end":615228,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615280,"byte_end":615284,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8641}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615449,"byte_end":615453,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8644},{"krate":0,"index":8645}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":616141,"byte_end":616153,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":616205,"byte_end":616217,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8678}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":616396,"byte_end":616408,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8681},{"krate":0,"index":8682}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":617103,"byte_end":617112,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":617164,"byte_end":617173,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8717}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":617338,"byte_end":617347,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8720},{"krate":0,"index":8721}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":618490,"byte_end":618498,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":618553,"byte_end":618561,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8762}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":619530,"byte_end":619538,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8768},{"krate":0,"index":8769}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620293,"byte_end":620302,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620354,"byte_end":620363,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8804}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620608,"byte_end":620613,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8810}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":622448,"byte_end":622457,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8815},{"krate":0,"index":8816}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":623330,"byte_end":623342,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":623394,"byte_end":623406,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8861}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":624335,"byte_end":624347,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8867},{"krate":0,"index":8868}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":625167,"byte_end":625176,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":625231,"byte_end":625240,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8903}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":626212,"byte_end":626221,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8908},{"krate":0,"index":8909}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627379,"byte_end":627385,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8944},{"krate":0,"index":8945}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":628026,"byte_end":628032,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8947}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628546,"byte_end":628550,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628602,"byte_end":628606,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8984}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628763,"byte_end":628767,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8987},{"krate":0,"index":8988}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629896,"byte_end":629900,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9020},{"krate":0,"index":9021},{"krate":0,"index":9023},{"krate":0,"index":9024}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":630618,"byte_end":630622,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9026}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631639,"byte_end":631647,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9079}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632147,"byte_end":632156,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9083}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632548,"byte_end":632556,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9086},{"krate":0,"index":9088}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":633059,"byte_end":633068,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9092},{"krate":0,"index":9094},{"krate":0,"index":9096},{"krate":0,"index":9098}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634083,"byte_end":634095,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9107}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634259,"byte_end":634271,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9110}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634505,"byte_end":634517,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":634990,"byte_end":634994,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9156},{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":17797},{"krate":0,"index":17798},{"krate":0,"index":17799},{"krate":0,"index":17800}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636911,"byte_end":636915,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9161}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":637425,"byte_end":637429,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9164},{"krate":0,"index":9165}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639272,"byte_end":639278,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9182},{"krate":0,"index":9183},{"krate":0,"index":9184},{"krate":0,"index":9185},{"krate":0,"index":9186},{"krate":0,"index":9187},{"krate":0,"index":9188}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":641348,"byte_end":641354,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9192}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":641501,"byte_end":641507,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9195}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":642028,"byte_end":642033,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":642086,"byte_end":642091,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9224}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":642253,"byte_end":642258,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9227},{"krate":0,"index":9228}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":642942,"byte_end":642955,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":643008,"byte_end":643021,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9261}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":643194,"byte_end":643207,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9264},{"krate":0,"index":9265}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":643899,"byte_end":643907,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":643960,"byte_end":643968,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":9300}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":644130,"byte_end":644138,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9303},{"krate":0,"index":9304}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547695,"byte_end":547696,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554151,"byte_end":554152,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555039,"byte_end":555040,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562519,"byte_end":562520,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646466,"byte_end":646471,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9444}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646804,"byte_end":646809,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9447}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646902,"byte_end":646907,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9450}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647040,"byte_end":647046,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9458},{"krate":0,"index":9459}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647492,"byte_end":647497,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9464},{"krate":0,"index":9465}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648068,"byte_end":648073,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9468},{"krate":0,"index":9469},{"krate":0,"index":9470},{"krate":0,"index":9471},{"krate":0,"index":9472}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":651188,"byte_end":651203,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9481}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":651634,"byte_end":651649,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9484}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":651766,"byte_end":651781,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9488},{"krate":0,"index":9489}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653010,"byte_end":653025,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9492}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653627,"byte_end":653637,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9500}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654649,"byte_end":654659,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9505}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654865,"byte_end":654875,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9508}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654973,"byte_end":654983,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9511},{"krate":0,"index":9512}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655124,"byte_end":655134,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9515}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655585,"byte_end":655601,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9527}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656731,"byte_end":656747,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":9533}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657012,"byte_end":657028,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9537}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657140,"byte_end":657156,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9541},{"krate":0,"index":9542}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657299,"byte_end":657315,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9546}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657592,"byte_end":657597,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657643,"byte_end":657648,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657815,"byte_end":657830,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657934,"byte_end":657949,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658153,"byte_end":658163,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658213,"byte_end":658223,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658291,"byte_end":658307,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658378,"byte_end":658394,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":660398,"byte_end":660403,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":660440,"byte_end":660445,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":660461,"byte_end":660467,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9623},{"krate":0,"index":9624},{"krate":0,"index":9626},{"krate":0,"index":9627}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666087,"byte_end":666092,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9630}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666214,"byte_end":666219,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9633}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666547,"byte_end":666559,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9641}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666723,"byte_end":666735,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9644}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666956,"byte_end":666968,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":667350,"byte_end":667361,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9649},{"krate":0,"index":9650}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":667524,"byte_end":667535,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9653}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":667673,"byte_end":667684,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9656}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":668036,"byte_end":668047,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9659}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669360,"byte_end":669369,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9701},{"krate":0,"index":9702}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671642,"byte_end":671653,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9704}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672436,"byte_end":672443,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9706}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672626,"byte_end":672633,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672646,"byte_end":672655,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":9710}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":673644,"byte_end":673653,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9715},{"krate":0,"index":9716}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":673892,"byte_end":673901,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9720},{"krate":0,"index":9721}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674160,"byte_end":674171,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9724}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":674843,"byte_end":674844,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9744},{"krate":0,"index":9745}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":675079,"byte_end":675080,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9753}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":675350,"byte_end":675351,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9761}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676367,"byte_end":676371,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9769}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676465,"byte_end":676469,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9773},{"krate":0,"index":9774}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676728,"byte_end":676735,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9779},{"krate":0,"index":9780}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676958,"byte_end":676965,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9785}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677156,"byte_end":677163,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9790}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677468,"byte_end":677481,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9796},{"krate":0,"index":9797}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677898,"byte_end":677907,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9802},{"krate":0,"index":9803}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":678191,"byte_end":678200,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":9808}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":678462,"byte_end":678471,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":9813}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":678793,"byte_end":678800,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9820},{"krate":0,"index":9821}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679019,"byte_end":679026,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9827}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679204,"byte_end":679211,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9833}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679512,"byte_end":679520,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9841},{"krate":0,"index":9842}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679743,"byte_end":679751,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9848}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679933,"byte_end":679941,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9854}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":680251,"byte_end":680262,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":9863},{"krate":0,"index":9864}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":680522,"byte_end":680533,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":9870}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":680770,"byte_end":680781,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":9876}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":681148,"byte_end":681160,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":9884},{"krate":0,"index":9885}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":681421,"byte_end":681433,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":9891}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":681671,"byte_end":681683,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9897}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":682302,"byte_end":682316,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9910},{"krate":0,"index":9911}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":682539,"byte_end":682553,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9917}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":682754,"byte_end":682768,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9923}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":683074,"byte_end":683080,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9933}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":683173,"byte_end":683179,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9937},{"krate":0,"index":9938}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":683784,"byte_end":683795,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9949},{"krate":0,"index":9950}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1985}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154102,"byte_end":154119,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6356}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/mod.rs","byte_start":154318,"byte_end":154328,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6762}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":10904,"byte_end":10908,"line_start":304,"line_end":304,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6939}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7699}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7798}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11218,"byte_end":11220,"line_start":320,"line_end":320,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":7800}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":9382}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39583,"byte_end":39590,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":9951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39720,"byte_end":39727,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":9951},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":39952,"byte_end":39959,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":9951},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":40733,"byte_end":40740,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":9951},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":40965,"byte_end":40972,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":9951},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/flatten.rs","byte_start":41825,"byte_end":41832,"line_start":105,"line_end":105,"column_start":32,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":9951},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":43986,"byte_end":43990,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":9998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":44097,"byte_end":44101,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":9998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45830,"byte_end":45834,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":9998},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/fuse.rs","byte_start":45947,"byte_end":45951,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":9998},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":46929,"byte_end":46932,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":10034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":47101,"byte_end":47104,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":10034},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/map.rs","byte_start":47366,"byte_end":47369,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":10034},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":48575,"byte_end":48586,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":10594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/catch_unwind.rs","byte_start":48729,"byte_end":48740,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":10594},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":49967,"byte_end":49977,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50178,"byte_end":50184,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50227,"byte_end":50233,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50491,"byte_end":50496,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50650,"byte_end":50660,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50892,"byte_end":50897,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":50994,"byte_end":50999,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51243,"byte_end":51249,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":51673,"byte_end":51679,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":53745,"byte_end":53750,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55446,"byte_end":55452,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":446},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":55604,"byte_end":55610,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":57199,"byte_end":57204,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":58911,"byte_end":58917,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59076,"byte_end":59082,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":446},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59510,"byte_end":59518,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":454},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/shared.rs","byte_start":59877,"byte_end":59887,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22734,"byte_end":22735,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":544},"to":{"krate":0,"index":545}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/future/mod.rs","byte_start":22866,"byte_end":22872,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12611},"to":{"krate":0,"index":545}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":82313,"byte_end":82323,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":10630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":82474,"byte_end":82484,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":10630},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/into_future.rs","byte_start":82607,"byte_end":82617,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":10630},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83326,"byte_end":83336,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":10666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83466,"byte_end":83476,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":10666},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":83719,"byte_end":83729,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":10666},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":84682,"byte_end":84692,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":10666},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":84935,"byte_end":84945,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":10666},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten.rs","byte_start":85982,"byte_end":85992,"line_start":111,"line_end":111,"column_start":32,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":10666},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88269,"byte_end":88282,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":10713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88412,"byte_end":88425,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":10713},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/try_flatten_err.rs","byte_start":88668,"byte_end":88681,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":10713},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64859,"byte_end":64862,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":837},"to":{"krate":0,"index":838}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_future/mod.rs","byte_start":64945,"byte_end":64954,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":838}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":89990,"byte_end":89994,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":11659},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90590,"byte_end":90594,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":11659},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/lazy.rs","byte_start":90738,"byte_end":90742,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":11659},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91345,"byte_end":91352,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":11665},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":91913,"byte_end":91920,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":11665},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":92065,"byte_end":92072,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":11665},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/pending.rs","byte_start":92098,"byte_end":92105,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":11665},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":92859,"byte_end":92868,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":11671},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":93471,"byte_end":93480,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":11671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94578,"byte_end":94587,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":11671},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/maybe_done.rs","byte_start":94788,"byte_end":94797,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":11671},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96117,"byte_end":96129,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":11684},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":96355,"byte_end":96367,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":11684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":97480,"byte_end":97492,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":11684},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_maybe_done.rs","byte_start":97696,"byte_end":97708,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":11684},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99358,"byte_end":99370,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99468,"byte_end":99480,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99794,"byte_end":99806,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":11697},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/option.rs","byte_start":99993,"byte_end":100005,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":100443,"byte_end":100449,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":101143,"byte_end":101149,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_fn.rs","byte_start":101291,"byte_end":101297,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1162},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":102025,"byte_end":102038,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":11736},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":102604,"byte_end":102617,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":11736},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/poll_immediate.rs","byte_start":103637,"byte_end":103650,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":11736},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":105822,"byte_end":105827,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":11775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106006,"byte_end":106011,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":11775},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106043,"byte_end":106048,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":11775},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/ready.rs","byte_start":106145,"byte_end":106150,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":11775},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":114137,"byte_end":114144,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":116905,"byte_end":116912,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/join_all.rs","byte_start":117900,"byte_end":117907,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":118403,"byte_end":118409,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":12129},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":120845,"byte_end":120851,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":12129},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select.rs","byte_start":121555,"byte_end":121561,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":12129},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":122124,"byte_end":122133,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":12137},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":123140,"byte_end":123149,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":12137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":123332,"byte_end":123341,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":12137},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_all.rs","byte_start":124011,"byte_end":124020,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":12137},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":132628,"byte_end":132638,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":134468,"byte_end":134478,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_join_all.rs","byte_start":135626,"byte_end":135636,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":136118,"byte_end":136127,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":12465},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/try_select.rs","byte_start":137966,"byte_end":137975,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":12465},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":139337,"byte_end":139345,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":12473},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":140423,"byte_end":140431,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":12473},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/select_ok.rs","byte_start":141862,"byte_end":141870,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":12473},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":142849,"byte_end":142855,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":12479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143194,"byte_end":143200,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":12479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143585,"byte_end":143591,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":12479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":143972,"byte_end":143978,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":144219,"byte_end":144225,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":12479},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":144564,"byte_end":144570,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":12479},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":144846,"byte_end":144852,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":12479},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145387,"byte_end":145393,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":12479},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":145700,"byte_end":145706,"line_start":144,"line_end":144,"column_start":33,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":12479},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":147065,"byte_end":147071,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":12479},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":147872,"byte_end":147878,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":12479},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":149185,"byte_end":149191,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":12479},"to":{"krate":26,"index":47}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/future/either.rs","byte_start":149621,"byte_end":149627,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":12479},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":208989,"byte_end":208994,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":12496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":209220,"byte_end":209225,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":12496},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chain.rs","byte_start":209434,"byte_end":209439,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":12496},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":211035,"byte_end":211042,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":12545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":211307,"byte_end":211314,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12545},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/collect.rs","byte_start":211492,"byte_end":211499,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12545},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":212525,"byte_end":212530,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":212924,"byte_end":212929,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":12594},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/unzip.rs","byte_start":213179,"byte_end":213184,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":12594},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":214309,"byte_end":214315,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":12656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":214535,"byte_end":214541,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":12656},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/concat.rs","byte_start":215249,"byte_end":215255,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":12656},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":215981,"byte_end":215986,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12696},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":216207,"byte_end":216212,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":216344,"byte_end":216349,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":12696},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/count.rs","byte_start":216467,"byte_end":216472,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":12696},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":217278,"byte_end":217283,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":12733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":217439,"byte_end":217444,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":12733},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/cycle.rs","byte_start":218193,"byte_end":218198,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":12733},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":218946,"byte_end":218955,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":12773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":219141,"byte_end":219150,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":12773},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":219268,"byte_end":219277,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":12773},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/enumerate.rs","byte_start":219930,"byte_end":219939,"line_start":57,"line_end":57,"column_start":30,"column_end":39},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":12773},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":220718,"byte_end":220724,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":12821},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":221197,"byte_end":221203,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":12821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":221526,"byte_end":221532,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":12821},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":221869,"byte_end":221875,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":12821},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter.rs","byte_start":223254,"byte_end":223260,"line_start":108,"line_end":108,"column_start":38,"column_end":44},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":12821},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224047,"byte_end":224056,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":12890},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224353,"byte_end":224362,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":12890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224629,"byte_end":224638,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":12890},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":224905,"byte_end":224914,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":12890},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/filter_map.rs","byte_start":226332,"byte_end":226341,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":12890},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":227016,"byte_end":227023,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":12955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":227192,"byte_end":227199,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":12955},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":227391,"byte_end":227398,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":12955},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/flatten.rs","byte_start":228220,"byte_end":228227,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":12955},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":228912,"byte_end":228916,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":13075},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":229272,"byte_end":229276,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":13075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":229537,"byte_end":229541,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":13075},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fold.rs","byte_start":229776,"byte_end":229780,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":13075},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":231369,"byte_end":231372,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":13144},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":231702,"byte_end":231705,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":13144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":231958,"byte_end":231961,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":13144},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/any.rs","byte_start":232190,"byte_end":232193,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":13144},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":233945,"byte_end":233948,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":13205},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":234278,"byte_end":234281,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":13205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":234533,"byte_end":234536,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":13205},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/all.rs","byte_start":234765,"byte_end":234768,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":13205},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":236604,"byte_end":236611,"line_start":24,"line_end":24,"column_start":20,"column_end":27},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":13266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":236811,"byte_end":236818,"line_start":30,"line_end":30,"column_start":39,"column_end":46},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":13266},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/forward.rs","byte_start":237020,"byte_end":237027,"line_start":40,"line_end":40,"column_start":34,"column_end":41},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":13266},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":238832,"byte_end":238839,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":13389},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":239132,"byte_end":239139,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":13389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":239370,"byte_end":239377,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":13389},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each.rs","byte_start":239616,"byte_end":239623,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":13389},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":240724,"byte_end":240728,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":13446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":241225,"byte_end":241229,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":13446},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":241327,"byte_end":241331,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":13446},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/fuse.rs","byte_start":242017,"byte_end":242021,"line_start":71,"line_end":71,"column_start":51,"column_end":55},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":13446},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":242533,"byte_end":242545,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":13494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":245035,"byte_end":245047,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":13494},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/into_future.rs","byte_start":245167,"byte_end":245179,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":13494},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246064,"byte_end":246067,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":13578},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246256,"byte_end":246259,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":13578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246428,"byte_end":246431,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":13578},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":246599,"byte_end":246602,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":13578},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/map.rs","byte_start":247144,"byte_end":247147,"line_start":69,"line_end":69,"column_start":34,"column_end":37},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":13578},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247714,"byte_end":247718,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":13724},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247769,"byte_end":247773,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":13724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":247924,"byte_end":247928,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":13724},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/next.rs","byte_start":248067,"byte_end":248071,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":13724},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248722,"byte_end":248736,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":13732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":248887,"byte_end":248901,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":13732},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/select_next_some.rs","byte_start":249045,"byte_end":249059,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":13732},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":250370,"byte_end":250378,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":13740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":255875,"byte_end":255883,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":13740},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":256025,"byte_end":256033,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":13740},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":256818,"byte_end":256826,"line_start":220,"line_end":220,"column_start":30,"column_end":38},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":13740},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":257192,"byte_end":257196,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":13788},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":257441,"byte_end":257445,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":13788},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":257556,"byte_end":257560,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":13788},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":258257,"byte_end":258264,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":13829},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":258512,"byte_end":258519,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":13829},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":258630,"byte_end":258637,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":13829},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":259357,"byte_end":259363,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":13870},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":259715,"byte_end":259721,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":13870},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":259990,"byte_end":259996,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":13870},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":261257,"byte_end":261265,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":13919},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":261585,"byte_end":261593,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":13919},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":261777,"byte_end":261785,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":13919},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/peek.rs","byte_start":262156,"byte_end":262166,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3207},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":262831,"byte_end":262835,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":13968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":263026,"byte_end":263030,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":13968},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":263148,"byte_end":263152,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":13968},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip.rs","byte_start":263963,"byte_end":263967,"line_start":63,"line_end":63,"column_start":30,"column_end":34},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":13968},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":264749,"byte_end":264758,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":14016},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":265210,"byte_end":265219,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":14016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":265545,"byte_end":265554,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":14016},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":265802,"byte_end":265811,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":14016},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/skip_while.rs","byte_start":267425,"byte_end":267434,"line_start":115,"line_end":115,"column_start":38,"column_end":47},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":14016},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":268111,"byte_end":268115,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":14089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":268288,"byte_end":268292,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":14089},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":269264,"byte_end":269268,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":14089},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take.rs","byte_start":269516,"byte_end":269520,"line_start":79,"line_end":79,"column_start":30,"column_end":34},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":14089},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":270291,"byte_end":270300,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":14137},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":270748,"byte_end":270757,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":14137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":271076,"byte_end":271085,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":14137},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":272604,"byte_end":272613,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":14137},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_while.rs","byte_start":272969,"byte_end":272978,"line_start":117,"line_end":117,"column_start":38,"column_end":47},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":14137},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":273997,"byte_end":274006,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":14210},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":274294,"byte_end":274303,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":14210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":276420,"byte_end":276429,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":14210},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":277461,"byte_end":277470,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":14210},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/take_until.rs","byte_start":277707,"byte_end":277716,"line_start":162,"line_end":162,"column_start":35,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":14210},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":278412,"byte_end":278416,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":14271},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":278667,"byte_end":278671,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":14271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":278917,"byte_end":278921,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":14271},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":279147,"byte_end":279151,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":14271},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/then.rs","byte_start":280330,"byte_end":280334,"line_start":94,"line_end":94,"column_start":38,"column_end":42},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":14271},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":281033,"byte_end":281036,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":14336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282622,"byte_end":282625,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":14336},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/zip.rs","byte_start":282820,"byte_end":282823,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":14336},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":285518,"byte_end":285524,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":14393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":286032,"byte_end":286038,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":14393},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":287654,"byte_end":287660,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":14393},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/chunks.rs","byte_start":287883,"byte_end":287889,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":14393},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":288632,"byte_end":288643,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":14445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":288995,"byte_end":289006,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":14445},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":291175,"byte_end":291186,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":14445},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/ready_chunks.rs","byte_start":291409,"byte_end":291420,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":14445},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":292184,"byte_end":292188,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":14497},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":292674,"byte_end":292678,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":14497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":292842,"byte_end":292846,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":14497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":293208,"byte_end":293212,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":14497},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":294439,"byte_end":294443,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":14497},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/scan.rs","byte_start":294817,"byte_end":294821,"line_start":121,"line_end":121,"column_start":42,"column_end":46},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":14497},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":295624,"byte_end":295639,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":14570},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":295971,"byte_end":295986,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":14570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":296373,"byte_end":296388,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":14570},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":297842,"byte_end":297857,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":14570},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffer_unordered.rs","byte_start":298141,"byte_end":298156,"line_start":116,"line_end":116,"column_start":30,"column_end":45},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":14570},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":298967,"byte_end":298975,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":14619},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":299322,"byte_end":299330,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":14619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":299610,"byte_end":299618,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":14619},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/buffered.rs","byte_start":301136,"byte_end":301144,"line_start":100,"line_end":100,"column_start":30,"column_end":38},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":14619},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":301955,"byte_end":301972,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":14668},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":302318,"byte_end":302335,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":14668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":302768,"byte_end":302785,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":14668},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/for_each_concurrent.rs","byte_start":303015,"byte_end":303032,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":14668},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305256,"byte_end":305267,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":14729},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305290,"byte_end":305301,"line_start":18,"line_end":18,"column_start":16,"column_end":27},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":14729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":305734,"byte_end":305745,"line_start":30,"line_end":30,"column_start":28,"column_end":39},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":14729},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306323,"byte_end":306332,"line_start":52,"line_end":52,"column_start":25,"column_end":34},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":14736},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306380,"byte_end":306389,"line_start":54,"line_end":54,"column_start":35,"column_end":44},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":14736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":306853,"byte_end":306862,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":14736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":307584,"byte_end":307593,"line_start":87,"line_end":87,"column_start":42,"column_end":51},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":14736},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309200,"byte_end":309212,"line_start":131,"line_end":131,"column_start":30,"column_end":42},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4067},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309388,"byte_end":309400,"line_start":137,"line_end":137,"column_start":32,"column_end":44},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4067},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/split.rs","byte_start":309649,"byte_end":309661,"line_start":144,"line_end":144,"column_start":53,"column_end":65},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4067},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":310206,"byte_end":310217,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":14745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":310409,"byte_end":310420,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":14745},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/catch_unwind.rs","byte_start":311272,"byte_end":311283,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":14745},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":161899,"byte_end":161900,"line_start":226,"line_end":226,"column_start":31,"column_end":32},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4145},"to":{"krate":0,"index":4146}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/stream/mod.rs","byte_start":162043,"byte_end":162049,"line_start":230,"line_end":230,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":4146}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":350400,"byte_end":350407,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":14789},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":350700,"byte_end":350707,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":14789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":350988,"byte_end":350995,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":14789},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":352138,"byte_end":352145,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":14789},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/and_then.rs","byte_start":352491,"byte_end":352498,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":14789},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353063,"byte_end":353073,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":15088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353266,"byte_end":353276,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":15088},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353397,"byte_end":353407,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":15088},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_stream.rs","byte_start":353831,"byte_end":353841,"line_start":48,"line_end":48,"column_start":42,"column_end":52},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":15088},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":354506,"byte_end":354512,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":15288},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":354804,"byte_end":354810,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":15288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":355088,"byte_end":355094,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":15288},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":356371,"byte_end":356377,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":15288},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/or_else.rs","byte_start":356720,"byte_end":356726,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":15288},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357281,"byte_end":357288,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":15353},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357342,"byte_end":357349,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":15353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357512,"byte_end":357519,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":15353},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_next.rs","byte_start":357661,"byte_end":357668,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":15353},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":358444,"byte_end":358454,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":15361},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":358750,"byte_end":358760,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":15361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each.rs","byte_start":359005,"byte_end":359015,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":15361},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":360414,"byte_end":360423,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":15418},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":360819,"byte_end":360828,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":15418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":361071,"byte_end":361080,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":15418},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":361337,"byte_end":361346,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":15418},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter.rs","byte_start":362735,"byte_end":362744,"line_start":105,"line_end":105,"column_start":41,"column_end":50},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":15418},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":363487,"byte_end":363499,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":15487},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":363799,"byte_end":363811,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":15487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":364008,"byte_end":364020,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":15487},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":364298,"byte_end":364310,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":15487},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_filter_map.rs","byte_start":365810,"byte_end":365822,"line_start":99,"line_end":99,"column_start":38,"column_end":50},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":15487},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":366494,"byte_end":366504,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":15552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":366769,"byte_end":366779,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":15552},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":367025,"byte_end":367035,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":15552},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_flatten.rs","byte_start":367954,"byte_end":367964,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":15552},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":368644,"byte_end":368654,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":15600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":368794,"byte_end":368804,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":15600},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_collect.rs","byte_start":368992,"byte_end":369002,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":15600},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":370000,"byte_end":370009,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":15649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_concat.rs","byte_start":370228,"byte_end":370237,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":15649},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":371621,"byte_end":371630,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":15689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":372125,"byte_end":372134,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":15689},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374082,"byte_end":374091,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":15689},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374314,"byte_end":374323,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":15689},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374750,"byte_end":374764,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":15741},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":374909,"byte_end":374923,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":15741},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_chunks.rs","byte_start":375110,"byte_end":375124,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":15741},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":375734,"byte_end":375741,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":15762},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":376100,"byte_end":376107,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":15762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":376387,"byte_end":376394,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":15762},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_fold.rs","byte_start":376648,"byte_end":376655,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":15762},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":380518,"byte_end":380527,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":15831},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_unfold.rs","byte_start":380789,"byte_end":380798,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":15831},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":382544,"byte_end":382556,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":15888},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":383012,"byte_end":383024,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":15888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":383364,"byte_end":383376,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":15888},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":384875,"byte_end":384887,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":15888},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_skip_while.rs","byte_start":385254,"byte_end":385266,"line_start":113,"line_end":113,"column_start":41,"column_end":53},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":15888},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":386115,"byte_end":386127,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":15961},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":386579,"byte_end":386591,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":15961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":386929,"byte_end":386941,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":15961},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":388548,"byte_end":388560,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":15961},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_take_while.rs","byte_start":388947,"byte_end":388959,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":15961},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":389848,"byte_end":389866,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":16034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":390205,"byte_end":390223,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":16034},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffer_unordered.rs","byte_start":391500,"byte_end":391518,"line_start":78,"line_end":78,"column_start":33,"column_end":51},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":16034},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":392429,"byte_end":392440,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":16086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":392777,"byte_end":392788,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":16086},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_buffered.rs","byte_start":394065,"byte_end":394076,"line_start":79,"line_end":79,"column_start":33,"column_end":44},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":16086},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":394946,"byte_end":394966,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":16138},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":395331,"byte_end":395351,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":16138},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":395590,"byte_end":395610,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":16138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":396058,"byte_end":396078,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":16138},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":399179,"byte_end":399192,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":16199},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":399408,"byte_end":399421,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":16199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":399633,"byte_end":399646,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":16199},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":401267,"byte_end":401280,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":16199},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/into_async_read.rs","byte_start":401887,"byte_end":401900,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":16199},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316683,"byte_end":316684,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5558},"to":{"krate":0,"index":5559}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/try_stream/mod.rs","byte_start":316765,"byte_end":316774,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":5559}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":403936,"byte_end":403940,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":16218},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/iter.rs","byte_start":404562,"byte_end":404566,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":16218},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405757,"byte_end":405763,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":16227},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":405790,"byte_end":405796,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":16227},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat.rs","byte_start":406104,"byte_end":406110,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":16227},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406707,"byte_end":406717,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":16236},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":406761,"byte_end":406771,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":16236},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/repeat_with.rs","byte_start":407085,"byte_end":407095,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":16236},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409615,"byte_end":409620,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":16245},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409652,"byte_end":409657,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":16245},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409742,"byte_end":409747,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":16245},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/empty.rs","byte_start":409996,"byte_end":410001,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":16245},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":410940,"byte_end":410944,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":16251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":411073,"byte_end":411077,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":16251},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/once.rs","byte_start":411682,"byte_end":411686,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":16251},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412345,"byte_end":412352,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":16287},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412384,"byte_end":412391,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":16287},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412476,"byte_end":412483,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":16287},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/pending.rs","byte_start":412728,"byte_end":412735,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":16287},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413122,"byte_end":413128,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5976},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413159,"byte_end":413165,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5976},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_fn.rs","byte_start":413930,"byte_end":413936,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5976},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":414632,"byte_end":414645,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":16293},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/poll_immediate.rs","byte_start":415558,"byte_end":415571,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":16293},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":418458,"byte_end":418464,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":16332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419768,"byte_end":419774,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":16332},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select.rs","byte_start":419953,"byte_end":419959,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":16332},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420672,"byte_end":420680,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":16377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":420977,"byte_end":420985,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":16377},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":424012,"byte_end":424030,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":16396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425479,"byte_end":425497,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":16396},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":425777,"byte_end":425795,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":16396},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_with_strategy.rs","byte_start":426907,"byte_end":426925,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":16396},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":429496,"byte_end":429502,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":16465},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":429742,"byte_end":429748,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":16465},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/unfold.rs","byte_start":430028,"byte_end":430034,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":16465},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431582,"byte_end":431594,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":16518},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431699,"byte_end":431711,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":16518},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431742,"byte_end":431754,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":16518},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":431877,"byte_end":431889,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":16518},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":432070,"byte_end":432082,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":16518},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434664,"byte_end":434678,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":434704,"byte_end":434718,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":436284,"byte_end":436298,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":436391,"byte_end":436405,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6316},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":437567,"byte_end":437581,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":437747,"byte_end":437761,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":438041,"byte_end":438055,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6316},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_ordered.rs","byte_start":438225,"byte_end":438239,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6316},"to":{"krate":2,"index":7429}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/abort.rs","byte_start":466021,"byte_end":466032,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":467391,"byte_end":467399,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":16597},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":468473,"byte_end":468481,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":16597},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":468518,"byte_end":468528,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":16558},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469380,"byte_end":469390,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":16558},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469438,"byte_end":469445,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":16568},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469708,"byte_end":469715,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":16568},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":469756,"byte_end":469766,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":16577},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":470635,"byte_end":470645,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":16577},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":470693,"byte_end":470697,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":16588},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":470956,"byte_end":470960,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":16588},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471129,"byte_end":471139,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":16577},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471184,"byte_end":471194,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":16577},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471240,"byte_end":471250,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":16558},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471295,"byte_end":471305,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":16558},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471359,"byte_end":471367,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":16597},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/iter.rs","byte_start":471416,"byte_end":471424,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":16597},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":472909,"byte_end":472913,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6581},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":472948,"byte_end":472952,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6581},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":472984,"byte_end":472988,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6581},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":474065,"byte_end":474069,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":6581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/task.rs","byte_start":475069,"byte_end":475073,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6581},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":476523,"byte_end":476538,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":479194,"byte_end":479209,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6651},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442029,"byte_end":442045,"line_start":88,"line_end":88,"column_start":33,"column_end":49},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442086,"byte_end":442102,"line_start":89,"line_end":89,"column_start":33,"column_end":49},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442131,"byte_end":442147,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442172,"byte_end":442188,"line_start":92,"line_end":92,"column_start":16,"column_end":32},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6674},"to":{"krate":22,"index":15}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":442373,"byte_end":442389,"line_start":99,"line_end":99,"column_start":21,"column_end":37},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6674},"to":{"krate":22,"index":18}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444096,"byte_end":444112,"line_start":131,"line_end":131,"column_start":23,"column_end":39},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":444186,"byte_end":444202,"line_start":137,"line_end":137,"column_start":11,"column_end":27},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":455733,"byte_end":455749,"line_start":410,"line_end":410,"column_start":30,"column_end":46},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6674},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":460171,"byte_end":460175,"line_start":508,"line_end":508,"column_start":32,"column_end":36},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6711},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462430,"byte_end":462446,"line_start":565,"line_end":565,"column_start":21,"column_end":37},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":462584,"byte_end":462600,"line_start":571,"line_end":571,"column_start":11,"column_end":27},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":463171,"byte_end":463187,"line_start":591,"line_end":591,"column_start":20,"column_end":36},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":464837,"byte_end":464853,"line_start":632,"line_end":632,"column_start":35,"column_end":51},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":7420}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":465323,"byte_end":465339,"line_start":646,"line_end":646,"column_start":33,"column_end":49},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":465615,"byte_end":465631,"line_start":659,"line_end":659,"column_start":35,"column_end":51},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6674},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/futures_unordered/mod.rs","byte_start":465753,"byte_end":465769,"line_start":665,"line_end":665,"column_start":27,"column_end":43},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6674},"to":{"krate":2,"index":7429}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":480804,"byte_end":480813,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":16604},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":480958,"byte_end":480967,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":16604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482440,"byte_end":482449,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":16604},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":482548,"byte_end":482557,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":16604},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":483341,"byte_end":483350,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":16604},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":484368,"byte_end":484377,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":16604},"to":{"krate":2,"index":7416}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":484522,"byte_end":484531,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":16604},"to":{"krate":2,"index":7429}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":484714,"byte_end":484723,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":16604},"to":{"krate":2,"index":7420}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":485806,"byte_end":485810,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":16637},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486243,"byte_end":486247,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":16637},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486302,"byte_end":486309,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":16646},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486746,"byte_end":486753,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":16646},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":486804,"byte_end":486812,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":16655},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/stream/select_all.rs","byte_start":487240,"byte_end":487248,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":16655},"to":{"krate":2,"index":7489}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499592,"byte_end":499597,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":16662},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499791,"byte_end":499796,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":16662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/close.rs","byte_start":499972,"byte_end":499977,"line_start":26,"line_end":26,"column_start":56,"column_end":61},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":16662},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":500967,"byte_end":500972,"line_start":33,"line_end":33,"column_start":19,"column_end":24},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":16673},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/drain.rs","byte_start":501000,"byte_end":501005,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":16673},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":502166,"byte_end":502172,"line_start":21,"line_end":21,"column_start":16,"column_end":22},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":16679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":503140,"byte_end":503146,"line_start":51,"line_end":51,"column_start":40,"column_end":46},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":16679},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/fanout.rs","byte_start":503358,"byte_end":503364,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":16679},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505443,"byte_end":505447,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":16724},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505514,"byte_end":505518,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":16724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/feed.rs","byte_start":505882,"byte_end":505886,"line_start":32,"line_end":32,"column_start":56,"column_end":60},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":16724},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":506788,"byte_end":506793,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":16735},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":507144,"byte_end":507149,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":16735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/flush.rs","byte_start":507325,"byte_end":507330,"line_start":30,"line_end":30,"column_start":56,"column_end":61},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":16735},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":507990,"byte_end":508001,"line_start":16,"line_end":16,"column_start":19,"column_end":30},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":16746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":508258,"byte_end":508269,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":16746},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":508473,"byte_end":508484,"line_start":39,"line_end":39,"column_start":29,"column_end":40},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":16746},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/err_into.rs","byte_start":508646,"byte_end":508657,"line_start":49,"line_end":49,"column_start":34,"column_end":45},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":16746},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":509266,"byte_end":509276,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":16810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":509579,"byte_end":509589,"line_start":30,"line_end":30,"column_start":37,"column_end":47},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":16810},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":510545,"byte_end":510555,"line_start":55,"line_end":55,"column_start":31,"column_end":41},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":16810},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/map_err.rs","byte_start":510661,"byte_end":510671,"line_start":61,"line_end":61,"column_start":41,"column_end":51},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":16810},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":511222,"byte_end":511226,"line_start":16,"line_end":16,"column_start":42,"column_end":46},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":16869},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":511293,"byte_end":511297,"line_start":18,"line_end":18,"column_start":49,"column_end":53},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":16869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send.rs","byte_start":511485,"byte_end":511489,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":16869},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":512695,"byte_end":512702,"line_start":23,"line_end":23,"column_start":29,"column_end":36},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7349},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":513141,"byte_end":513148,"line_start":39,"line_end":39,"column_start":24,"column_end":31},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7349},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":513260,"byte_end":513267,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/send_all.rs","byte_start":514043,"byte_end":514050,"line_start":71,"line_end":71,"column_start":36,"column_end":43},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7349},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/unfold.rs","byte_start":516349,"byte_end":516355,"line_start":47,"line_end":47,"column_start":39,"column_end":45},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":16879},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":518272,"byte_end":518276,"line_start":24,"line_end":24,"column_start":42,"column_end":46},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":16937},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":518539,"byte_end":518543,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":16937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":518880,"byte_end":518884,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":16937},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":519255,"byte_end":519259,"line_start":66,"line_end":66,"column_start":37,"column_end":41},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":16937},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":519443,"byte_end":519447,"line_start":77,"line_end":77,"column_start":30,"column_end":34},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":16937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with.rs","byte_start":520122,"byte_end":520126,"line_start":100,"line_end":100,"column_start":42,"column_end":46},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":16937},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":521845,"byte_end":521856,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":17020},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":522229,"byte_end":522240,"line_start":39,"line_end":39,"column_start":26,"column_end":37},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":17020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":523527,"byte_end":523538,"line_start":76,"line_end":76,"column_start":36,"column_end":47},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":17020},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":523761,"byte_end":523772,"line_start":87,"line_end":87,"column_start":41,"column_end":52},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":17020},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/with_flat_map.rs","byte_start":524021,"byte_end":524032,"line_start":98,"line_end":98,"column_start":38,"column_end":49},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":17020},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":525576,"byte_end":525582,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":17107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":526310,"byte_end":526316,"line_start":44,"line_end":44,"column_start":26,"column_end":32},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":17107},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":526646,"byte_end":526652,"line_start":59,"line_end":59,"column_start":31,"column_end":37},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":17107},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/buffer.rs","byte_start":526826,"byte_end":526832,"line_start":68,"line_end":68,"column_start":43,"column_end":49},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":17107},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489137,"byte_end":489138,"line_start":61,"line_end":61,"column_start":41,"column_end":42},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7652},"to":{"krate":0,"index":7654}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/sink/mod.rs","byte_start":489287,"byte_end":489291,"line_start":65,"line_end":65,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":23,"index":17},"to":{"krate":0,"index":7654}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529566,"byte_end":529568,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7782},"to":{"krate":0,"index":7785}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529623,"byte_end":529625,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":7784},"to":{"krate":0,"index":7788}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":529704,"byte_end":529709,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":15},"to":{"krate":0,"index":7785}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/task/spawn.rs","byte_start":532473,"byte_end":532483,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":18},"to":{"krate":0,"index":7788}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":563764,"byte_end":563774,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":17164},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564212,"byte_end":564222,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":17164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":564733,"byte_end":564743,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":17164},"to":{"krate":1,"index":4405}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":565288,"byte_end":565298,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":17164},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":566090,"byte_end":566100,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":17164},"to":{"krate":1,"index":4345}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":566699,"byte_end":566709,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":17164},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567213,"byte_end":567223,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":17164},"to":{"krate":1,"index":4423}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567367,"byte_end":567377,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":17164},"to":{"krate":26,"index":47}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567639,"byte_end":567649,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":17164},"to":{"krate":1,"index":4430}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/allow_std.rs","byte_start":567865,"byte_end":567875,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":17164},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":569682,"byte_end":569691,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":17197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":570834,"byte_end":570843,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":17197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":572404,"byte_end":572413,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":17197},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":573815,"byte_end":573824,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":17197},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":574654,"byte_end":574663,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":17197},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":574741,"byte_end":574750,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":17197},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":575066,"byte_end":575075,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":17197},"to":{"krate":26,"index":47}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_reader.rs","byte_start":577995,"byte_end":578007,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":17250},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":580089,"byte_end":580098,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":17260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":583697,"byte_end":583706,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":17260},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585129,"byte_end":585138,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":17260},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585219,"byte_end":585228,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":17260},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585309,"byte_end":585318,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":17260},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/buf_writer.rs","byte_start":585677,"byte_end":585686,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":17260},"to":{"krate":26,"index":47}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":586740,"byte_end":586750,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":17309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/line_writer.rs","byte_start":587952,"byte_end":587962,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":17309},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":591822,"byte_end":591827,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":17345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":593083,"byte_end":593088,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":17345},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":593418,"byte_end":593423,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":17345},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/chain.rs","byte_start":594492,"byte_end":594497,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":17345},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595608,"byte_end":595613,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":17394},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595666,"byte_end":595671,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":17394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/close.rs","byte_start":595813,"byte_end":595818,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":17394},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy.rs","byte_start":597588,"byte_end":597592,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":17402},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/copy_buf.rs","byte_start":599315,"byte_end":599322,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":17456},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":601155,"byte_end":601161,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":17518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604361,"byte_end":604367,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":17518},"to":{"krate":26,"index":47}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":604654,"byte_end":604660,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":17518},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":605292,"byte_end":605298,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":17518},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606502,"byte_end":606508,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":17518},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606583,"byte_end":606589,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":17518},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606667,"byte_end":606673,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":17518},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/cursor.rs","byte_start":606746,"byte_end":606752,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":17518},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607669,"byte_end":607674,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8448},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":607883,"byte_end":607888,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8448},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/empty.rs","byte_start":608120,"byte_end":608125,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8448},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608623,"byte_end":608630,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":17546},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608685,"byte_end":608692,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":17546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/fill_buf.rs","byte_start":608823,"byte_end":608830,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":17546},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610400,"byte_end":610405,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":17554},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610458,"byte_end":610463,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":17554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/flush.rs","byte_start":610576,"byte_end":610581,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":17554},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/into_sink.rs","byte_start":611603,"byte_end":611611,"line_start":29,"line_end":29,"column_start":40,"column_end":48},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":17569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/into_sink.rs","byte_start":612544,"byte_end":612552,"line_start":57,"line_end":57,"column_start":55,"column_end":63},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":17569},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":614056,"byte_end":614061,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":17618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/lines.rs","byte_start":614224,"byte_end":614229,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":17618},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615224,"byte_end":615228,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":17666},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615280,"byte_end":615284,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":17666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read.rs","byte_start":615449,"byte_end":615453,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":17666},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":616141,"byte_end":616153,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":17675},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":616205,"byte_end":616217,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":17675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_vectored.rs","byte_start":616396,"byte_end":616408,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":17675},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":617103,"byte_end":617112,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":17684},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":617164,"byte_end":617173,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":17684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_exact.rs","byte_start":617338,"byte_end":617347,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":17684},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":618490,"byte_end":618498,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":17693},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":618553,"byte_end":618561,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":17693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_line.rs","byte_start":619530,"byte_end":619538,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":17693},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620293,"byte_end":620302,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":17704},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620354,"byte_end":620363,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":17704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":620608,"byte_end":620613,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8805},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_end.rs","byte_start":622448,"byte_end":622457,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":17704},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":623330,"byte_end":623342,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":17714},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":623394,"byte_end":623406,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":17714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_to_string.rs","byte_start":624335,"byte_end":624347,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":17714},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":625167,"byte_end":625176,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":17725},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":625231,"byte_end":625240,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":17725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/read_until.rs","byte_start":626212,"byte_end":626221,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":17725},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":627379,"byte_end":627385,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":8940},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/repeat.rs","byte_start":628026,"byte_end":628032,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":8940},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628546,"byte_end":628550,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":17736},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628602,"byte_end":628606,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":17736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/seek.rs","byte_start":628763,"byte_end":628767,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":17736},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":629896,"byte_end":629900,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":9016},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/sink.rs","byte_start":630618,"byte_end":630622,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":9016},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":631639,"byte_end":631647,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":17745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632147,"byte_end":632156,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":17751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":632548,"byte_end":632556,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":17745},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":633059,"byte_end":633068,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":17751},"to":{"krate":26,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634083,"byte_end":634095,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":9100},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634259,"byte_end":634271,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":9100},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/split.rs","byte_start":634505,"byte_end":634517,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":9100},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":634990,"byte_end":634994,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":17757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":636911,"byte_end":636915,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":17757},"to":{"krate":26,"index":39}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/take.rs","byte_start":637425,"byte_end":637429,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":17757},"to":{"krate":26,"index":49}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":639272,"byte_end":639278,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":17801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":641348,"byte_end":641354,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":17801},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/window.rs","byte_start":641501,"byte_end":641507,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":17801},"to":{"krate":2,"index":2904}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":642028,"byte_end":642033,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":17808},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":642086,"byte_end":642091,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":17808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write.rs","byte_start":642253,"byte_end":642258,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":17808},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":642942,"byte_end":642955,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":17817},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":643008,"byte_end":643021,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":17817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_vectored.rs","byte_start":643194,"byte_end":643207,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":17817},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":643899,"byte_end":643907,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":17826},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":643960,"byte_end":643968,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":17826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/write_all.rs","byte_start":644130,"byte_end":644138,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":17826},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":539438,"byte_end":539447,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":26,"index":39},"to":{"krate":0,"index":9308}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547695,"byte_end":547696,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":9324},"to":{"krate":0,"index":9308}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":547799,"byte_end":547809,"line_start":398,"line_end":398,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":26,"index":42},"to":{"krate":0,"index":9325}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554151,"byte_end":554152,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":9337},"to":{"krate":0,"index":9325}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":554253,"byte_end":554262,"line_start":592,"line_end":592,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":26,"index":47},"to":{"krate":0,"index":9338}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555039,"byte_end":555040,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":9342},"to":{"krate":0,"index":9338}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":555147,"byte_end":555159,"line_start":620,"line_end":620,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":26,"index":49},"to":{"krate":0,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/io/mod.rs","byte_start":562519,"byte_end":562520,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":9352},"to":{"krate":0,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646466,"byte_end":646471,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":9437},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646804,"byte_end":646809,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":9437},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":646902,"byte_end":646907,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":9437},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647040,"byte_end":647046,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":9451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":647492,"byte_end":647497,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":9437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":648068,"byte_end":648073,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":9437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":651188,"byte_end":651203,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":9474},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":651634,"byte_end":651649,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":9474},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":651766,"byte_end":651781,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":9474},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653010,"byte_end":653025,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":9474},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":653627,"byte_end":653637,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":9493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654649,"byte_end":654659,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":9493},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654865,"byte_end":654875,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":9493},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":654973,"byte_end":654983,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":9493},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655124,"byte_end":655134,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":9493},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":655585,"byte_end":655601,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":9516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":656731,"byte_end":656747,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":9516},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657012,"byte_end":657028,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":9516},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657140,"byte_end":657156,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":9516},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657299,"byte_end":657315,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":9516},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657592,"byte_end":657597,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9437},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657643,"byte_end":657648,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":9437},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657815,"byte_end":657830,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":9474},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":657934,"byte_end":657949,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":9474},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658153,"byte_end":658163,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":9493},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658213,"byte_end":658223,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":9493},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658291,"byte_end":658307,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":9516},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/mutex.rs","byte_start":658378,"byte_end":658394,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":9516},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":660398,"byte_end":660403,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":660440,"byte_end":660445,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":660461,"byte_end":660467,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":17835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666087,"byte_end":666092,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":17841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666214,"byte_end":666219,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":17841},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666547,"byte_end":666559,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":9634},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666723,"byte_end":666735,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":9634},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":666956,"byte_end":666968,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":9634},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":667350,"byte_end":667361,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":17848},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":667524,"byte_end":667535,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":17848},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":667673,"byte_end":667684,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":17848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/lock/bilock.rs","byte_start":668036,"byte_end":668047,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":17848},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":669360,"byte_end":669369,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":17856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":671642,"byte_end":671653,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":17903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672436,"byte_end":672443,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":17914},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672626,"byte_end":672633,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":17914},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":672646,"byte_end":672655,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":17856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":673644,"byte_end":673653,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":17856},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":673892,"byte_end":673901,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":17856},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/abortable.rs","byte_start":674160,"byte_end":674171,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":17903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":674843,"byte_end":674844,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":9741},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":674983,"byte_end":674990,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":9736},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":675079,"byte_end":675080,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":9750},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":675266,"byte_end":675272,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":9746},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":675350,"byte_end":675351,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":9758},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676367,"byte_end":676371,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":9763},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676465,"byte_end":676469,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":9763},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676728,"byte_end":676735,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":17945},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":676958,"byte_end":676965,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":17945},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677156,"byte_end":677163,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":17945},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677468,"byte_end":677481,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":17966},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":677898,"byte_end":677907,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":17982},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":678191,"byte_end":678200,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":17982},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":678462,"byte_end":678471,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":17982},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":678793,"byte_end":678800,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":17997},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679019,"byte_end":679026,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":17997},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679204,"byte_end":679211,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":17997},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679512,"byte_end":679520,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":18012},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679743,"byte_end":679751,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":18012},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":679933,"byte_end":679941,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":18012},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":680251,"byte_end":680262,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":18027},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":680522,"byte_end":680533,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":18027},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":680770,"byte_end":680781,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":18027},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":681148,"byte_end":681160,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":18039},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":681421,"byte_end":681433,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":18039},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":681671,"byte_end":681683,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":18039},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":682302,"byte_end":682316,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":18051},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":682539,"byte_end":682553,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":18051},"to":{"krate":0,"index":9746}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":682754,"byte_end":682768,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":18051},"to":{"krate":0,"index":9754}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":683074,"byte_end":683080,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":9927},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/fns.rs","byte_start":683173,"byte_end":683179,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":9927},"to":{"krate":0,"index":9736}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.19/src/unfold_state.rs","byte_start":683784,"byte_end":683795,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":18084},"to":{"krate":4294967295,"index":4294967295}}]}