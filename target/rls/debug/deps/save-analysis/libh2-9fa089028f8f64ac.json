{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9","program":"/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","h2","--edition=2018","/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9fa089028f8f64ac","-C","extra-filename=-9fa089028f8f64ac","--out-dir","/home/carter/Documents/magma/target/rls/debug/deps","-L","dependency=/home/carter/Documents/magma/target/rls/debug/deps","--extern","bytes=/home/carter/Documents/magma/target/rls/debug/deps/libbytes-0503ea3f6654f70c.rmeta","--extern","fnv=/home/carter/Documents/magma/target/rls/debug/deps/libfnv-a73377529446fa20.rmeta","--extern","futures_core=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_core-47d67b3da90b0dab.rmeta","--extern","futures_sink=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_sink-2f51accff500bcdd.rmeta","--extern","futures_util=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_util-cee492a9bce929a2.rmeta","--extern","http=/home/carter/Documents/magma/target/rls/debug/deps/libhttp-01d6c92d11fa341e.rmeta","--extern","indexmap=/home/carter/Documents/magma/target/rls/debug/deps/libindexmap-61797cebd96318e2.rmeta","--extern","slab=/home/carter/Documents/magma/target/rls/debug/deps/libslab-67525e679724f5f0.rmeta","--extern","tokio=/home/carter/Documents/magma/target/rls/debug/deps/libtokio-b2223b5bfd67a9c5.rmeta","--extern","tokio_util=/home/carter/Documents/magma/target/rls/debug/deps/libtokio_util-66e8ad249d3d4471.rmeta","--extern","tracing=/home/carter/Documents/magma/target/rls/debug/deps/libtracing-c12f5731c7ba55b3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/carter/Documents/magma/target/rls/debug/deps/libh2-9fa089028f8f64ac.rmeta"},"prelude":{"crate_id":{"name":"h2","disambiguator":[1482961337157116535,0]},"crate_root":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src","external_crates":[{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":20,"id":{"name":"futures_core","disambiguator":[6467786051959710749,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":21,"id":{"name":"bytes","disambiguator":[3369492189907758608,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":22,"id":{"name":"serde","disambiguator":[9837994145478425761,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":23,"id":{"name":"serde_derive","disambiguator":[7617876261426685084,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":24,"id":{"name":"tokio","disambiguator":[14502373230496154198,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":25,"id":{"name":"mio","disambiguator":[2328091442476404014,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":26,"id":{"name":"log","disambiguator":[16138615073828880648,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":27,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":28,"id":{"name":"libc","disambiguator":[4939918902751890021,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[17627374544393263653,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":30,"id":{"name":"tokio_macros","disambiguator":[15753602501778055535,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":31,"id":{"name":"memchr","disambiguator":[5547902202154193270,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":32,"id":{"name":"num_cpus","disambiguator":[7421392767721256841,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","num":33,"id":{"name":"tokio_util","disambiguator":[15911388018115882298,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","num":34,"id":{"name":"futures_sink","disambiguator":[8307411743786656110,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","num":35,"id":{"name":"http","disambiguator":[8282796909834839114,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/table.rs","num":36,"id":{"name":"fnv","disambiguator":[5726890394453190873,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","num":37,"id":{"name":"itoa","disambiguator":[2267151899538898389,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","num":38,"id":{"name":"futures_util","disambiguator":[4188540048087790575,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","num":39,"id":{"name":"pin_utils","disambiguator":[3673188743213573932,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","num":40,"id":{"name":"futures_task","disambiguator":[12674779394054587089,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/buffer.rs","num":41,"id":{"name":"slab","disambiguator":[4028794699268519618,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","num":42,"id":{"name":"futures_io","disambiguator":[7547705343272351995,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","num":43,"id":{"name":"indexmap","disambiguator":[1617702545361477212,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","num":44,"id":{"name":"hashbrown","disambiguator":[6732706441073868690,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","num":45,"id":{"name":"tracing","disambiguator":[4374259961214310887,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","num":46,"id":{"name":"tracing_core","disambiguator":[645194319511760397,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","num":47,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}}],"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":0,"byte_end":5989,"line_start":1,"line_end":176,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4782},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4493,"byte_end":4498,"line_start":131,"line_end":131,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10498},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4500,"byte_end":4506,"line_start":131,"line_end":131,"column_start":31,"column_end":37},"alias_span":null,"name":"Reason","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11570},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4532,"byte_end":4543,"line_start":132,"line_end":132,"column_start":24,"column_end":35},"alias_span":null,"name":"FlowControl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3488},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4545,"byte_end":4549,"line_start":132,"line_end":132,"column_start":37,"column_end":41},"alias_span":null,"name":"Ping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3486},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4551,"byte_end":4559,"line_start":132,"line_end":132,"column_start":43,"column_end":51},"alias_span":null,"name":"PingPong","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3490},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4561,"byte_end":4565,"line_start":132,"line_end":132,"column_start":53,"column_end":57},"alias_span":null,"name":"Pong","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3484},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4567,"byte_end":4577,"line_start":132,"line_end":132,"column_start":59,"column_end":69},"alias_span":null,"name":"RecvStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11547},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4579,"byte_end":4589,"line_start":132,"line_end":132,"column_start":71,"column_end":81},"alias_span":null,"name":"SendStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11553},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4591,"byte_end":4599,"line_start":132,"line_end":132,"column_start":83,"column_end":91},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":0,"byte_end":5989,"line_start":1,"line_end":176,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":322},{"krate":0,"index":376},{"krate":0,"index":734},{"krate":0,"index":2216},{"krate":0,"index":2925},{"krate":0,"index":3139},{"krate":0,"index":3160},{"krate":0,"index":3447},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3559},{"krate":0,"index":3562},{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3577},{"krate":0,"index":3580},{"krate":0,"index":3589}],"decl_id":null,"docs":" An asynchronous, HTTP/2 server and client implementation.","sig":null,"attributes":[{"value":"/ An asynchronous, HTTP/2 server and client implementation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":62,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library implements the [HTTP/2] specification. The implementation is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":66,"byte_end":143,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ asynchronous, using [futures] as the basis for the API. The implementation","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":144,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ is also decoupled from TCP or TLS details. The user must handle ALPN and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":223,"byte_end":299,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ HTTP/1.1 upgrades themselves.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":300,"byte_end":333,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":334,"byte_end":337,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":338,"byte_end":359,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":360,"byte_end":363,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Add the following to your `Cargo.toml` file:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":364,"byte_end":412,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":413,"byte_end":416,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":417,"byte_end":428,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":429,"byte_end":447,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ h2 = \"0.3\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":448,"byte_end":462,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":463,"byte_end":470,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":471,"byte_end":474,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Layout","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":475,"byte_end":487,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":488,"byte_end":491,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The crate is split into [`client`] and [`server`] modules. Types that are","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":492,"byte_end":569,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ common to both clients and servers are located at the root of the crate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":570,"byte_end":646,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":647,"byte_end":650,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See module level documentation for more details on how to use `h2`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":651,"byte_end":722,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":723,"byte_end":726,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":727,"byte_end":742,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":743,"byte_end":746,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Both the client and the server require a connection to already be in a state","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":747,"byte_end":827,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ ready to start the HTTP/2 handshake. This library does not provide","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":828,"byte_end":898,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ facilities to do this.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":899,"byte_end":925,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":926,"byte_end":929,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ There are three ways to reach an appropriate state to start the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":930,"byte_end":1004,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1005,"byte_end":1019,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1020,"byte_end":1023,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * Opening an HTTP/1.1 connection and performing an [upgrade].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1024,"byte_end":1089,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ * Opening a connection with TLS and use ALPN to negotiate the protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1090,"byte_end":1165,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ * Open a connection with prior knowledge, i.e. both the client and the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1166,"byte_end":1240,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/   server assume that the connection is immediately ready to start the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1241,"byte_end":1314,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/   HTTP/2 handshake once opened.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1315,"byte_end":1350,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1351,"byte_end":1354,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Once the connection is ready to start the HTTP/2 handshake, it can be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1355,"byte_end":1428,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ passed to [`server::handshake`] or [`client::handshake`]. At this point, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1429,"byte_end":1509,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ library will start the handshake process, which consists of:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1510,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1575,"byte_end":1578,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ * The client sends the connection preface (a predefined sequence of 24","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1579,"byte_end":1653,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ octets).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1654,"byte_end":1666,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ * Both the client and the server sending a SETTINGS frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1667,"byte_end":1729,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1730,"byte_end":1733,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ See the [Starting HTTP/2] in the specification for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1734,"byte_end":1802,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1803,"byte_end":1806,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Flow control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1807,"byte_end":1825,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1826,"byte_end":1829,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [Flow control] is a fundamental feature of HTTP/2. The `h2` library","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1830,"byte_end":1901,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ exposes flow control to the user.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1902,"byte_end":1939,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1940,"byte_end":1943,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ An HTTP/2 client or server may not send unlimited data to the peer. When a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":1944,"byte_end":2022,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ stream is initiated, both the client and the server are provided with an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2023,"byte_end":2099,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ initial window size for that stream.  A window size is the number of bytes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2100,"byte_end":2178,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ the endpoint can send to the peer. At any point in time, the peer may","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2179,"byte_end":2252,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ increase this window size by sending a `WINDOW_UPDATE` frame. Once a client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2253,"byte_end":2332,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ or server has sent data filling the window for a stream, no further data may","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2333,"byte_end":2413,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ be sent on that stream until the peer increases the window.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2414,"byte_end":2477,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2478,"byte_end":2481,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ There is also a **connection level** window governing data sent across all","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2482,"byte_end":2560,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2561,"byte_end":2573,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2574,"byte_end":2577,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Managing flow control for inbound data is done through [`FlowControl`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2578,"byte_end":2653,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Managing flow control for outbound data is done through [`SendStream`]. See","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2654,"byte_end":2733,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ the struct level documentation for those two types for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2734,"byte_end":2806,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2807,"byte_end":2810,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2]: https://http2.github.io/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2811,"byte_end":2849,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ [futures]: https://docs.rs/futures/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2850,"byte_end":2889,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ [`client`]: client/index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2890,"byte_end":2923,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/ [`server`]: server/index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2924,"byte_end":2957,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/ [Flow control]: http://httpwg.org/specs/rfc7540.html#FlowControl","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":2958,"byte_end":3026,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ [`FlowControl`]: struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":3027,"byte_end":3071,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ [`SendStream`]: struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":3072,"byte_end":3114,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ [Starting HTTP/2]: http://httpwg.org/specs/rfc7540.html#starting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":3115,"byte_end":3183,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/ [upgrade]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":3184,"byte_end":3275,"line_start":77,"line_end":77,"column_start":1,"column_end":92}},{"value":"/ [`server::handshake`]: server/fn.handshake.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":3276,"byte_end":3327,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/ [`client::handshake`]: client/fn.handshake.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":3328,"byte_end":3379,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"deny(missing_debug_implementations, missing_docs)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":3433,"byte_end":3486,"line_start":82,"line_end":82,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":11944,"byte_end":11954,"line_start":8,"line_end":8,"column_start":5,"column_end":15},"name":"Connection","qualname":"::codec::error::SendError::Connection","value":"SendError::Connection(Error)","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3602},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":11967,"byte_end":11971,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"User","qualname":"::codec::error::SendError::User","value":"SendError::User(UserError)","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3598},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":11928,"byte_end":11937,"line_start":7,"line_end":7,"column_start":10,"column_end":19},"name":"SendError","qualname":"::codec::error::SendError","value":"pub enum SendError { Connection(Error), User(UserError), }","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3602}],"decl_id":null,"docs":" Errors caused by sending a message\n","sig":null,"attributes":[{"value":"/ Errors caused by sending a message","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":11863,"byte_end":11901,"line_start":5,"line_end":5,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3608},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12124,"byte_end":12140,"line_start":16,"line_end":16,"column_start":5,"column_end":21},"name":"InactiveStreamId","qualname":"::codec::error::UserError::InactiveStreamId","value":"UserError::InactiveStreamId","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" The stream ID is no longer accepting frames.\n","sig":null,"attributes":[{"value":"/ The stream ID is no longer accepting frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12071,"byte_end":12119,"line_start":15,"line_end":15,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3610},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12215,"byte_end":12234,"line_start":19,"line_end":19,"column_start":5,"column_end":24},"name":"UnexpectedFrameType","qualname":"::codec::error::UserError::UnexpectedFrameType","value":"UserError::UnexpectedFrameType","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" The stream is not currently expecting a frame of this type.\n","sig":null,"attributes":[{"value":"/ The stream is not currently expecting a frame of this type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12147,"byte_end":12210,"line_start":18,"line_end":18,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3612},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12277,"byte_end":12290,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"PayloadTooBig","qualname":"::codec::error::UserError::PayloadTooBig","value":"UserError::PayloadTooBig","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" The payload size is too big\n","sig":null,"attributes":[{"value":"/ The payload size is too big","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12241,"byte_end":12272,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3614},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12371,"byte_end":12379,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Rejected","qualname":"::codec::error::UserError::Rejected","value":"UserError::Rejected","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" The application attempted to initiate too many streams to remote.\n","sig":null,"attributes":[{"value":"/ The application attempted to initiate too many streams to remote.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12297,"byte_end":12366,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3616},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12449,"byte_end":12470,"line_start":28,"line_end":28,"column_start":5,"column_end":26},"name":"ReleaseCapacityTooBig","qualname":"::codec::error::UserError::ReleaseCapacityTooBig","value":"UserError::ReleaseCapacityTooBig","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" The released capacity is larger than claimed capacity.\n","sig":null,"attributes":[{"value":"/ The released capacity is larger than claimed capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12386,"byte_end":12444,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3618},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12564,"byte_end":12582,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"name":"OverflowedStreamId","qualname":"::codec::error::UserError::OverflowedStreamId","value":"UserError::OverflowedStreamId","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" The stream ID space is overflowed.","sig":null,"attributes":[{"value":"/ The stream ID space is overflowed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12477,"byte_end":12515,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12520,"byte_end":12523,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ A new connection is needed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12528,"byte_end":12559,"line_start":32,"line_end":32,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3620},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12651,"byte_end":12667,"line_start":36,"line_end":36,"column_start":5,"column_end":21},"name":"MalformedHeaders","qualname":"::codec::error::UserError::MalformedHeaders","value":"UserError::MalformedHeaders","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Illegal headers, such as connection-specific headers.\n","sig":null,"attributes":[{"value":"/ Illegal headers, such as connection-specific headers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12589,"byte_end":12646,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3622},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12719,"byte_end":12747,"line_start":39,"line_end":39,"column_start":5,"column_end":33},"name":"MissingUriSchemeAndAuthority","qualname":"::codec::error::UserError::MissingUriSchemeAndAuthority","value":"UserError::MissingUriSchemeAndAuthority","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Request submitted with relative URI.\n","sig":null,"attributes":[{"value":"/ Request submitted with relative URI.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12674,"byte_end":12714,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3624},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12832,"byte_end":12858,"line_start":42,"line_end":42,"column_start":5,"column_end":31},"name":"PollResetAfterSendResponse","qualname":"::codec::error::UserError::PollResetAfterSendResponse","value":"UserError::PollResetAfterSendResponse","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Calls `SendResponse::poll_reset` after having called `send_response`.\n","sig":null,"attributes":[{"value":"/ Calls `SendResponse::poll_reset` after having called `send_response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12754,"byte_end":12827,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3626},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12926,"byte_end":12946,"line_start":45,"line_end":45,"column_start":5,"column_end":25},"name":"SendPingWhilePending","qualname":"::codec::error::UserError::SendPingWhilePending","value":"UserError::SendPingWhilePending","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Calls `PingPong::send_ping` before receiving a pong.\n","sig":null,"attributes":[{"value":"/ Calls `PingPong::send_ping` before receiving a pong.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12865,"byte_end":12921,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3628},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13025,"byte_end":13049,"line_start":48,"line_end":48,"column_start":5,"column_end":29},"name":"SendSettingsWhilePending","qualname":"::codec::error::UserError::SendSettingsWhilePending","value":"UserError::SendSettingsWhilePending","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Tries to update local SETTINGS while ACK has not been received.\n","sig":null,"attributes":[{"value":"/ Tries to update local SETTINGS while ACK has not been received.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12953,"byte_end":13020,"line_start":47,"line_end":47,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3630},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13128,"byte_end":13150,"line_start":51,"line_end":51,"column_start":5,"column_end":27},"name":"PeerDisabledServerPush","qualname":"::codec::error::UserError::PeerDisabledServerPush","value":"UserError::PeerDisabledServerPush","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Tries to send push promise to peer who has disabled server push\n","sig":null,"attributes":[{"value":"/ Tries to send push promise to peer who has disabled server push","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13056,"byte_end":13123,"line_start":50,"line_end":50,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":3607},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":12055,"byte_end":12064,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"UserError","qualname":"::codec::error::UserError","value":"pub enum UserError {\n    InactiveStreamId,\n    UnexpectedFrameType,\n    PayloadTooBig,\n    Rejected,\n    ReleaseCapacityTooBig,\n    OverflowedStreamId,\n    MalformedHeaders,\n    MissingUriSchemeAndAuthority,\n    PollResetAfterSendResponse,\n    SendPingWhilePending,\n    SendSettingsWhilePending,\n    PeerDisabledServerPush,\n}","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3624},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3630}],"decl_id":null,"docs":" Errors caused by users of the library\n","sig":null,"attributes":[{"value":"/ Errors caused by users of the library","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":11987,"byte_end":12028,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4782},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41407,"byte_end":41412,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":4783}],"decl_id":null,"docs":" Represents HTTP/2 operation errors.","sig":null,"attributes":[{"value":"/ Represents HTTP/2 operation errors.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":40972,"byte_end":41011,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41012,"byte_end":41015,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `Error` covers error cases raised by protocol errors caused by the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41016,"byte_end":41086,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ peer, I/O (transport) errors, and errors caused by the user of the library.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41087,"byte_end":41166,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41167,"byte_end":41170,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If the error was caused by the remote peer, then it will contain a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41171,"byte_end":41241,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ [`Reason`] which can be obtained with the [`reason`] function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41242,"byte_end":41308,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41309,"byte_end":41312,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Reason`]: struct.Reason.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41313,"byte_end":41347,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ [`reason`]: #method.reason","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41348,"byte_end":41378,"line_start":19,"line_end":19,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42177,"byte_end":42183,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"reason","qualname":"<Error>::reason","value":"pub fn reason(&Self) -> Option<Reason>","parent":null,"children":[],"decl_id":null,"docs":" If the error was caused by the remote peer, the error reason.","sig":null,"attributes":[{"value":"/ If the error was caused by the remote peer, the error reason.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41957,"byte_end":42022,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42027,"byte_end":42030,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This is either an error received by the peer or caused by an invalid","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42035,"byte_end":42107,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ action taken by the peer (i.e. a protocol error).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42112,"byte_end":42165,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42480,"byte_end":42485,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"is_io","qualname":"<Error>::is_io","value":"pub fn is_io(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the true if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the true if the error is an io::Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42419,"byte_end":42468,"line_start":60,"line_end":60,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42669,"byte_end":42675,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"get_io","qualname":"<Error>::get_io","value":"pub fn get_io(&Self) -> Option<&io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the error if the error is an io::Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42607,"byte_end":42657,"line_start":68,"line_end":68,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42879,"byte_end":42886,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"into_io","qualname":"<Error>::into_io","value":"pub fn into_io(Self) -> Option<io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the error if the error is an io::Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":42817,"byte_end":42867,"line_start":76,"line_end":76,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5794},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265714,"byte_end":265719,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Reset","qualname":"::proto::error::Error::Reset","value":"Error::Reset(StreamId, Reason, Initiator)","parent":{"krate":0,"index":5793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5799},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265754,"byte_end":265760,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"GoAway","qualname":"::proto::error::Error::GoAway","value":"Error::GoAway(Bytes, Reason, Initiator)","parent":{"krate":0,"index":5793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5804},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265792,"byte_end":265794,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"Io","qualname":"::proto::error::Error::Io","value":"Error::Io(io::ErrorKind, Option<String>)","parent":{"krate":0,"index":5793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5793},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265702,"byte_end":265707,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::proto::error::Error","value":"pub enum Error {\n    Reset(StreamId, Reason, Initiator),\n    GoAway(Bytes, Reason, Initiator),\n    Io(io::ErrorKind, Option<String>),\n}","parent":null,"children":[{"krate":0,"index":5794},{"krate":0,"index":5799},{"krate":0,"index":5804}],"decl_id":null,"docs":" Either an H2 reason  or an I/O error\n","sig":null,"attributes":[{"value":"/ Either an H2 reason  or an I/O error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265628,"byte_end":265668,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5813},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265896,"byte_end":265900,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"User","qualname":"::proto::error::Initiator::User","value":"Initiator::User","parent":{"krate":0,"index":5812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5815},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265906,"byte_end":265913,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Library","qualname":"::proto::error::Initiator::Library","value":"Initiator::Library","parent":{"krate":0,"index":5812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5817},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265919,"byte_end":265925,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Remote","qualname":"::proto::error::Initiator::Remote","value":"Initiator::Remote","parent":{"krate":0,"index":5812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5812},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265880,"byte_end":265889,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"Initiator","qualname":"::proto::error::Initiator","value":"pub enum Initiator { User, Library, Remote, }","parent":null,"children":[{"krate":0,"index":5813},{"krate":0,"index":5815},{"krate":0,"index":5817}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":978},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/peer.rs","byte_start":272923,"byte_end":272927,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Poll","qualname":"::proto::peer::Peer::Poll","value":"type Poll: fmt::Debug;","parent":{"krate":0,"index":977},"children":[],"decl_id":null,"docs":" Message type polled from the transport\n","sig":null,"attributes":[{"value":"/ Message type polled from the transport","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/peer.rs","byte_start":272871,"byte_end":272913,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6377},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305167,"byte_end":305173,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"Window","qualname":"::proto::streams::flow_control::Window","value":"","parent":null,"children":[],"decl_id":null,"docs":" The current capacity of a flow-controlled Window.","sig":null,"attributes":[{"value":"/ The current capacity of a flow-controlled Window.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":304745,"byte_end":304798,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":304799,"byte_end":304802,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This number can go negative when either side has used a certain amount","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":304803,"byte_end":304877,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ of capacity when the other side advertises a reduction in size.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":304878,"byte_end":304945,"line_start":187,"line_end":187,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":304946,"byte_end":304949,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This type tries to centralize the knowledge of addition and subtraction","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":304950,"byte_end":305025,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"/ to this capacity, instead of having integer casts throughout the source.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305026,"byte_end":305102,"line_start":190,"line_end":190,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305206,"byte_end":305213,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"as_size","qualname":"<Window>::as_size","value":"pub fn as_size(&Self) -> WindowSize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305353,"byte_end":305365,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"checked_size","qualname":"<Window>::checked_size","value":"pub fn checked_size(&Self) -> WindowSize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9714},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":504415,"byte_end":504426,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"HeadersFlag","qualname":"::frame::headers::HeadersFlag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9739},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":504843,"byte_end":504858,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"PushPromiseFlag","qualname":"::frame::headers::PushPromiseFlag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522500,"byte_end":522505,"line_start":717,"line_end":717,"column_start":12,"column_end":17},"name":"empty","qualname":"<HeadersFlag>::empty","value":"pub fn empty() -> HeadersFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522566,"byte_end":522570,"line_start":721,"line_end":721,"column_start":12,"column_end":16},"name":"load","qualname":"<HeadersFlag>::load","value":"pub fn load(u8) -> HeadersFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522648,"byte_end":522661,"line_start":725,"line_end":725,"column_start":12,"column_end":25},"name":"is_end_stream","qualname":"<HeadersFlag>::is_end_stream","value":"pub fn is_end_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522739,"byte_end":522753,"line_start":729,"line_end":729,"column_start":12,"column_end":26},"name":"set_end_stream","qualname":"<HeadersFlag>::set_end_stream","value":"pub fn set_end_stream(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522815,"byte_end":522829,"line_start":733,"line_end":733,"column_start":12,"column_end":26},"name":"is_end_headers","qualname":"<HeadersFlag>::is_end_headers","value":"pub fn is_end_headers(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522909,"byte_end":522924,"line_start":737,"line_end":737,"column_start":12,"column_end":27},"name":"set_end_headers","qualname":"<HeadersFlag>::set_end_headers","value":"pub fn set_end_headers(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522987,"byte_end":522996,"line_start":741,"line_end":741,"column_start":12,"column_end":21},"name":"is_padded","qualname":"<HeadersFlag>::is_padded","value":"pub fn is_padded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523066,"byte_end":523077,"line_start":745,"line_end":745,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<HeadersFlag>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523851,"byte_end":523856,"line_start":777,"line_end":777,"column_start":12,"column_end":17},"name":"empty","qualname":"<PushPromiseFlag>::empty","value":"pub fn empty() -> PushPromiseFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523925,"byte_end":523929,"line_start":781,"line_end":781,"column_start":12,"column_end":16},"name":"load","qualname":"<PushPromiseFlag>::load","value":"pub fn load(u8) -> PushPromiseFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524015,"byte_end":524029,"line_start":785,"line_end":785,"column_start":12,"column_end":26},"name":"is_end_headers","qualname":"<PushPromiseFlag>::is_end_headers","value":"pub fn is_end_headers(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524109,"byte_end":524124,"line_start":789,"line_end":789,"column_start":12,"column_end":27},"name":"set_end_headers","qualname":"<PushPromiseFlag>::set_end_headers","value":"pub fn set_end_headers(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524187,"byte_end":524196,"line_start":793,"line_end":793,"column_start":12,"column_end":21},"name":"is_padded","qualname":"<PushPromiseFlag>::is_padded","value":"pub fn is_padded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10498},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537872,"byte_end":537878,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Reason","qualname":"::frame::reason::Reason","value":"","parent":null,"children":[],"decl_id":null,"docs":" HTTP/2 error codes.","sig":null,"attributes":[{"value":"/ HTTP/2 error codes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537170,"byte_end":537193,"line_start":3,"line_end":3,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537194,"byte_end":537197,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Error codes are used in `RST_STREAM` and `GOAWAY` frames to convey the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537198,"byte_end":537272,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ reasons for the stream or connection error. For example,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537273,"byte_end":537333,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ [`SendStream::send_reset`] takes a `Reason` argument. Also, the `Error` type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537334,"byte_end":537414,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ may contain a `Reason`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537415,"byte_end":537442,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537443,"byte_end":537446,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Error codes share a common code space. Some error codes apply only to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537447,"byte_end":537520,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ streams, others apply only to connections, and others may apply to either.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537521,"byte_end":537599,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ See [RFC 7540] for more information.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537600,"byte_end":537640,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537641,"byte_end":537644,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [Error Codes in the spec][spec].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537645,"byte_end":537685,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537686,"byte_end":537689,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [spec]: http://httpwg.org/specs/rfc7540.html#ErrorCodes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537690,"byte_end":537749,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ [`SendStream::send_reset`]: struct.SendStream.html#method.send_reset","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537750,"byte_end":537822,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":2608},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538093,"byte_end":538101,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"NO_ERROR","qualname":"::frame::reason::Reason::NO_ERROR","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The associated condition is not a result of an error.","sig":null,"attributes":[{"value":"/ The associated condition is not a result of an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537904,"byte_end":537961,"line_start":22,"line_end":22,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537966,"byte_end":537969,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For example, a GOAWAY might include this code to indicate graceful","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537974,"byte_end":538044,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ shutdown of a connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538049,"byte_end":538078,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":2609},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538285,"byte_end":538299,"line_start":30,"line_end":30,"column_start":15,"column_end":29},"name":"PROTOCOL_ERROR","qualname":"::frame::reason::Reason::PROTOCOL_ERROR","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint detected an unspecific protocol error.","sig":null,"attributes":[{"value":"/ The endpoint detected an unspecific protocol error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538127,"byte_end":538182,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538187,"byte_end":538190,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This error is for use when a more specific error code is not available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538195,"byte_end":538270,"line_start":29,"line_end":29,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":2610},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538398,"byte_end":538412,"line_start":32,"line_end":32,"column_start":15,"column_end":29},"name":"INTERNAL_ERROR","qualname":"::frame::reason::Reason::INTERNAL_ERROR","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint encountered an unexpected internal error.\n","sig":null,"attributes":[{"value":"/ The endpoint encountered an unexpected internal error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538325,"byte_end":538383,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":2611},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538528,"byte_end":538546,"line_start":34,"line_end":34,"column_start":15,"column_end":33},"name":"FLOW_CONTROL_ERROR","qualname":"::frame::reason::Reason::FLOW_CONTROL_ERROR","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint detected that its peer violated the flow-control protocol.\n","sig":null,"attributes":[{"value":"/ The endpoint detected that its peer violated the flow-control protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538438,"byte_end":538513,"line_start":33,"line_end":33,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":2612},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538684,"byte_end":538700,"line_start":37,"line_end":37,"column_start":15,"column_end":31},"name":"SETTINGS_TIMEOUT","qualname":"::frame::reason::Reason::SETTINGS_TIMEOUT","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint sent a SETTINGS frame but did not receive a response in\n a timely manner.\n","sig":null,"attributes":[{"value":"/ The endpoint sent a SETTINGS frame but did not receive a response in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538572,"byte_end":538644,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ a timely manner.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538649,"byte_end":538669,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":2613},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538806,"byte_end":538819,"line_start":39,"line_end":39,"column_start":15,"column_end":28},"name":"STREAM_CLOSED","qualname":"::frame::reason::Reason::STREAM_CLOSED","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint received a frame after a stream was half-closed.\n","sig":null,"attributes":[{"value":"/ The endpoint received a frame after a stream was half-closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538726,"byte_end":538791,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":2614},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538915,"byte_end":538931,"line_start":41,"line_end":41,"column_start":15,"column_end":31},"name":"FRAME_SIZE_ERROR","qualname":"::frame::reason::Reason::FRAME_SIZE_ERROR","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint received a frame with an invalid size.\n","sig":null,"attributes":[{"value":"/ The endpoint received a frame with an invalid size.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538845,"byte_end":538900,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":2615},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539063,"byte_end":539077,"line_start":44,"line_end":44,"column_start":15,"column_end":29},"name":"REFUSED_STREAM","qualname":"::frame::reason::Reason::REFUSED_STREAM","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint refused the stream prior to performing any application\n processing.\n","sig":null,"attributes":[{"value":"/ The endpoint refused the stream prior to performing any application","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":538957,"byte_end":539028,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ processing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539033,"byte_end":539048,"line_start":43,"line_end":43,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":2616},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539191,"byte_end":539197,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"name":"CANCEL","qualname":"::frame::reason::Reason::CANCEL","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" Used by the endpoint to indicate that the stream is no longer needed.\n","sig":null,"attributes":[{"value":"/ Used by the endpoint to indicate that the stream is no longer needed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539103,"byte_end":539176,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":2617},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539335,"byte_end":539352,"line_start":49,"line_end":49,"column_start":15,"column_end":32},"name":"COMPRESSION_ERROR","qualname":"::frame::reason::Reason::COMPRESSION_ERROR","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint is unable to maintain the header compression context for\n the connection.\n","sig":null,"attributes":[{"value":"/ The endpoint is unable to maintain the header compression context for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539223,"byte_end":539296,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539301,"byte_end":539320,"line_start":48,"line_end":48,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":2618},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539496,"byte_end":539509,"line_start":52,"line_end":52,"column_start":15,"column_end":28},"name":"CONNECT_ERROR","qualname":"::frame::reason::Reason::CONNECT_ERROR","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The connection established in response to a CONNECT request was reset\n or abnormally closed.\n","sig":null,"attributes":[{"value":"/ The connection established in response to a CONNECT request was reset","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539378,"byte_end":539451,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ or abnormally closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539456,"byte_end":539481,"line_start":51,"line_end":51,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":2619},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539664,"byte_end":539681,"line_start":55,"line_end":55,"column_start":15,"column_end":32},"name":"ENHANCE_YOUR_CALM","qualname":"::frame::reason::Reason::ENHANCE_YOUR_CALM","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint detected that its peer is exhibiting a behavior that might\n be generating excessive load.\n","sig":null,"attributes":[{"value":"/ The endpoint detected that its peer is exhibiting a behavior that might","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539536,"byte_end":539611,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ be generating excessive load.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539616,"byte_end":539649,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2620},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539822,"byte_end":539841,"line_start":58,"line_end":58,"column_start":15,"column_end":34},"name":"INADEQUATE_SECURITY","qualname":"::frame::reason::Reason::INADEQUATE_SECURITY","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The underlying transport has properties that do not meet minimum\n security requirements.\n","sig":null,"attributes":[{"value":"/ The underlying transport has properties that do not meet minimum","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539708,"byte_end":539776,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ security requirements.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539781,"byte_end":539807,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":2621},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539949,"byte_end":539966,"line_start":60,"line_end":60,"column_start":15,"column_end":32},"name":"HTTP_1_1_REQUIRED","qualname":"::frame::reason::Reason::HTTP_1_1_REQUIRED","value":"Reason","parent":{"krate":0,"index":2607},"children":[],"decl_id":null,"docs":" The endpoint requires that HTTP/1.1 be used instead of HTTP/2.\n","sig":null,"attributes":[{"value":"/ The endpoint requires that HTTP/1.1 be used instead of HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539868,"byte_end":539934,"line_start":59,"line_end":59,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":540053,"byte_end":540064,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"description","qualname":"<Reason>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get a string description of the error code.\n","sig":null,"attributes":[{"value":"/ Get a string description of the error code.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":539994,"byte_end":540041,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10596},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":544528,"byte_end":544541,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"SettingsFlags","qualname":"::frame::settings::SettingsFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554326,"byte_end":554331,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"empty","qualname":"<SettingsFlags>::empty","value":"pub fn empty() -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554396,"byte_end":554400,"line_start":366,"line_end":366,"column_start":12,"column_end":16},"name":"load","qualname":"<SettingsFlags>::load","value":"pub fn load(u8) -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554482,"byte_end":554485,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"ack","qualname":"<SettingsFlags>::ack","value":"pub fn ack() -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554552,"byte_end":554558,"line_start":374,"line_end":374,"column_start":12,"column_end":18},"name":"is_ack","qualname":"<SettingsFlags>::is_ack","value":"pub fn is_ack(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10689},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555532,"byte_end":555540,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::frame::stream_id::StreamId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream identifier, as described in [Section 5.1.1] of RFC 7540.","sig":null,"attributes":[{"value":"/ A stream identifier, as described in [Section 5.1.1] of RFC 7540.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":554931,"byte_end":555000,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555001,"byte_end":555004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Streams are identified with an unsigned 31-bit integer. Streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555005,"byte_end":555072,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ initiated by a client MUST use odd-numbered stream identifiers; those","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555073,"byte_end":555146,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ initiated by the server MUST use even-numbered stream identifiers.  A","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555147,"byte_end":555220,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ stream identifier of zero (0x0) is used for connection control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555221,"byte_end":555287,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ messages; the stream identifier of zero cannot be used to establish a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555288,"byte_end":555361,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ new stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555362,"byte_end":555377,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555378,"byte_end":555381,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [Section 5.1.1]: https://tools.ietf.org/html/rfc7540#section-5.1.1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555382,"byte_end":555452,"line_start":12,"line_end":12,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":10711},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555589,"byte_end":555605,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"StreamIdOverflow","qualname":"::frame::stream_id::StreamIdOverflow","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2763},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555697,"byte_end":555701,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::frame::stream_id::StreamId::ZERO","value":"StreamId","parent":{"krate":0,"index":2762},"children":[],"decl_id":null,"docs":" Stream ID 0.\n","sig":null,"attributes":[{"value":"/ Stream ID 0.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555666,"byte_end":555682,"line_start":22,"line_end":22,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":2764},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555781,"byte_end":555784,"line_start":26,"line_end":26,"column_start":15,"column_end":18},"name":"MAX","qualname":"::frame::stream_id::StreamId::MAX","value":"StreamId","parent":{"krate":0,"index":2762},"children":[],"decl_id":null,"docs":" The maximum allowed stream ID.\n","sig":null,"attributes":[{"value":"/ The maximum allowed stream ID.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555732,"byte_end":555766,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555876,"byte_end":555881,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"parse","qualname":"<StreamId>::parse","value":"pub fn parse(&[u8]) -> (StreamId, bool)","parent":null,"children":[],"decl_id":null,"docs":" Parse the stream ID\n","sig":null,"attributes":[{"value":"/ Parse the stream ID","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555827,"byte_end":555850,"line_start":28,"line_end":28,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555855,"byte_end":555864,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556392,"byte_end":556411,"line_start":43,"line_end":43,"column_start":12,"column_end":31},"name":"is_client_initiated","qualname":"<StreamId>::is_client_initiated","value":"pub fn is_client_initiated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID corresponds to a stream that\n was initiated by the client.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID corresponds to a stream that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556280,"byte_end":556343,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/ was initiated by the client.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556348,"byte_end":556380,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556608,"byte_end":556627,"line_start":50,"line_end":50,"column_start":12,"column_end":31},"name":"is_server_initiated","qualname":"<StreamId>::is_server_initiated","value":"pub fn is_server_initiated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID corresponds to a stream that\n was initiated by the server.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID corresponds to a stream that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556496,"byte_end":556559,"line_start":48,"line_end":48,"column_start":5,"column_end":68}},{"value":"/ was initiated by the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556564,"byte_end":556596,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556779,"byte_end":556783,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"zero","qualname":"<StreamId>::zero","value":"pub fn zero() -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Return a new `StreamId` for stream 0.\n","sig":null,"attributes":[{"value":"/ Return a new `StreamId` for stream 0.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556712,"byte_end":556753,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556758,"byte_end":556767,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556889,"byte_end":556896,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<StreamId>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID is zero.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID is zero.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556834,"byte_end":556877,"line_start":61,"line_end":61,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":557120,"byte_end":557127,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"next_id","qualname":"<StreamId>::next_id","value":"pub fn next_id(&Self) -> Result<StreamId, StreamIdOverflow>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next stream ID initiated by the same peer as this stream\n ID, or an error if incrementing this stream ID would overflow the\n maximum.\n","sig":null,"attributes":[{"value":"/ Returns the next stream ID initiated by the same peer as this stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":556945,"byte_end":557017,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ ID, or an error if incrementing this stream ID would overflow the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":557022,"byte_end":557091,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ maximum.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":557096,"byte_end":557108,"line_start":68,"line_end":68,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":2925},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":10832},{"krate":0,"index":10835},{"krate":0,"index":3040},{"krate":0,"index":10838},{"krate":0,"index":10841},{"krate":0,"index":10843},{"krate":0,"index":10845},{"krate":0,"index":10847},{"krate":0,"index":10850},{"krate":0,"index":10852},{"krate":0,"index":10854},{"krate":0,"index":10856},{"krate":0,"index":10864},{"krate":0,"index":10866},{"krate":0,"index":10868},{"krate":0,"index":10870},{"krate":0,"index":3044},{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":3061},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3083},{"krate":0,"index":3087},{"krate":0,"index":3098},{"krate":0,"index":3103},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3113},{"krate":0,"index":3119},{"krate":0,"index":3123},{"krate":0,"index":3126},{"krate":0,"index":3128},{"krate":0,"index":3133}],"decl_id":null,"docs":" Client implementation of the HTTP/2 protocol.","sig":null,"attributes":[{"value":"/ Client implementation of the HTTP/2 protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561565,"byte_end":561614,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561615,"byte_end":561618,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561619,"byte_end":561640,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561641,"byte_end":561644,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Running an HTTP/2 client requires the caller to establish the underlying","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561645,"byte_end":561721,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ connection as well as get the connection to a state that is ready to begin","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561722,"byte_end":561800,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ the HTTP/2 handshake. See [here](../index.html#handshake) for more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561801,"byte_end":561871,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561872,"byte_end":561884,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561885,"byte_end":561888,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This could be as basic as using Tokio's [`TcpStream`] to connect to a remote","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561889,"byte_end":561969,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ host, but usually it means using either ALPN or HTTP/1.1 protocol upgrades.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":561970,"byte_end":562049,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562050,"byte_end":562053,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Once a connection is obtained, it is passed to [`handshake`], which will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562054,"byte_end":562130,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ begin the [HTTP/2 handshake]. This returns a future that completes once","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562131,"byte_end":562206,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ the handshake process is performed and HTTP/2 streams may be initialized.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562207,"byte_end":562284,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562285,"byte_end":562288,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`handshake`] uses default configuration values. There are a number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562289,"byte_end":562363,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ settings that can be changed by using [`Builder`] instead.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562364,"byte_end":562426,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562427,"byte_end":562430,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Once the handshake future completes, the caller is provided with a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562431,"byte_end":562501,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ [`Connection`] instance and a [`SendRequest`] instance. The [`Connection`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562502,"byte_end":562580,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ instance is used to drive the connection (see [Managing the connection]).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562581,"byte_end":562658,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ The [`SendRequest`] instance is used to initialize new streams (see [Making","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562659,"byte_end":562738,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ requests]).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562739,"byte_end":562754,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562755,"byte_end":562758,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Making requests","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562759,"byte_end":562780,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562781,"byte_end":562784,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Requests are made using the [`SendRequest`] handle provided by the handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562785,"byte_end":562865,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ future. Once a request is submitted, an HTTP/2 stream is initialized and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562866,"byte_end":562942,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ the request is sent to the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562943,"byte_end":562981,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562982,"byte_end":562985,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A request body and request trailers are sent using [`SendRequest`] and the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":562986,"byte_end":563064,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ server's response is returned once the [`ResponseFuture`] future completes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563065,"byte_end":563144,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ Both the [`SendStream`] and [`ResponseFuture`] instances are returned by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563145,"byte_end":563221,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ [`SendRequest::send_request`] and are tied to the HTTP/2 stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563222,"byte_end":563289,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ initialized by the sent request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563290,"byte_end":563326,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563327,"byte_end":563330,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The [`SendRequest::poll_ready`] function returns `Ready` when a new HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563331,"byte_end":563409,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ stream can be created, i.e. as long as the current number of active streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563410,"byte_end":563489,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ is below [`MAX_CONCURRENT_STREAMS`]. If a new stream cannot be created, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563490,"byte_end":563569,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ caller will be notified once an existing stream closes, freeing capacity for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563570,"byte_end":563650,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ the caller.  The caller should use [`SendRequest::poll_ready`] to check for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563651,"byte_end":563730,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ capacity before sending a request to the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563731,"byte_end":563783,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563784,"byte_end":563787,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] enforces the [`MAX_CONCURRENT_STREAMS`] setting. The user","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563788,"byte_end":563865,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ must not send a request if `poll_ready` does not return `Ready`. Attempting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563866,"byte_end":563945,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ to do so will result in an [`Error`] being returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":563946,"byte_end":564002,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564003,"byte_end":564006,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Managing the connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564007,"byte_end":564036,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564037,"byte_end":564040,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to manage connection state. The caller","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564041,"byte_end":564119,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ is required to call [`Connection::poll`] in order to advance state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564120,"byte_end":564191,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ [`SendRequest::send_request`] and other functions have no effect unless","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564192,"byte_end":564267,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ [`Connection::poll`] is called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564268,"byte_end":564303,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564304,"byte_end":564307,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance should only be dropped once [`Connection::poll`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564308,"byte_end":564388,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ returns `Ready`. At this point, the underlying socket has been closed and no","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564389,"byte_end":564469,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ further work needs to be done.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564470,"byte_end":564504,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564505,"byte_end":564508,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The easiest way to ensure that the [`Connection`] instance gets polled is to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564509,"byte_end":564589,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ submit the [`Connection`] instance to an [executor]. The executor will then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564590,"byte_end":564669,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ manage polling the connection until the connection is complete.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564670,"byte_end":564737,"line_start":62,"line_end":62,"column_start":1,"column_end":68}},{"value":"/ Alternatively, the caller can call `poll` manually.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564738,"byte_end":564793,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564794,"byte_end":564797,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564798,"byte_end":564811,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564812,"byte_end":564815,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust, no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564816,"byte_end":564835,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564836,"byte_end":564839,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ use h2::client;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564840,"byte_end":564859,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564860,"byte_end":564863,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ use http::{Request, Method};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564864,"byte_end":564896,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564897,"byte_end":564923,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564924,"byte_end":564954,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564955,"byte_end":564958,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564959,"byte_end":564977,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ pub async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":564978,"byte_end":565033,"line_start":76,"line_end":76,"column_start":1,"column_end":56}},{"value":"/     // Establish TCP connection to the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565034,"byte_end":565084,"line_start":77,"line_end":77,"column_start":1,"column_end":51}},{"value":"/     let tcp = TcpStream::connect(\"127.0.0.1:5928\").await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565085,"byte_end":565147,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     let (h2, connection) = client::handshake(tcp).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565148,"byte_end":565209,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565210,"byte_end":565243,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/         connection.await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565244,"byte_end":565282,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565283,"byte_end":565294,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565295,"byte_end":565298,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     let mut h2 = h2.ready().await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565299,"byte_end":565338,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/     // Prepare the HTTP request to send to the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565339,"byte_end":565397,"line_start":85,"line_end":85,"column_start":1,"column_end":59}},{"value":"/     let request = Request::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565398,"byte_end":565438,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/                     .method(Method::GET)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565439,"byte_end":565483,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                     .uri(\"https://www.example.com/\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565484,"byte_end":565540,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/                     .body(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565541,"byte_end":565574,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/                     .unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565575,"byte_end":565609,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565610,"byte_end":565613,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     // Send the request. The second tuple item allows the caller","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565614,"byte_end":565682,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/     // to stream a request body.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565683,"byte_end":565719,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/     let (response, _) = h2.send_request(request, true).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565720,"byte_end":565788,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565789,"byte_end":565792,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     let (head, mut body) = response.await?.into_parts();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565793,"byte_end":565853,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565854,"byte_end":565857,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     println!(\"Received response: {:?}\", head);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565858,"byte_end":565908,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565909,"byte_end":565912,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     // The `flow_control` handle allows the caller to manage","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565913,"byte_end":565977,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/     // flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":565978,"byte_end":566002,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/     //","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566003,"byte_end":566013,"line_start":102,"line_end":102,"column_start":1,"column_end":11}},{"value":"/     // Whenever data is received, the caller is responsible for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566014,"byte_end":566081,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/     // releasing capacity back to the server once it has freed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566082,"byte_end":566148,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/     // the data from memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566149,"byte_end":566181,"line_start":105,"line_end":105,"column_start":1,"column_end":33}},{"value":"/     let mut flow_control = body.flow_control().clone();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566182,"byte_end":566241,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566242,"byte_end":566245,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     while let Some(chunk) = body.data().await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566246,"byte_end":566297,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/         let chunk = chunk?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566298,"byte_end":566329,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/         println!(\"RX: {:?}\", chunk);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566330,"byte_end":566370,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566371,"byte_end":566374,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Let the server send more data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566375,"byte_end":566420,"line_start":112,"line_end":112,"column_start":1,"column_end":46}},{"value":"/         let _ = flow_control.release_capacity(chunk.len());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566421,"byte_end":566484,"line_start":113,"line_end":113,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566485,"byte_end":566494,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566495,"byte_end":566498,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566499,"byte_end":566513,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566514,"byte_end":566519,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566520,"byte_end":566527,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566528,"byte_end":566531,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566532,"byte_end":566618,"line_start":120,"line_end":120,"column_start":1,"column_end":87}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566619,"byte_end":566655,"line_start":121,"line_end":121,"column_start":1,"column_end":37}},{"value":"/ [executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566656,"byte_end":566734,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566735,"byte_end":566779,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566780,"byte_end":566825,"line_start":124,"line_end":124,"column_start":1,"column_end":46}},{"value":"/ [Making requests]: #making-requests","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566826,"byte_end":566865,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/ [Managing the connection]: #managing-the-connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566866,"byte_end":566921,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566922,"byte_end":566964,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ [`Connection::poll`]: struct.Connection.html#method.poll","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":566965,"byte_end":567025,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`SendRequest::send_request`]: struct.SendRequest.html#method.send_request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567026,"byte_end":567104,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ [`MAX_CONCURRENT_STREAMS`]: http://httpwg.org/specs/rfc7540.html#SettingValues","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567105,"byte_end":567187,"line_start":130,"line_end":130,"column_start":1,"column_end":83}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567188,"byte_end":567232,"line_start":131,"line_end":131,"column_start":1,"column_end":45}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567233,"byte_end":567283,"line_start":132,"line_end":132,"column_start":1,"column_end":51}},{"value":"/ [`SendRequest::poll_ready`]: struct.SendRequest.html#method.poll_ready","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567284,"byte_end":567358,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567359,"byte_end":567436,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567437,"byte_end":567473,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/ [`Error`]: ../struct.Error.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":567474,"byte_end":567509,"line_start":136,"line_end":136,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3036},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569102,"byte_end":569113,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"name":"SendRequest","qualname":"::client::SendRequest","value":"SendRequest {  }","parent":null,"children":[{"krate":0,"index":3038},{"krate":0,"index":3039}],"decl_id":null,"docs":" Initializes new HTTP/2 streams on a connection by sending a request.","sig":null,"attributes":[{"value":"/ Initializes new HTTP/2 streams on a connection by sending a request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568046,"byte_end":568118,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568119,"byte_end":568122,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This type does no work itself. Instead, it is a handle to the inner","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568123,"byte_end":568194,"line_start":157,"line_end":157,"column_start":1,"column_end":72}},{"value":"/ connection state held by [`Connection`]. If the associated connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568195,"byte_end":568268,"line_start":158,"line_end":158,"column_start":1,"column_end":74}},{"value":"/ instance is dropped, all `SendRequest` functions will return [`Error`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568269,"byte_end":568344,"line_start":159,"line_end":159,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568345,"byte_end":568348,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] instances are able to move to and operate on separate tasks","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568349,"byte_end":568428,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ / threads than their associated [`Connection`] instance. Internally, there","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568429,"byte_end":568507,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ is a buffer used to stage requests before they get written to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568508,"byte_end":568577,"line_start":163,"line_end":163,"column_start":1,"column_end":70}},{"value":"/ connection. There is no guarantee that requests get written to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568578,"byte_end":568648,"line_start":164,"line_end":164,"column_start":1,"column_end":71}},{"value":"/ connection in FIFO order as HTTP/2 prioritization logic can play a role.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568649,"byte_end":568725,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568726,"byte_end":568729,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] implements [`Clone`], enabling the creation of many","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568730,"byte_end":568801,"line_start":167,"line_end":167,"column_start":1,"column_end":72}},{"value":"/ instances that are backed by a single connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568802,"byte_end":568855,"line_start":168,"line_end":168,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568856,"byte_end":568859,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ See [module] level documentation for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568860,"byte_end":568914,"line_start":170,"line_end":170,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568915,"byte_end":568918,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568919,"byte_end":568943,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568944,"byte_end":568986,"line_start":173,"line_end":173,"column_start":1,"column_end":43}},{"value":"/ [`Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":568987,"byte_end":569054,"line_start":174,"line_end":174,"column_start":1,"column_end":68}},{"value":"/ [`Error`]: ../struct.Error.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569055,"byte_end":569090,"line_start":175,"line_end":175,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":10832},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569324,"byte_end":569340,"line_start":184,"line_end":184,"column_start":12,"column_end":28},"name":"ReadySendRequest","qualname":"::client::ReadySendRequest","value":"ReadySendRequest {  }","parent":null,"children":[{"krate":0,"index":10834}],"decl_id":null,"docs":" Returns a `SendRequest` instance once it is ready to send at least one\n request.\n","sig":null,"attributes":[{"value":"/ Returns a `SendRequest` instance once it is ready to send at least one","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569208,"byte_end":569282,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/ request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569283,"byte_end":569295,"line_start":182,"line_end":182,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3040},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571091,"byte_end":571101,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"Connection","qualname":"::client::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":3043}],"decl_id":null,"docs":" Manages all state associated with an HTTP/2 client connection.","sig":null,"attributes":[{"value":"/ Manages all state associated with an HTTP/2 client connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569389,"byte_end":569455,"line_start":188,"line_end":188,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569456,"byte_end":569459,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ A `Connection` is backed by an I/O resource (usually a TCP socket) and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569460,"byte_end":569534,"line_start":190,"line_end":190,"column_start":1,"column_end":75}},{"value":"/ implements the HTTP/2 client logic for that connection. It is responsible","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569535,"byte_end":569612,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ for driving the internal state forward, performing the work requested of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569613,"byte_end":569693,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"/ associated handles ([`SendRequest`], [`ResponseFuture`], [`SendStream`],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569694,"byte_end":569770,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ [`RecvStream`]).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569771,"byte_end":569791,"line_start":194,"line_end":194,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569792,"byte_end":569795,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ `Connection` values are created by calling [`handshake`]. Once a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569796,"byte_end":569864,"line_start":196,"line_end":196,"column_start":1,"column_end":69}},{"value":"/ `Connection` value is obtained, the caller must repeatedly call [`poll`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569865,"byte_end":569941,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ until `Ready` is returned. The easiest way to do this is to submit the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":569942,"byte_end":570016,"line_start":198,"line_end":198,"column_start":1,"column_end":75}},{"value":"/ `Connection` instance to an [executor].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570017,"byte_end":570060,"line_start":199,"line_end":199,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570061,"byte_end":570064,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570065,"byte_end":570089,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570090,"byte_end":570126,"line_start":202,"line_end":202,"column_start":1,"column_end":37}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570127,"byte_end":570171,"line_start":203,"line_end":203,"column_start":1,"column_end":45}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570172,"byte_end":570222,"line_start":204,"line_end":204,"column_start":1,"column_end":51}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570223,"byte_end":570268,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570269,"byte_end":570314,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570315,"byte_end":570341,"line_start":207,"line_end":207,"column_start":1,"column_end":27}},{"value":"/ [executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570342,"byte_end":570420,"line_start":208,"line_end":208,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570421,"byte_end":570424,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570425,"byte_end":570439,"line_start":210,"line_end":210,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570440,"byte_end":570443,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570444,"byte_end":570451,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570452,"byte_end":570497,"line_start":213,"line_end":213,"column_start":1,"column_end":46}},{"value":"/ # use h2::client;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570498,"byte_end":570519,"line_start":214,"line_end":214,"column_start":1,"column_end":22}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570520,"byte_end":570544,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570545,"byte_end":570550,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T>(my_io: T) -> Result<(), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570551,"byte_end":570607,"line_start":217,"line_end":217,"column_start":1,"column_end":57}},{"value":"/ # where T: AsyncRead + AsyncWrite + Send + Unpin + 'static,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570608,"byte_end":570671,"line_start":218,"line_end":218,"column_start":1,"column_end":64}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570672,"byte_end":570679,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/     let (send_request, connection) = client::handshake(my_io).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570680,"byte_end":570753,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/     // Submit the connection handle to an executor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570754,"byte_end":570809,"line_start":221,"line_end":221,"column_start":1,"column_end":56}},{"value":"/     tokio::spawn(async { connection.await.expect(\"connection failed\"); });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570810,"byte_end":570888,"line_start":222,"line_end":222,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570889,"byte_end":570892,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/     // Now, use `send_request` to initialize HTTP/2 streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570893,"byte_end":570957,"line_start":224,"line_end":224,"column_start":1,"column_end":65}},{"value":"/     // ...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570958,"byte_end":570972,"line_start":225,"line_end":225,"column_start":1,"column_end":15}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570973,"byte_end":570985,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570986,"byte_end":570993,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":570994,"byte_end":570999,"line_start":228,"line_end":228,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571000,"byte_end":571022,"line_start":229,"line_end":229,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571023,"byte_end":571030,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571031,"byte_end":571079,"line_start":231,"line_end":231,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":10838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571279,"byte_end":571293,"line_start":239,"line_end":239,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":10839},{"krate":0,"index":10840}],"decl_id":null,"docs":" A future of an HTTP response.\n","sig":null,"attributes":[{"value":"/ A future of an HTTP response.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571168,"byte_end":571201,"line_start":236,"line_end":236,"column_start":1,"column_end":34}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571219,"byte_end":571267,"line_start":238,"line_end":238,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":10843},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571763,"byte_end":571783,"line_start":252,"line_end":252,"column_start":12,"column_end":32},"name":"PushedResponseFuture","qualname":"::client::PushedResponseFuture","value":"PushedResponseFuture {  }","parent":null,"children":[{"krate":0,"index":10844}],"decl_id":null,"docs":" A future of a pushed HTTP response.","sig":null,"attributes":[{"value":"/ A future of a pushed HTTP response.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571367,"byte_end":571406,"line_start":244,"line_end":244,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571407,"byte_end":571410,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ We have to differentiate between pushed and non pushed because of the spec","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571411,"byte_end":571489,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/ <https://httpwg.org/specs/rfc7540.html#PUSH_PROMISE>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571490,"byte_end":571546,"line_start":247,"line_end":247,"column_start":1,"column_end":57}},{"value":"/ > PUSH_PROMISE frames MUST only be sent on a peer-initiated stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571547,"byte_end":571617,"line_start":248,"line_end":248,"column_start":1,"column_end":71}},{"value":"/ > that is in either the \"open\" or \"half-closed (remote)\" state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571618,"byte_end":571685,"line_start":249,"line_end":249,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571703,"byte_end":571751,"line_start":251,"line_end":251,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":10847},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571900,"byte_end":571911,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"PushPromise","qualname":"::client::PushPromise","value":"PushPromise {  }","parent":null,"children":[{"krate":0,"index":10848},{"krate":0,"index":10849}],"decl_id":null,"docs":" A pushed response and corresponding request headers\n","sig":null,"attributes":[{"value":"/ A pushed response and corresponding request headers","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":571816,"byte_end":571871,"line_start":256,"line_end":256,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":10852},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572182,"byte_end":572194,"line_start":269,"line_end":269,"column_start":12,"column_end":24},"name":"PushPromises","qualname":"::client::PushPromises","value":"PushPromises {  }","parent":null,"children":[{"krate":0,"index":10853}],"decl_id":null,"docs":" A stream of pushed responses and corresponding promised requests\n","sig":null,"attributes":[{"value":"/ A stream of pushed responses and corresponding promised requests","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572036,"byte_end":572104,"line_start":266,"line_end":266,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572122,"byte_end":572170,"line_start":268,"line_end":268,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":10856},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573397,"byte_end":573404,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":10857},{"krate":0,"index":10858},{"krate":0,"index":10859},{"krate":0,"index":10860},{"krate":0,"index":10861},{"krate":0,"index":10862},{"krate":0,"index":10863}],"decl_id":null,"docs":" Builds client connections with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds client connections with custom configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572235,"byte_end":572298,"line_start":273,"line_end":273,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572299,"byte_end":572302,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572303,"byte_end":572371,"line_start":275,"line_end":275,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572372,"byte_end":572375,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ The client is constructed by calling [`handshake`] and passing the I/O","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572376,"byte_end":572450,"line_start":277,"line_end":277,"column_start":1,"column_end":75}},{"value":"/ handle that will back the HTTP/2 server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572451,"byte_end":572495,"line_start":278,"line_end":278,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572496,"byte_end":572499,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572500,"byte_end":572565,"line_start":280,"line_end":280,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572566,"byte_end":572569,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572570,"byte_end":572640,"line_start":282,"line_end":282,"column_start":1,"column_end":71}},{"value":"/ configuration settings.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572641,"byte_end":572668,"line_start":283,"line_end":283,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572669,"byte_end":572672,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ [`Builder::new`]: struct.Builder.html#method.new","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572673,"byte_end":572725,"line_start":285,"line_end":285,"column_start":1,"column_end":53}},{"value":"/ [`handshake`]: struct.Builder.html#method.handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572726,"byte_end":572781,"line_start":286,"line_end":286,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572782,"byte_end":572785,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572786,"byte_end":572800,"line_start":288,"line_end":288,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572801,"byte_end":572804,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572805,"byte_end":572812,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572813,"byte_end":572858,"line_start":291,"line_end":291,"column_start":1,"column_end":46}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572859,"byte_end":572883,"line_start":292,"line_end":292,"column_start":1,"column_end":25}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572884,"byte_end":572907,"line_start":293,"line_end":293,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572908,"byte_end":572913,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572914,"byte_end":572977,"line_start":295,"line_end":295,"column_start":1,"column_end":64}},{"value":"/     -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":572978,"byte_end":573052,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573053,"byte_end":573060,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573061,"byte_end":573134,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573135,"byte_end":573152,"line_start":299,"line_end":299,"column_start":1,"column_end":18}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573153,"byte_end":573188,"line_start":300,"line_end":300,"column_start":1,"column_end":36}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573189,"byte_end":573228,"line_start":301,"line_end":301,"column_start":1,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573229,"byte_end":573266,"line_start":302,"line_end":302,"column_start":1,"column_end":38}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573267,"byte_end":573293,"line_start":303,"line_end":303,"column_start":1,"column_end":27}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573294,"byte_end":573316,"line_start":304,"line_end":304,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573317,"byte_end":573324,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573325,"byte_end":573330,"line_start":306,"line_end":306,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573331,"byte_end":573353,"line_start":307,"line_end":307,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":573354,"byte_end":573361,"line_start":308,"line_end":308,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574865,"byte_end":574875,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<SendRequest<B>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ready` when the connection can initialize a new HTTP/2\n stream.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the connection can initialize a new HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574482,"byte_end":574549,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574554,"byte_end":574565,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574570,"byte_end":574573,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This function must return `Ready` before `send_request` is called. When","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574578,"byte_end":574653,"line_start":349,"line_end":349,"column_start":5,"column_end":80}},{"value":"/ `Poll::Pending` is returned, the task will be notified once the readiness","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574658,"byte_end":574735,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ state changes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574740,"byte_end":574758,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574763,"byte_end":574766,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574771,"byte_end":574816,"line_start":353,"line_end":353,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574821,"byte_end":574824,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [module]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574829,"byte_end":574853,"line_start":355,"line_end":355,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576040,"byte_end":576045,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"ready","qualname":"<SendRequest<B>>::ready","value":"pub fn ready(Self) -> ReadySendRequest<B>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning a future that returns `self` back once it is\n ready to send a request.","sig":null,"attributes":[{"value":"/ Consumes `self`, returning a future that returns `self` back once it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575083,"byte_end":575158,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ ready to send a request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575163,"byte_end":575191,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575196,"byte_end":575199,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This function should be called before calling `send_request`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575204,"byte_end":575269,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575274,"byte_end":575277,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This is a functional combinator for [`poll_ready`]. The returned future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575282,"byte_end":575357,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/ will call `SendStream::poll_ready` until `Ready`, then returns `self` to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575362,"byte_end":575438,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575443,"byte_end":575458,"line_start":369,"line_end":369,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575463,"byte_end":575466,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575471,"byte_end":575485,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575490,"byte_end":575493,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575498,"byte_end":575509,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575514,"byte_end":575538,"line_start":374,"line_end":374,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575543,"byte_end":575561,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575566,"byte_end":575626,"line_start":376,"line_end":376,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575631,"byte_end":575638,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575643,"byte_end":575716,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575721,"byte_end":575735,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575740,"byte_end":575803,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"/ // Use `send_request` here.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575808,"byte_end":575839,"line_start":381,"line_end":381,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575844,"byte_end":575851,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575856,"byte_end":575878,"line_start":383,"line_end":383,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575883,"byte_end":575890,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575895,"byte_end":575898,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575903,"byte_end":575948,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575953,"byte_end":575956,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`poll_ready`]: #method.poll_ready","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":575961,"byte_end":575999,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ [module]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576004,"byte_end":576028,"line_start":389,"line_end":389,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580744,"byte_end":580756,"line_start":501,"line_end":501,"column_start":12,"column_end":24},"name":"send_request","qualname":"<SendRequest<B>>::send_request","value":"pub fn send_request(&mut Self, Request<()>, bool)\n-> Result<(ResponseFuture, SendStream<B>), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a HTTP/2 request to the server.","sig":null,"attributes":[{"value":"/ Sends a HTTP/2 request to the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576135,"byte_end":576176,"line_start":394,"line_end":394,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576181,"byte_end":576184,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ `send_request` initializes a new HTTP/2 stream on the associated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576189,"byte_end":576257,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/ connection, then sends the given request using this new stream. Only the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576262,"byte_end":576338,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ request head is sent.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576343,"byte_end":576368,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576373,"byte_end":576376,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ On success, a [`ResponseFuture`] instance and [`SendStream`] instance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576381,"byte_end":576454,"line_start":400,"line_end":400,"column_start":5,"column_end":78}},{"value":"/ are returned. The [`ResponseFuture`] instance is used to get the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576459,"byte_end":576527,"line_start":401,"line_end":401,"column_start":5,"column_end":73}},{"value":"/ server's response and the [`SendStream`] instance is used to send a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576532,"byte_end":576603,"line_start":402,"line_end":402,"column_start":5,"column_end":76}},{"value":"/ request body or trailers to the server over the same HTTP/2 stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576608,"byte_end":576679,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576684,"byte_end":576687,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ To send a request body or trailers, set `end_of_stream` to `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576692,"byte_end":576763,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/ Then, use the returned [`SendStream`] instance to stream request body","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576768,"byte_end":576841,"line_start":406,"line_end":406,"column_start":5,"column_end":78}},{"value":"/ chunks or send trailers. If `end_of_stream` is **not** set to `false`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576846,"byte_end":576919,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ then attempting to call [`SendStream::send_data`] or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576924,"byte_end":576980,"line_start":408,"line_end":408,"column_start":5,"column_end":61}},{"value":"/ [`SendStream::send_trailers`] will result in an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":576985,"byte_end":577043,"line_start":409,"line_end":409,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577048,"byte_end":577051,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If no request body or trailers are to be sent, set `end_of_stream` to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577056,"byte_end":577129,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ `true` and drop the returned [`SendStream`] instance.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577134,"byte_end":577191,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577196,"byte_end":577199,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # A note on HTTP versions","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577204,"byte_end":577233,"line_start":414,"line_end":414,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577238,"byte_end":577241,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The provided `Request` will be encoded differently depending on the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577246,"byte_end":577317,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ value of its version field. If the version is set to 2.0, then the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577322,"byte_end":577392,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ request is encoded as per the specification recommends.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577397,"byte_end":577456,"line_start":418,"line_end":418,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577461,"byte_end":577464,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the version is set to a lower value, then the request is encoded to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577469,"byte_end":577543,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ preserve the characteristics of HTTP 1.1 and lower. Specifically, host","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577548,"byte_end":577622,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ headers are permitted and the `:authority` pseudo header is not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577627,"byte_end":577694,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/ included.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577699,"byte_end":577712,"line_start":423,"line_end":423,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577717,"byte_end":577720,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The caller should always set the request's version field to 2.0 unless","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577725,"byte_end":577799,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ specifically transmitting an HTTP 1.1 request over 2.0.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577804,"byte_end":577863,"line_start":426,"line_end":426,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577868,"byte_end":577871,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577876,"byte_end":577890,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577895,"byte_end":577898,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Sending a request with no body","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577903,"byte_end":577937,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577942,"byte_end":577945,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577950,"byte_end":577961,"line_start":432,"line_end":432,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577966,"byte_end":577990,"line_start":433,"line_end":433,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":577995,"byte_end":578013,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578018,"byte_end":578078,"line_start":435,"line_end":435,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578083,"byte_end":578090,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578095,"byte_end":578168,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578173,"byte_end":578187,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578192,"byte_end":578255,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ // Prepare the HTTP request to send to the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578260,"byte_end":578314,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/ let request = Request::get(\"https://www.example.com/\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578319,"byte_end":578377,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/     .body(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578382,"byte_end":578399,"line_start":442,"line_end":442,"column_start":5,"column_end":22}},{"value":"/     .unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578404,"byte_end":578422,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578427,"byte_end":578430,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ // Send the request to the server. Since we are not sending a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578435,"byte_end":578500,"line_start":445,"line_end":445,"column_start":5,"column_end":70}},{"value":"/ // body or trailers, we can drop the `SendStream` instance.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578505,"byte_end":578568,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/ let (response, _) = send_request.send_request(request, true).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578573,"byte_end":578647,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ let response = response.await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578652,"byte_end":578695,"line_start":448,"line_end":448,"column_start":5,"column_end":48}},{"value":"/ // Process the response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578700,"byte_end":578727,"line_start":449,"line_end":449,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578732,"byte_end":578739,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578744,"byte_end":578766,"line_start":451,"line_end":451,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578771,"byte_end":578778,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578783,"byte_end":578786,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Sending a request with a body and trailers","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578791,"byte_end":578837,"line_start":454,"line_end":454,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578842,"byte_end":578845,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578850,"byte_end":578861,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578866,"byte_end":578890,"line_start":457,"line_end":457,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578895,"byte_end":578913,"line_start":458,"line_end":458,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578918,"byte_end":578978,"line_start":459,"line_end":459,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578983,"byte_end":578990,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":578995,"byte_end":579068,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579073,"byte_end":579087,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579092,"byte_end":579155,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579160,"byte_end":579163,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ // Prepare the HTTP request to send to the server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579168,"byte_end":579222,"line_start":465,"line_end":465,"column_start":5,"column_end":59}},{"value":"/ let request = Request::get(\"https://www.example.com/\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579227,"byte_end":579285,"line_start":466,"line_end":466,"column_start":5,"column_end":63}},{"value":"/     .body(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579290,"byte_end":579307,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/     .unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579312,"byte_end":579330,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579335,"byte_end":579338,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // Send the request to the server. If we are not sending a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579343,"byte_end":579405,"line_start":470,"line_end":470,"column_start":5,"column_end":67}},{"value":"/ // body or trailers, we can drop the `SendStream` instance.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579410,"byte_end":579473,"line_start":471,"line_end":471,"column_start":5,"column_end":68}},{"value":"/ let (response, mut send_stream) = send_request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579478,"byte_end":579528,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/     .send_request(request, false).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579533,"byte_end":579580,"line_start":473,"line_end":473,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579585,"byte_end":579588,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ // At this point, one option would be to wait for send capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579593,"byte_end":579661,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/ // Doing so would allow us to not hold data in memory that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579666,"byte_end":579728,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/ // cannot be sent. However, this is not a requirement, so this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579733,"byte_end":579799,"line_start":477,"line_end":477,"column_start":5,"column_end":71}},{"value":"/ // example will skip that step. See `SendStream` documentation","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579804,"byte_end":579870,"line_start":478,"line_end":478,"column_start":5,"column_end":71}},{"value":"/ // for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579875,"byte_end":579899,"line_start":479,"line_end":479,"column_start":5,"column_end":29}},{"value":"/ send_stream.send_data(b\"hello\", false).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579904,"byte_end":579956,"line_start":480,"line_end":480,"column_start":5,"column_end":57}},{"value":"/ send_stream.send_data(b\"world\", false).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":579961,"byte_end":580013,"line_start":481,"line_end":481,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580018,"byte_end":580021,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ // Send the trailers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580026,"byte_end":580051,"line_start":483,"line_end":483,"column_start":5,"column_end":30}},{"value":"/ let mut trailers = HeaderMap::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580056,"byte_end":580096,"line_start":484,"line_end":484,"column_start":5,"column_end":45}},{"value":"/ trailers.insert(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580101,"byte_end":580121,"line_start":485,"line_end":485,"column_start":5,"column_end":25}},{"value":"/     header::HeaderName::from_bytes(b\"my-trailer\").unwrap(),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580126,"byte_end":580189,"line_start":486,"line_end":486,"column_start":5,"column_end":68}},{"value":"/     header::HeaderValue::from_bytes(b\"hello\").unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580194,"byte_end":580254,"line_start":487,"line_end":487,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580259,"byte_end":580262,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ send_stream.send_trailers(trailers).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580267,"byte_end":580316,"line_start":489,"line_end":489,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580321,"byte_end":580324,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let response = response.await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580329,"byte_end":580372,"line_start":491,"line_end":491,"column_start":5,"column_end":48}},{"value":"/ // Process the response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580377,"byte_end":580404,"line_start":492,"line_end":492,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580409,"byte_end":580416,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580421,"byte_end":580443,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580448,"byte_end":580455,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580460,"byte_end":580463,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580468,"byte_end":580518,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580523,"byte_end":580568,"line_start":498,"line_end":498,"column_start":5,"column_end":50}},{"value":"/ [`SendStream::send_data`]: ../struct.SendStream.html#method.send_data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580573,"byte_end":580646,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ [`SendStream::send_trailers`]: ../struct.SendStream.html#method.send_trailers","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":580651,"byte_end":580732,"line_start":500,"line_end":500,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581957,"byte_end":581993,"line_start":534,"line_end":534,"column_start":12,"column_end":48},"name":"is_extended_connect_protocol_enabled","qualname":"<SendRequest<B>>::is_extended_connect_protocol_enabled","value":"pub fn is_extended_connect_protocol_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the [extended CONNECT protocol][1] is enabled or not.","sig":null,"attributes":[{"value":"/ Returns whether the [extended CONNECT protocol][1] is enabled or not.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581473,"byte_end":581546,"line_start":525,"line_end":525,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581551,"byte_end":581554,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ This setting is configured by the server peer by sending the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581559,"byte_end":581623,"line_start":527,"line_end":527,"column_start":5,"column_end":69}},{"value":"/ [`SETTINGS_ENABLE_CONNECT_PROTOCOL` parameter][2] in a `SETTINGS` frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581628,"byte_end":581704,"line_start":528,"line_end":528,"column_start":5,"column_end":81}},{"value":"/ This method returns the currently acknowledged value recieved from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581709,"byte_end":581783,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581788,"byte_end":581799,"line_start":530,"line_end":530,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581804,"byte_end":581807,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ [1]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581812,"byte_end":581876,"line_start":532,"line_end":532,"column_start":5,"column_end":69}},{"value":"/ [2]: https://datatracker.ietf.org/doc/html/rfc8441#section-3","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":581881,"byte_end":581945,"line_start":533,"line_end":533,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584554,"byte_end":584557,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new client builder instance initialized with default\n configuration values.","sig":null,"attributes":[{"value":"/ Returns a new client builder instance initialized with default","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583706,"byte_end":583772,"line_start":606,"line_end":606,"column_start":5,"column_end":71}},{"value":"/ configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583777,"byte_end":583802,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583807,"byte_end":583810,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583815,"byte_end":583876,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583881,"byte_end":583884,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583889,"byte_end":583903,"line_start":611,"line_end":611,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583908,"byte_end":583911,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583916,"byte_end":583923,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583928,"byte_end":583973,"line_start":614,"line_end":614,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583978,"byte_end":584002,"line_start":615,"line_end":615,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584007,"byte_end":584030,"line_start":616,"line_end":616,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584035,"byte_end":584040,"line_start":617,"line_end":617,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584045,"byte_end":584108,"line_start":618,"line_end":618,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584113,"byte_end":584185,"line_start":619,"line_end":619,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584190,"byte_end":584197,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584202,"byte_end":584275,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584280,"byte_end":584297,"line_start":622,"line_end":622,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584302,"byte_end":584337,"line_start":623,"line_end":623,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584342,"byte_end":584381,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584386,"byte_end":584423,"line_start":625,"line_end":625,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584428,"byte_end":584454,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584459,"byte_end":584481,"line_start":627,"line_end":627,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584486,"byte_end":584493,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584498,"byte_end":584503,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584508,"byte_end":584530,"line_start":630,"line_end":630,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":584535,"byte_end":584542,"line_start":631,"line_end":631,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585992,"byte_end":586011,"line_start":674,"line_end":674,"column_start":12,"column_end":31},"name":"initial_window_size","qualname":"<Builder>::initial_window_size","value":"pub fn initial_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for stream-level","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585018,"byte_end":585084,"line_start":644,"line_end":644,"column_start":5,"column_end":71}},{"value":"/ flow control for received data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585089,"byte_end":585124,"line_start":645,"line_end":645,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585129,"byte_end":585132,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The initial window of a stream is used as part of flow control. For more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585137,"byte_end":585213,"line_start":647,"line_end":647,"column_start":5,"column_end":81}},{"value":"/ details, see [`FlowControl`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585218,"byte_end":585251,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585256,"byte_end":585259,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585264,"byte_end":585296,"line_start":650,"line_end":650,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585301,"byte_end":585304,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585309,"byte_end":585356,"line_start":652,"line_end":652,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585361,"byte_end":585364,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585369,"byte_end":585383,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585388,"byte_end":585391,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585396,"byte_end":585403,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585408,"byte_end":585453,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585458,"byte_end":585482,"line_start":658,"line_end":658,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585487,"byte_end":585510,"line_start":659,"line_end":659,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585515,"byte_end":585520,"line_start":660,"line_end":660,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585525,"byte_end":585588,"line_start":661,"line_end":661,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585593,"byte_end":585665,"line_start":662,"line_end":662,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585670,"byte_end":585677,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585682,"byte_end":585755,"line_start":664,"line_end":664,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585760,"byte_end":585777,"line_start":665,"line_end":665,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585782,"byte_end":585817,"line_start":666,"line_end":666,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585822,"byte_end":585861,"line_start":667,"line_end":667,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585866,"byte_end":585892,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585897,"byte_end":585919,"line_start":669,"line_end":669,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585924,"byte_end":585931,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585936,"byte_end":585941,"line_start":671,"line_end":671,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585946,"byte_end":585968,"line_start":672,"line_end":672,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":585973,"byte_end":585980,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587125,"byte_end":587155,"line_start":709,"line_end":709,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Builder>::initial_connection_window_size","value":"pub fn initial_connection_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for connection-level flow control\n for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for connection-level flow control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586132,"byte_end":586215,"line_start":679,"line_end":679,"column_start":5,"column_end":88}},{"value":"/ for received data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586220,"byte_end":586242,"line_start":680,"line_end":680,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586247,"byte_end":586250,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ The initial window of a connection is used as part of flow control. For more details,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586255,"byte_end":586344,"line_start":682,"line_end":682,"column_start":5,"column_end":94}},{"value":"/ see [`FlowControl`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586349,"byte_end":586373,"line_start":683,"line_end":683,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586378,"byte_end":586381,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586386,"byte_end":586418,"line_start":685,"line_end":685,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586423,"byte_end":586426,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586431,"byte_end":586478,"line_start":687,"line_end":687,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586483,"byte_end":586486,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586491,"byte_end":586505,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586510,"byte_end":586513,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586518,"byte_end":586525,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586530,"byte_end":586575,"line_start":692,"line_end":692,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586580,"byte_end":586604,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586609,"byte_end":586632,"line_start":694,"line_end":694,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586637,"byte_end":586642,"line_start":695,"line_end":695,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586647,"byte_end":586710,"line_start":696,"line_end":696,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586715,"byte_end":586787,"line_start":697,"line_end":697,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586792,"byte_end":586799,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586804,"byte_end":586877,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586882,"byte_end":586899,"line_start":700,"line_end":700,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586904,"byte_end":586939,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/     .initial_connection_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586944,"byte_end":586994,"line_start":702,"line_end":702,"column_start":5,"column_end":55}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":586999,"byte_end":587025,"line_start":703,"line_end":703,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587030,"byte_end":587052,"line_start":704,"line_end":704,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587057,"byte_end":587064,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587069,"byte_end":587074,"line_start":706,"line_end":706,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587079,"byte_end":587101,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587106,"byte_end":587113,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588441,"byte_end":588455,"line_start":748,"line_end":748,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Builder>::max_frame_size","value":"pub fn max_frame_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the size (in octets) of the largest HTTP/2 frame payload that the\n configured client is able to accept.","sig":null,"attributes":[{"value":"/ Indicates the size (in octets) of the largest HTTP/2 frame payload that the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587282,"byte_end":587361,"line_start":714,"line_end":714,"column_start":5,"column_end":84}},{"value":"/ configured client is able to accept.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587366,"byte_end":587406,"line_start":715,"line_end":715,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587411,"byte_end":587414,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The sender may send data frames that are **smaller** than this value,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587419,"byte_end":587492,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ but any data larger than `max` will be broken up into multiple `DATA`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587497,"byte_end":587570,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587575,"byte_end":587586,"line_start":719,"line_end":719,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587591,"byte_end":587594,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The value **must** be between 16,384 and 16,777,215. The default value is 16,384.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587599,"byte_end":587684,"line_start":721,"line_end":721,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587689,"byte_end":587692,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587697,"byte_end":587711,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587716,"byte_end":587719,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587724,"byte_end":587731,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587736,"byte_end":587781,"line_start":726,"line_end":726,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587786,"byte_end":587810,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587815,"byte_end":587838,"line_start":728,"line_end":728,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587843,"byte_end":587848,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587853,"byte_end":587916,"line_start":730,"line_end":730,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587921,"byte_end":587993,"line_start":731,"line_end":731,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":587998,"byte_end":588005,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588010,"byte_end":588083,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588088,"byte_end":588105,"line_start":734,"line_end":734,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588110,"byte_end":588145,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .max_frame_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588150,"byte_end":588184,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588189,"byte_end":588215,"line_start":737,"line_end":737,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588220,"byte_end":588242,"line_start":738,"line_end":738,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588247,"byte_end":588254,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588259,"byte_end":588264,"line_start":740,"line_end":740,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588269,"byte_end":588291,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588296,"byte_end":588303,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588308,"byte_end":588311,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588316,"byte_end":588328,"line_start":744,"line_end":744,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588333,"byte_end":588336,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is not within the legal range specified","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588341,"byte_end":588414,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"/ above.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588419,"byte_end":588429,"line_start":747,"line_end":747,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589713,"byte_end":589733,"line_start":783,"line_end":783,"column_start":12,"column_end":32},"name":"max_header_list_size","qualname":"<Builder>::max_header_list_size","value":"pub fn max_header_list_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max size of received header frames.","sig":null,"attributes":[{"value":"/ Sets the max size of received header frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588569,"byte_end":588617,"line_start":753,"line_end":753,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588622,"byte_end":588625,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ This advisory setting informs a peer of the maximum size of header list","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588630,"byte_end":588705,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ that the sender is prepared to accept, in octets. The value is based on","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588710,"byte_end":588785,"line_start":756,"line_end":756,"column_start":5,"column_end":80}},{"value":"/ the uncompressed size of header fields, including the length of the name","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588790,"byte_end":588866,"line_start":757,"line_end":757,"column_start":5,"column_end":81}},{"value":"/ and value in octets plus an overhead of 32 octets for each header field.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588871,"byte_end":588947,"line_start":758,"line_end":758,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588952,"byte_end":588955,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This setting is also used to limit the maximum amount of data that is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":588960,"byte_end":589033,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ buffered to decode HEADERS frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589038,"byte_end":589076,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589081,"byte_end":589084,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589089,"byte_end":589103,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589108,"byte_end":589111,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589116,"byte_end":589123,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589128,"byte_end":589173,"line_start":766,"line_end":766,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589178,"byte_end":589202,"line_start":767,"line_end":767,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589207,"byte_end":589230,"line_start":768,"line_end":768,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589235,"byte_end":589240,"line_start":769,"line_end":769,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589245,"byte_end":589308,"line_start":770,"line_end":770,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589313,"byte_end":589385,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589390,"byte_end":589397,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589402,"byte_end":589475,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589480,"byte_end":589497,"line_start":774,"line_end":774,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589502,"byte_end":589537,"line_start":775,"line_end":775,"column_start":5,"column_end":40}},{"value":"/     .max_header_list_size(16 * 1024)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589542,"byte_end":589582,"line_start":776,"line_end":776,"column_start":5,"column_end":45}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589587,"byte_end":589613,"line_start":777,"line_end":777,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589618,"byte_end":589640,"line_start":778,"line_end":778,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589645,"byte_end":589652,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589657,"byte_end":589662,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589667,"byte_end":589689,"line_start":781,"line_end":781,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589694,"byte_end":589701,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591640,"byte_end":591662,"line_start":832,"line_end":832,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Builder>::max_concurrent_streams","value":"pub fn max_concurrent_streams(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589853,"byte_end":589903,"line_start":788,"line_end":788,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589908,"byte_end":589911,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ The maximum concurrent streams setting only controls the maximum number","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589916,"byte_end":589991,"line_start":790,"line_end":790,"column_start":5,"column_end":80}},{"value":"/ of streams that can be initiated by the remote peer. In other words,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":589996,"byte_end":590068,"line_start":791,"line_end":791,"column_start":5,"column_end":77}},{"value":"/ when this setting is set to 100, this does not limit the number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590073,"byte_end":590143,"line_start":792,"line_end":792,"column_start":5,"column_end":75}},{"value":"/ concurrent streams that can be created by the caller.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590148,"byte_end":590205,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590210,"byte_end":590213,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ It is recommended that this value be no smaller than 100, so as to not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590218,"byte_end":590292,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/ unnecessarily limit parallelism. However, any value is legal, including","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590297,"byte_end":590372,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ 0. If `max` is set to 0, then the remote will not be permitted to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590377,"byte_end":590446,"line_start":797,"line_end":797,"column_start":5,"column_end":74}},{"value":"/ initiate streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590451,"byte_end":590472,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590477,"byte_end":590480,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Note that streams in the reserved state, i.e., push promises that have","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590485,"byte_end":590559,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/ been reserved but the stream has not started, do not count against this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590564,"byte_end":590639,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/ setting.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590644,"byte_end":590656,"line_start":802,"line_end":802,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590661,"byte_end":590664,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Also note that if the remote *does* exceed the value set here, it is not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590669,"byte_end":590745,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ a protocol level error. Instead, the `h2` library will immediately reset","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590750,"byte_end":590826,"line_start":805,"line_end":805,"column_start":5,"column_end":81}},{"value":"/ the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590831,"byte_end":590846,"line_start":806,"line_end":806,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590851,"byte_end":590854,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2 spec for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590859,"byte_end":590919,"line_start":808,"line_end":808,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590924,"byte_end":590927,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":590932,"byte_end":591006,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591011,"byte_end":591014,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591019,"byte_end":591033,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591038,"byte_end":591041,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591046,"byte_end":591053,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591058,"byte_end":591103,"line_start":815,"line_end":815,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591108,"byte_end":591132,"line_start":816,"line_end":816,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591137,"byte_end":591160,"line_start":817,"line_end":817,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591165,"byte_end":591170,"line_start":818,"line_end":818,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591175,"byte_end":591238,"line_start":819,"line_end":819,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591243,"byte_end":591315,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591320,"byte_end":591327,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591332,"byte_end":591405,"line_start":822,"line_end":822,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591410,"byte_end":591427,"line_start":823,"line_end":823,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591432,"byte_end":591467,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591472,"byte_end":591509,"line_start":825,"line_end":825,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591514,"byte_end":591540,"line_start":826,"line_end":826,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591545,"byte_end":591567,"line_start":827,"line_end":827,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591572,"byte_end":591579,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591584,"byte_end":591589,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591594,"byte_end":591616,"line_start":830,"line_end":830,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591621,"byte_end":591628,"line_start":831,"line_end":831,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593145,"byte_end":593169,"line_start":873,"line_end":873,"column_start":12,"column_end":36},"name":"initial_max_send_streams","qualname":"<Builder>::initial_max_send_streams","value":"pub fn initial_max_send_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the initial maximum of locally initiated (send) streams.","sig":null,"attributes":[{"value":"/ Sets the initial maximum of locally initiated (send) streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591784,"byte_end":591849,"line_start":837,"line_end":837,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591854,"byte_end":591857,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ The initial settings will be overwritten by the remote peer when","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591862,"byte_end":591930,"line_start":839,"line_end":839,"column_start":5,"column_end":73}},{"value":"/ the Settings frame is received. The new value will be set to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":591935,"byte_end":592003,"line_start":840,"line_end":840,"column_start":5,"column_end":73}},{"value":"/ `max_concurrent_streams()` from the frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592008,"byte_end":592054,"line_start":841,"line_end":841,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592059,"byte_end":592062,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ This setting prevents the caller from exceeding this number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592067,"byte_end":592133,"line_start":843,"line_end":843,"column_start":5,"column_end":71}},{"value":"/ streams that are counted towards the concurrency limit.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592138,"byte_end":592197,"line_start":844,"line_end":844,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592202,"byte_end":592205,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Sending streams past the limit returned by the peer will be treated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592210,"byte_end":592281,"line_start":846,"line_end":846,"column_start":5,"column_end":76}},{"value":"/ as a stream error of type PROTOCOL_ERROR or REFUSED_STREAM.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592286,"byte_end":592349,"line_start":847,"line_end":847,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592354,"byte_end":592357,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2 spec for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592362,"byte_end":592422,"line_start":849,"line_end":849,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592427,"byte_end":592430,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592435,"byte_end":592509,"line_start":851,"line_end":851,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592514,"byte_end":592517,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592522,"byte_end":592536,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592541,"byte_end":592544,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592549,"byte_end":592556,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592561,"byte_end":592606,"line_start":856,"line_end":856,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592611,"byte_end":592635,"line_start":857,"line_end":857,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592640,"byte_end":592663,"line_start":858,"line_end":858,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592668,"byte_end":592673,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592678,"byte_end":592741,"line_start":860,"line_end":860,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592746,"byte_end":592818,"line_start":861,"line_end":861,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592823,"byte_end":592830,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592835,"byte_end":592908,"line_start":863,"line_end":863,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592913,"byte_end":592930,"line_start":864,"line_end":864,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592935,"byte_end":592970,"line_start":865,"line_end":865,"column_start":5,"column_end":40}},{"value":"/     .initial_max_send_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":592975,"byte_end":593014,"line_start":866,"line_end":866,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593019,"byte_end":593045,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593050,"byte_end":593072,"line_start":868,"line_end":868,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593077,"byte_end":593084,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593089,"byte_end":593094,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593099,"byte_end":593121,"line_start":871,"line_end":871,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593126,"byte_end":593133,"line_start":872,"line_end":872,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594867,"byte_end":594895,"line_start":918,"line_end":918,"column_start":12,"column_end":40},"name":"max_concurrent_reset_streams","qualname":"<Builder>::max_concurrent_reset_streams","value":"pub fn max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593285,"byte_end":593349,"line_start":878,"line_end":878,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593354,"byte_end":593357,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset, the HTTP/2 specification requires","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593362,"byte_end":593434,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ that any further frames received for that stream must be ignored for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593439,"byte_end":593511,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/ \"some time\".","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593516,"byte_end":593532,"line_start":882,"line_end":882,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593537,"byte_end":593540,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593545,"byte_end":593621,"line_start":884,"line_end":884,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593626,"byte_end":593701,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593706,"byte_end":593741,"line_start":886,"line_end":886,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593746,"byte_end":593749,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ The `max_concurrent_reset_streams` setting configures sets an upper","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593754,"byte_end":593825,"line_start":888,"line_end":888,"column_start":5,"column_end":76}},{"value":"/ bound on the amount of state that is maintained. When this max value is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593830,"byte_end":593905,"line_start":889,"line_end":889,"column_start":5,"column_end":80}},{"value":"/ reached, the oldest reset stream is purged from memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593910,"byte_end":593969,"line_start":890,"line_end":890,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593974,"byte_end":593977,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":593982,"byte_end":594058,"line_start":892,"line_end":892,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594063,"byte_end":594134,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594139,"byte_end":594186,"line_start":894,"line_end":894,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594191,"byte_end":594194,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The default value is 10.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594199,"byte_end":594227,"line_start":896,"line_end":896,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594232,"byte_end":594235,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594240,"byte_end":594254,"line_start":898,"line_end":898,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594259,"byte_end":594262,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594267,"byte_end":594274,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594279,"byte_end":594324,"line_start":901,"line_end":901,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594329,"byte_end":594353,"line_start":902,"line_end":902,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594358,"byte_end":594381,"line_start":903,"line_end":903,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594386,"byte_end":594391,"line_start":904,"line_end":904,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594396,"byte_end":594459,"line_start":905,"line_end":905,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594464,"byte_end":594536,"line_start":906,"line_end":906,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594541,"byte_end":594548,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594553,"byte_end":594626,"line_start":908,"line_end":908,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594631,"byte_end":594648,"line_start":909,"line_end":909,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594653,"byte_end":594688,"line_start":910,"line_end":910,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_reset_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594693,"byte_end":594736,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594741,"byte_end":594767,"line_start":912,"line_end":912,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594772,"byte_end":594794,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594799,"byte_end":594806,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594811,"byte_end":594816,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594821,"byte_end":594843,"line_start":916,"line_end":916,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594848,"byte_end":594855,"line_start":917,"line_end":917,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596606,"byte_end":596627,"line_start":964,"line_end":964,"column_start":12,"column_end":33},"name":"reset_stream_duration","qualname":"<Builder>::reset_stream_duration","value":"pub fn reset_stream_duration(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the duration to remember locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the duration to remember locally reset streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":594995,"byte_end":595051,"line_start":923,"line_end":923,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595056,"byte_end":595059,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset, the HTTP/2 specification requires","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595064,"byte_end":595136,"line_start":925,"line_end":925,"column_start":5,"column_end":77}},{"value":"/ that any further frames received for that stream must be ignored for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595141,"byte_end":595213,"line_start":926,"line_end":926,"column_start":5,"column_end":77}},{"value":"/ \"some time\".","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595218,"byte_end":595234,"line_start":927,"line_end":927,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595239,"byte_end":595242,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595247,"byte_end":595323,"line_start":929,"line_end":929,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595328,"byte_end":595403,"line_start":930,"line_end":930,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595408,"byte_end":595443,"line_start":931,"line_end":931,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595448,"byte_end":595451,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ The `reset_stream_duration` setting configures the max amount of time","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595456,"byte_end":595529,"line_start":933,"line_end":933,"column_start":5,"column_end":78}},{"value":"/ this state will be maintained in memory. Once the duration elapses, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595534,"byte_end":595609,"line_start":934,"line_end":934,"column_start":5,"column_end":80}},{"value":"/ stream state is purged from memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595614,"byte_end":595653,"line_start":935,"line_end":935,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595658,"byte_end":595661,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595666,"byte_end":595742,"line_start":937,"line_end":937,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595747,"byte_end":595818,"line_start":938,"line_end":938,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595823,"byte_end":595870,"line_start":939,"line_end":939,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595875,"byte_end":595878,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ The default value is 30 seconds.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595883,"byte_end":595919,"line_start":941,"line_end":941,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595924,"byte_end":595927,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595932,"byte_end":595946,"line_start":943,"line_end":943,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595951,"byte_end":595954,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595959,"byte_end":595966,"line_start":945,"line_end":945,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":595971,"byte_end":596016,"line_start":946,"line_end":946,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596021,"byte_end":596045,"line_start":947,"line_end":947,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596050,"byte_end":596080,"line_start":948,"line_end":948,"column_start":5,"column_end":35}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596085,"byte_end":596108,"line_start":949,"line_end":949,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596113,"byte_end":596118,"line_start":950,"line_end":950,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596123,"byte_end":596186,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596191,"byte_end":596263,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596268,"byte_end":596275,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596280,"byte_end":596353,"line_start":954,"line_end":954,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596358,"byte_end":596375,"line_start":955,"line_end":955,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596380,"byte_end":596415,"line_start":956,"line_end":956,"column_start":5,"column_end":40}},{"value":"/     .reset_stream_duration(Duration::from_secs(10))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596420,"byte_end":596475,"line_start":957,"line_end":957,"column_start":5,"column_end":60}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596480,"byte_end":596506,"line_start":958,"line_end":958,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596511,"byte_end":596533,"line_start":959,"line_end":959,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596538,"byte_end":596545,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596550,"byte_end":596555,"line_start":961,"line_end":961,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596560,"byte_end":596582,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596587,"byte_end":596594,"line_start":963,"line_end":963,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597230,"byte_end":597250,"line_start":981,"line_end":981,"column_start":12,"column_end":32},"name":"max_send_buffer_size","qualname":"<Builder>::max_send_buffer_size","value":"pub fn max_send_buffer_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum send buffer size per stream.","sig":null,"attributes":[{"value":"/ Sets the maximum send buffer size per stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596735,"byte_end":596784,"line_start":969,"line_end":969,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596789,"byte_end":596792,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ Once a stream has buffered up to (or over) the maximum, the stream's","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596797,"byte_end":596869,"line_start":971,"line_end":971,"column_start":5,"column_end":77}},{"value":"/ flow control will not \"poll\" additional capacity. Once bytes for the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596874,"byte_end":596946,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ stream have been written to the connection, the send buffer capacity","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":596951,"byte_end":597023,"line_start":973,"line_end":973,"column_start":5,"column_end":77}},{"value":"/ will be freed up again.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597028,"byte_end":597055,"line_start":974,"line_end":974,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597060,"byte_end":597063,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ The default is currently ~400MB, but may change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597068,"byte_end":597120,"line_start":976,"line_end":976,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597125,"byte_end":597128,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597133,"byte_end":597145,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597150,"byte_end":597153,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is larger than `u32::MAX`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597158,"byte_end":597218,"line_start":980,"line_end":980,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598583,"byte_end":598594,"line_start":1020,"line_end":1020,"column_start":12,"column_end":23},"name":"enable_push","qualname":"<Builder>::enable_push","value":"pub fn enable_push(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables server push promises.","sig":null,"attributes":[{"value":"/ Enables or disables server push promises.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597402,"byte_end":597447,"line_start":987,"line_end":987,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597452,"byte_end":597455,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ This value is included in the initial SETTINGS handshake. When set, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597460,"byte_end":597535,"line_start":989,"line_end":989,"column_start":5,"column_end":80}},{"value":"/ server MUST NOT send a push promise. Setting this value to value to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597540,"byte_end":597611,"line_start":990,"line_end":990,"column_start":5,"column_end":76}},{"value":"/ false in the initial SETTINGS handshake guarantees that the remote server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597616,"byte_end":597693,"line_start":991,"line_end":991,"column_start":5,"column_end":82}},{"value":"/ will never send a push promise.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597698,"byte_end":597733,"line_start":992,"line_end":992,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597738,"byte_end":597741,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ This setting can be changed during the life of a single HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597746,"byte_end":597812,"line_start":994,"line_end":994,"column_start":5,"column_end":71}},{"value":"/ connection by sending another settings frame updating the value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597817,"byte_end":597885,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597890,"byte_end":597893,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Default value: `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597898,"byte_end":597924,"line_start":997,"line_end":997,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597929,"byte_end":597932,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597937,"byte_end":597951,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597956,"byte_end":597959,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597964,"byte_end":597971,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":597976,"byte_end":598021,"line_start":1002,"line_end":1002,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598026,"byte_end":598050,"line_start":1003,"line_end":1003,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598055,"byte_end":598085,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598090,"byte_end":598113,"line_start":1005,"line_end":1005,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598118,"byte_end":598123,"line_start":1006,"line_end":1006,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598128,"byte_end":598191,"line_start":1007,"line_end":1007,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598196,"byte_end":598268,"line_start":1008,"line_end":1008,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598273,"byte_end":598280,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598285,"byte_end":598358,"line_start":1010,"line_end":1010,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598363,"byte_end":598380,"line_start":1011,"line_end":1011,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598385,"byte_end":598420,"line_start":1012,"line_end":1012,"column_start":5,"column_end":40}},{"value":"/     .enable_push(false)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598425,"byte_end":598452,"line_start":1013,"line_end":1013,"column_start":5,"column_end":32}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598457,"byte_end":598483,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598488,"byte_end":598510,"line_start":1015,"line_end":1015,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598515,"byte_end":598522,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598527,"byte_end":598532,"line_start":1017,"line_end":1017,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598537,"byte_end":598559,"line_start":1018,"line_end":1018,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":598564,"byte_end":598571,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601308,"byte_end":601317,"line_start":1097,"line_end":1097,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"pub fn handshake<T, B>(&Self, T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin, B: Buf + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 client backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 client backed by `io`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599049,"byte_end":599107,"line_start":1036,"line_end":1036,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599112,"byte_end":599115,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599120,"byte_end":599195,"line_start":1038,"line_end":1038,"column_start":5,"column_end":80}},{"value":"/ the [HTTP/2 handshake]. The handshake is completed once both the connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599200,"byte_end":599279,"line_start":1039,"line_end":1039,"column_start":5,"column_end":84}},{"value":"/ preface and the initial settings frame is sent by the client.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599284,"byte_end":599349,"line_start":1040,"line_end":1040,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599354,"byte_end":599357,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ The handshake future does not wait for the initial settings frame from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599362,"byte_end":599440,"line_start":1042,"line_end":1042,"column_start":5,"column_end":83}},{"value":"/ server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599445,"byte_end":599456,"line_start":1043,"line_end":1043,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599461,"byte_end":599464,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Returns a future which resolves to the [`Connection`] / [`SendRequest`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599469,"byte_end":599544,"line_start":1045,"line_end":1045,"column_start":5,"column_end":80}},{"value":"/ tuple once the HTTP/2 handshake has been completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599549,"byte_end":599604,"line_start":1046,"line_end":1046,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599609,"byte_end":599612,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ This function also allows the caller to configure the send payload data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599617,"byte_end":599692,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ type. See [Outbound data type] for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599697,"byte_end":599749,"line_start":1049,"line_end":1049,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599754,"byte_end":599757,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599762,"byte_end":599839,"line_start":1051,"line_end":1051,"column_start":5,"column_end":82}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599844,"byte_end":599886,"line_start":1052,"line_end":1052,"column_start":5,"column_end":47}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599891,"byte_end":599935,"line_start":1053,"line_end":1053,"column_start":5,"column_end":49}},{"value":"/ [Outbound data type]: ../index.html#outbound-data-type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":599940,"byte_end":599999,"line_start":1054,"line_end":1054,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600004,"byte_end":600007,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600012,"byte_end":600026,"line_start":1056,"line_end":1056,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600031,"byte_end":600034,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600039,"byte_end":600055,"line_start":1058,"line_end":1058,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600060,"byte_end":600063,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600068,"byte_end":600075,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600080,"byte_end":600125,"line_start":1061,"line_end":1061,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600130,"byte_end":600154,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600159,"byte_end":600182,"line_start":1063,"line_end":1063,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600187,"byte_end":600192,"line_start":1064,"line_end":1064,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600197,"byte_end":600260,"line_start":1065,"line_end":1065,"column_start":5,"column_end":68}},{"value":"/     -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600265,"byte_end":600339,"line_start":1066,"line_end":1066,"column_start":5,"column_end":79}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600344,"byte_end":600351,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600356,"byte_end":600429,"line_start":1068,"line_end":1068,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600434,"byte_end":600451,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600456,"byte_end":600491,"line_start":1070,"line_end":1070,"column_start":5,"column_end":40}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600496,"byte_end":600522,"line_start":1071,"line_end":1071,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600527,"byte_end":600549,"line_start":1072,"line_end":1072,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600554,"byte_end":600561,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600566,"byte_end":600571,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600576,"byte_end":600598,"line_start":1075,"line_end":1075,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600603,"byte_end":600610,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600615,"byte_end":600618,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ Configures the send-payload data type. In this case, the outbound data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600623,"byte_end":600697,"line_start":1078,"line_end":1078,"column_start":5,"column_end":79}},{"value":"/ type will be `&'static [u8]`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600702,"byte_end":600735,"line_start":1079,"line_end":1079,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600740,"byte_end":600743,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600748,"byte_end":600755,"line_start":1081,"line_end":1081,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600760,"byte_end":600805,"line_start":1082,"line_end":1082,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600810,"byte_end":600834,"line_start":1083,"line_end":1083,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600839,"byte_end":600844,"line_start":1084,"line_end":1084,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600849,"byte_end":600912,"line_start":1085,"line_end":1085,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<&'static [u8]>, Connection<T, &'static [u8]>)), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":600917,"byte_end":601005,"line_start":1086,"line_end":1086,"column_start":5,"column_end":93}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601010,"byte_end":601017,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601022,"byte_end":601095,"line_start":1088,"line_end":1088,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601100,"byte_end":601117,"line_start":1089,"line_end":1089,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601122,"byte_end":601157,"line_start":1090,"line_end":1090,"column_start":5,"column_end":40}},{"value":"/     .handshake::<_, &'static [u8]>(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601162,"byte_end":601208,"line_start":1091,"line_end":1091,"column_start":5,"column_end":51}},{"value":"/ # client_fut.await","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601213,"byte_end":601235,"line_start":1092,"line_end":1092,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601240,"byte_end":601247,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601252,"byte_end":601257,"line_start":1094,"line_end":1094,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601262,"byte_end":601284,"line_start":1095,"line_end":1095,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601289,"byte_end":601296,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3079},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602954,"byte_end":602963,"line_start":1150,"line_end":1150,"column_start":14,"column_end":23},"name":"handshake","qualname":"::client::handshake","value":"pub async fn handshake<T>(T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 client with default configuration\n values backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 client with default configuration","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601675,"byte_end":601744,"line_start":1115,"line_end":1115,"column_start":1,"column_end":70}},{"value":"/ values backed by `io`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601745,"byte_end":601771,"line_start":1116,"line_end":1116,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601772,"byte_end":601775,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601776,"byte_end":601851,"line_start":1118,"line_end":1118,"column_start":1,"column_end":76}},{"value":"/ the [HTTP/2 handshake]. See [Handshake] for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601852,"byte_end":601913,"line_start":1119,"line_end":1119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601914,"byte_end":601917,"line_start":1120,"line_end":1120,"column_start":1,"column_end":4}},{"value":"/ Returns a future which resolves to the [`Connection`] / [`SendRequest`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601918,"byte_end":601993,"line_start":1121,"line_end":1121,"column_start":1,"column_end":76}},{"value":"/ tuple once the HTTP/2 handshake has been completed. The returned","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601994,"byte_end":602062,"line_start":1122,"line_end":1122,"column_start":1,"column_end":69}},{"value":"/ [`Connection`] instance will be using default configuration values. Use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602063,"byte_end":602138,"line_start":1123,"line_end":1123,"column_start":1,"column_end":76}},{"value":"/ [`Builder`] to customize the configuration values used by a [`Connection`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602139,"byte_end":602217,"line_start":1124,"line_end":1124,"column_start":1,"column_end":79}},{"value":"/ instance.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602218,"byte_end":602231,"line_start":1125,"line_end":1125,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602232,"byte_end":602235,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602236,"byte_end":602313,"line_start":1127,"line_end":1127,"column_start":1,"column_end":78}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602314,"byte_end":602354,"line_start":1128,"line_end":1128,"column_start":1,"column_end":41}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602355,"byte_end":602397,"line_start":1129,"line_end":1129,"column_start":1,"column_end":43}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602398,"byte_end":602442,"line_start":1130,"line_end":1130,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602443,"byte_end":602446,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602447,"byte_end":602461,"line_start":1132,"line_end":1132,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602462,"byte_end":602465,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602466,"byte_end":602473,"line_start":1134,"line_end":1134,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602474,"byte_end":602519,"line_start":1135,"line_end":1135,"column_start":1,"column_end":46}},{"value":"/ # use h2::client;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602520,"byte_end":602541,"line_start":1136,"line_end":1136,"column_start":1,"column_end":22}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602542,"byte_end":602566,"line_start":1137,"line_end":1137,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602567,"byte_end":602572,"line_start":1138,"line_end":1138,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) -> Result<(), h2::Error>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602573,"byte_end":602661,"line_start":1139,"line_end":1139,"column_start":1,"column_end":89}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602662,"byte_end":602669,"line_start":1140,"line_end":1140,"column_start":1,"column_end":8}},{"value":"/ let (send_request, connection) = client::handshake(my_io).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602670,"byte_end":602739,"line_start":1141,"line_end":1141,"column_start":1,"column_end":70}},{"value":"/ // The HTTP/2 handshake has completed, now start polling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602740,"byte_end":602800,"line_start":1142,"line_end":1142,"column_start":1,"column_end":61}},{"value":"/ // `connection` and use `send_request` to send requests to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602801,"byte_end":602867,"line_start":1143,"line_end":1143,"column_start":1,"column_end":67}},{"value":"/ // server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602868,"byte_end":602882,"line_start":1144,"line_end":1144,"column_start":1,"column_end":15}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602883,"byte_end":602895,"line_start":1145,"line_end":1145,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602896,"byte_end":602903,"line_start":1146,"line_end":1146,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602904,"byte_end":602909,"line_start":1147,"line_end":1147,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602910,"byte_end":602932,"line_start":1148,"line_end":1148,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":602933,"byte_end":602940,"line_start":1149,"line_end":1149,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606082,"byte_end":606104,"line_start":1245,"line_end":1245,"column_start":12,"column_end":34},"name":"set_target_window_size","qualname":"<Connection<T, B>>::set_target_window_size","value":"pub fn set_target_window_size(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the target window size for the whole connection.","sig":null,"attributes":[{"value":"/ Sets the target window size for the whole connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605290,"byte_end":605347,"line_start":1228,"line_end":1228,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605352,"byte_end":605355,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ If `size` is greater than the current value, then a `WINDOW_UPDATE`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605360,"byte_end":605431,"line_start":1230,"line_end":1230,"column_start":5,"column_end":76}},{"value":"/ frame will be immediately sent to the remote, increasing the connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605436,"byte_end":605511,"line_start":1231,"line_end":1231,"column_start":5,"column_end":80}},{"value":"/ level window by `size - current_value`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605516,"byte_end":605559,"line_start":1232,"line_end":1232,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605564,"byte_end":605567,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current value, nothing will happen","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605572,"byte_end":605637,"line_start":1234,"line_end":1234,"column_start":5,"column_end":70}},{"value":"/ immediately. However, as window capacity is released by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605642,"byte_end":605701,"line_start":1235,"line_end":1235,"column_start":5,"column_end":64}},{"value":"/ [`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605706,"byte_end":605775,"line_start":1236,"line_end":1236,"column_start":5,"column_end":74}},{"value":"/ out until the number of \"in flight\" bytes drops below `size`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605780,"byte_end":605845,"line_start":1237,"line_end":1237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605850,"byte_end":605853,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605858,"byte_end":605890,"line_start":1239,"line_end":1239,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605895,"byte_end":605898,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ See [`FlowControl`] documentation for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605903,"byte_end":605958,"line_start":1241,"line_end":1241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605963,"byte_end":605966,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":605971,"byte_end":606018,"line_start":1243,"line_end":1243,"column_start":5,"column_end":52}},{"value":"/ [library level]: ../index.html#flow-control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606023,"byte_end":606070,"line_start":1244,"line_end":1244,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606734,"byte_end":606757,"line_start":1263,"line_end":1263,"column_start":12,"column_end":35},"name":"set_initial_window_size","qualname":"<Connection<T, B>>::set_initial_window_size","value":"pub fn set_initial_window_size(&mut Self, u32) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606238,"byte_end":606310,"line_start":1250,"line_end":1250,"column_start":5,"column_end":77}},{"value":"/ flow control for received data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606315,"byte_end":606350,"line_start":1251,"line_end":1251,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606355,"byte_end":606358,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ The `SETTINGS` will be sent to the remote, and only applied once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606363,"byte_end":606435,"line_start":1253,"line_end":1253,"column_start":5,"column_end":77}},{"value":"/ remote acknowledges the change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606440,"byte_end":606475,"line_start":1254,"line_end":1254,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606480,"byte_end":606483,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ This can be used to increase or decrease the window size for existing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606488,"byte_end":606561,"line_start":1256,"line_end":1256,"column_start":5,"column_end":78}},{"value":"/ streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606566,"byte_end":606578,"line_start":1257,"line_end":1257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606583,"byte_end":606586,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606591,"byte_end":606603,"line_start":1259,"line_end":1259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606608,"byte_end":606611,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606616,"byte_end":606688,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606693,"byte_end":606722,"line_start":1262,"line_end":1262,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607112,"byte_end":607121,"line_start":1274,"line_end":1274,"column_start":12,"column_end":21},"name":"ping_pong","qualname":"<Connection<T, B>>::ping_pong","value":"pub fn ping_pong(&mut Self) -> Option<PingPong>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `PingPong` instance from the connection.","sig":null,"attributes":[{"value":"/ Takes a `PingPong` instance from the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606936,"byte_end":606988,"line_start":1269,"line_end":1269,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":606993,"byte_end":606996,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607001,"byte_end":607011,"line_start":1271,"line_end":1271,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607016,"byte_end":607019,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This may only be called once. Calling multiple times will return `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607024,"byte_end":607100,"line_start":1273,"line_end":1273,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607653,"byte_end":607680,"line_start":1287,"line_end":1287,"column_start":12,"column_end":39},"name":"max_concurrent_send_streams","qualname":"<Connection<T, B>>::max_concurrent_send_streams","value":"pub fn max_concurrent_send_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by this client.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607222,"byte_end":607296,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ by this client.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607301,"byte_end":607320,"line_start":1279,"line_end":1279,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607325,"byte_end":607328,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ This limit is configured by the server peer by sending the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607333,"byte_end":607395,"line_start":1281,"line_end":1281,"column_start":5,"column_end":67}},{"value":"/ [`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607400,"byte_end":607475,"line_start":1282,"line_end":1282,"column_start":5,"column_end":80}},{"value":"/ This method returns the currently acknowledged value recieved from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607480,"byte_end":607554,"line_start":1283,"line_end":1283,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607559,"byte_end":607570,"line_start":1284,"line_end":1284,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607575,"byte_end":607578,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607583,"byte_end":607641,"line_start":1286,"line_end":1286,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608342,"byte_end":608369,"line_start":1301,"line_end":1301,"column_start":12,"column_end":39},"name":"max_concurrent_recv_streams","qualname":"<Connection<T, B>>::max_concurrent_recv_streams","value":"pub fn max_concurrent_recv_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the server on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607747,"byte_end":607821,"line_start":1290,"line_end":1290,"column_start":5,"column_end":79}},{"value":"/ by the server on this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607826,"byte_end":607863,"line_start":1291,"line_end":1291,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607868,"byte_end":607871,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ This returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607876,"byte_end":607944,"line_start":1293,"line_end":1293,"column_start":5,"column_end":73}},{"value":"/ parameter][1] sent in a `SETTINGS` frame that has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":607949,"byte_end":608007,"line_start":1294,"line_end":1294,"column_start":5,"column_end":63}},{"value":"/ acknowledged by the remote peer. The value to be sent is configured by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608012,"byte_end":608086,"line_start":1295,"line_end":1295,"column_start":5,"column_end":79}},{"value":"/ the [`Builder::max_concurrent_streams`][2] method before handshaking","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608091,"byte_end":608163,"line_start":1296,"line_end":1296,"column_start":5,"column_end":77}},{"value":"/ with the remote peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608168,"byte_end":608193,"line_start":1297,"line_end":1297,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608198,"byte_end":608201,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608206,"byte_end":608264,"line_start":1299,"line_end":1299,"column_start":5,"column_end":63}},{"value":"/ [2]: ../struct.Builder.html#method.max_concurrent_streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608269,"byte_end":608330,"line_start":1300,"line_end":1300,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609641,"byte_end":609650,"line_start":1349,"line_end":1349,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<ResponseFuture>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609488,"byte_end":609537,"line_start":1344,"line_end":1344,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609542,"byte_end":609545,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609550,"byte_end":609562,"line_start":1346,"line_end":1346,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609567,"byte_end":609570,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609575,"byte_end":609629,"line_start":1348,"line_end":1348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609923,"byte_end":609936,"line_start":1358,"line_end":1358,"column_start":12,"column_end":25},"name":"push_promises","qualname":"<ResponseFuture>::push_promises","value":"pub fn push_promises(&mut Self) -> PushPromises","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of PushPromises","sig":null,"attributes":[{"value":"/ Returns a stream of PushPromises","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609752,"byte_end":609788,"line_start":1352,"line_end":1352,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609793,"byte_end":609796,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609801,"byte_end":609813,"line_start":1354,"line_end":1354,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609818,"byte_end":609821,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ If this method has been called before","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609826,"byte_end":609867,"line_start":1356,"line_end":1356,"column_start":5,"column_end":46}},{"value":"/ or the stream was itself was pushed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609872,"byte_end":609911,"line_start":1357,"line_end":1357,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":610311,"byte_end":610323,"line_start":1373,"line_end":1373,"column_start":18,"column_end":30},"name":"push_promise","qualname":"<PushPromises>::push_promise","value":"pub async fn push_promise<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the next `PushPromise`.\n","sig":null,"attributes":[{"value":"/ Get the next `PushPromise`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":610262,"byte_end":610293,"line_start":1372,"line_end":1372,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":610501,"byte_end":610518,"line_start":1378,"line_end":1378,"column_start":12,"column_end":29},"name":"poll_push_promise","qualname":"<PushPromises>::poll_push_promise","value":"pub fn poll_push_promise(&mut Self, &mut Context)\n-> Poll<Option<Result<PushPromise, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611636,"byte_end":611643,"line_start":1412,"line_end":1412,"column_start":12,"column_end":19},"name":"request","qualname":"<PushPromise>::request","value":"pub fn request(&Self) -> &Request<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the push promise's request headers.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the push promise's request headers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611562,"byte_end":611624,"line_start":1411,"line_end":1411,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611784,"byte_end":611795,"line_start":1417,"line_end":1417,"column_start":12,"column_end":23},"name":"request_mut","qualname":"<PushPromise>::request_mut","value":"pub fn request_mut(&mut Self) -> &mut Request<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the push promise's request headers.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the push promise's request headers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611702,"byte_end":611772,"line_start":1416,"line_end":1416,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611972,"byte_end":611982,"line_start":1423,"line_end":1423,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PushPromise>::into_parts","value":"pub fn into_parts(Self) -> (Request<()>, PushedResponseFuture)","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the push promise's request headers and\n response future.\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the push promise's request headers and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611866,"byte_end":611935,"line_start":1421,"line_end":1421,"column_start":5,"column_end":74}},{"value":"/ response future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611940,"byte_end":611960,"line_start":1422,"line_end":1422,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612542,"byte_end":612551,"line_start":1444,"line_end":1444,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<PushedResponseFuture>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612389,"byte_end":612438,"line_start":1439,"line_end":1439,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612443,"byte_end":612446,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612451,"byte_end":612463,"line_start":1441,"line_end":1441,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612468,"byte_end":612471,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612476,"byte_end":612530,"line_start":1443,"line_end":1443,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":3139},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3143},{"krate":0,"index":3146},{"krate":0,"index":10952},{"krate":0,"index":10954},{"krate":0,"index":10956},{"krate":0,"index":10957},{"krate":0,"index":10959},{"krate":0,"index":10960},{"krate":0,"index":3149},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3158}],"decl_id":null,"docs":" Extensions specific to the HTTP/2 protocol.\n","sig":null,"attributes":[{"value":"/ Extensions specific to the HTTP/2 protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":615729,"byte_end":615776,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":10952},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616066,"byte_end":616074,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Protocol","qualname":"::ext::Protocol","value":"Protocol {  }","parent":null,"children":[{"krate":0,"index":10953}],"decl_id":null,"docs":" Represents the `:protocol` pseudo-header used by\n the [Extended CONNECT Protocol].","sig":null,"attributes":[{"value":"/ Represents the `:protocol` pseudo-header used by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":615840,"byte_end":615892,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ the [Extended CONNECT Protocol].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":615893,"byte_end":615929,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":615930,"byte_end":615933,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [Extended CONNECT Protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":615934,"byte_end":616022,"line_start":11,"line_end":11,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3150},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616187,"byte_end":616198,"line_start":19,"line_end":19,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Protocol>::from_static","value":"pub const fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a protocol name.\n","sig":null,"attributes":[{"value":"/ Converts a static string to a protocol name.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616121,"byte_end":616169,"line_start":18,"line_end":18,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616374,"byte_end":616380,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Protocol>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a str representation of the header.\n","sig":null,"attributes":[{"value":"/ Returns a str representation of the header.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616315,"byte_end":616362,"line_start":25,"line_end":25,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":3160},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3165},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3172},{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3181},{"krate":0,"index":3184},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3194},{"krate":0,"index":3197},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3204},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3256},{"krate":0,"index":3259},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3285},{"krate":0,"index":10963},{"krate":0,"index":10969},{"krate":0,"index":10971},{"krate":0,"index":10973},{"krate":0,"index":10976},{"krate":0,"index":3289},{"krate":0,"index":3292},{"krate":0,"index":3295},{"krate":0,"index":3306},{"krate":0,"index":3310},{"krate":0,"index":10979},{"krate":0,"index":10981},{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3338},{"krate":0,"index":3342},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3367},{"krate":0,"index":3373},{"krate":0,"index":3377},{"krate":0,"index":3382},{"krate":0,"index":3387},{"krate":0,"index":3393},{"krate":0,"index":3400},{"krate":0,"index":3404},{"krate":0,"index":3414},{"krate":0,"index":3431},{"krate":0,"index":3435},{"krate":0,"index":3439},{"krate":0,"index":3443}],"decl_id":null,"docs":" Server implementation of the HTTP/2 protocol.","sig":null,"attributes":[{"value":"/ Server implementation of the HTTP/2 protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":616976,"byte_end":617025,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617026,"byte_end":617029,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617030,"byte_end":617051,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617052,"byte_end":617055,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Running an HTTP/2 server requires the caller to manage accepting the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617056,"byte_end":617128,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ connections as well as getting the connections to a state that is ready to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617129,"byte_end":617207,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ begin the HTTP/2 handshake. See [here](../index.html#handshake) for more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617208,"byte_end":617284,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617285,"byte_end":617297,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617298,"byte_end":617301,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This could be as basic as using Tokio's [`TcpListener`] to accept","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617302,"byte_end":617371,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ connections, but usually it means using either ALPN or HTTP/1.1 protocol","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617372,"byte_end":617448,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ upgrades.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617449,"byte_end":617462,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617463,"byte_end":617466,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once a connection is obtained, it is passed to [`handshake`],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617467,"byte_end":617532,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ which will begin the [HTTP/2 handshake]. This returns a future that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617533,"byte_end":617604,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ completes once the handshake process is performed and HTTP/2 streams may","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617605,"byte_end":617681,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ be received.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617682,"byte_end":617698,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617699,"byte_end":617702,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`handshake`] uses default configuration values. There are a number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617703,"byte_end":617777,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ settings that can be changed by using [`Builder`] instead.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617778,"byte_end":617840,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617841,"byte_end":617844,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Inbound streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617845,"byte_end":617866,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617867,"byte_end":617870,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to accept inbound HTTP/2 streams. It","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617871,"byte_end":617947,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ does this by implementing [`futures::Stream`]. When a new stream is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":617948,"byte_end":618019,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ received, a call to [`Connection::accept`] will return `(request, response)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618020,"byte_end":618101,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ The `request` handle (of type [`http::Request<RecvStream>`]) contains the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618102,"byte_end":618179,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ HTTP request head as well as provides a way to receive the inbound data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618180,"byte_end":618255,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ stream and the trailers. The `response` handle (of type [`SendResponse`])","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618256,"byte_end":618333,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ allows responding to the request, stream the response payload, send","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618334,"byte_end":618405,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ trailers, and send push promises.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618406,"byte_end":618443,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618444,"byte_end":618447,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The send ([`SendStream`]) and receive ([`RecvStream`]) halves of the stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618448,"byte_end":618527,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ can be operated independently.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618528,"byte_end":618562,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618563,"byte_end":618566,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Managing the connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618567,"byte_end":618596,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618597,"byte_end":618600,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to manage connection state. The caller","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618601,"byte_end":618679,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ is required to call either [`Connection::accept`] or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618680,"byte_end":618736,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ [`Connection::poll_close`] in order to advance the connection state. Simply","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618737,"byte_end":618816,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ operating on [`SendStream`] or [`RecvStream`] will have no effect unless the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618817,"byte_end":618897,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ connection state is advanced.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618898,"byte_end":618931,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618932,"byte_end":618935,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It is not required to call **both** [`Connection::accept`] and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":618936,"byte_end":619002,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ [`Connection::poll_close`]. If the caller is ready to accept a new stream,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619003,"byte_end":619081,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ then only [`Connection::accept`] should be called. When the caller **does","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619082,"byte_end":619159,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ not** want to accept a new stream, [`Connection::poll_close`] should be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619160,"byte_end":619235,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619236,"byte_end":619247,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619248,"byte_end":619251,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance should only be dropped once","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619252,"byte_end":619311,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/ [`Connection::poll_close`] returns `Ready`. Once [`Connection::accept`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619312,"byte_end":619387,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ returns `Ready(None)`, there will no longer be any more inbound streams. At","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619388,"byte_end":619467,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ this point, only [`Connection::poll_close`] should be called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619468,"byte_end":619533,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619534,"byte_end":619537,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Shutting down the server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619538,"byte_end":619568,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619569,"byte_end":619572,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Graceful shutdown of the server is [not yet","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619573,"byte_end":619620,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ implemented](https://github.com/hyperium/h2/issues/69).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619621,"byte_end":619680,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619681,"byte_end":619684,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619685,"byte_end":619698,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619699,"byte_end":619702,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A basic HTTP/2 server example that runs over TCP and assumes [prior","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619703,"byte_end":619774,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ knowledge], i.e. both the client and the server assume that the TCP socket","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619775,"byte_end":619853,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ will use the HTTP/2 protocol without prior negotiation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619854,"byte_end":619913,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619914,"byte_end":619917,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619918,"byte_end":619931,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ use h2::server;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619932,"byte_end":619951,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/ use http::{Response, StatusCode};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619952,"byte_end":619989,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":619990,"byte_end":620022,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620023,"byte_end":620026,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620027,"byte_end":620045,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ pub async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620046,"byte_end":620071,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:5928\").await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620072,"byte_end":620150,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620151,"byte_end":620154,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     // Accept all incoming TCP connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620155,"byte_end":620202,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/     loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620203,"byte_end":620217,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/         if let Ok((socket, _peer_addr)) = listener.accept().await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620218,"byte_end":620289,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/             // Spawn a new task to process each connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620290,"byte_end":620353,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/             tokio::spawn(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620354,"byte_end":620390,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/                 // Start the HTTP/2 connection handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620391,"byte_end":620451,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/                 let mut h2 = server::handshake(socket).await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620452,"byte_end":620526,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/                 // Accept all inbound HTTP/2 streams sent over the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620527,"byte_end":620597,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/                 // connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620598,"byte_end":620632,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/                 while let Some(request) = h2.accept().await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620633,"byte_end":620698,"line_start":84,"line_end":84,"column_start":1,"column_end":66}},{"value":"/                     let (request, mut respond) = request.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620699,"byte_end":620769,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/                     println!(\"Received request: {:?}\", request);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620770,"byte_end":620838,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620839,"byte_end":620842,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/                     // Build a response with no body","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620843,"byte_end":620899,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/                     let response = Response::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620900,"byte_end":620958,"line_start":89,"line_end":89,"column_start":1,"column_end":59}},{"value":"/                         .status(StatusCode::OK)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":620959,"byte_end":621010,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/                         .body(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621011,"byte_end":621048,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/                         .unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621049,"byte_end":621087,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621088,"byte_end":621091,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/                     // Send the response back to the client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621092,"byte_end":621155,"line_start":94,"line_end":94,"column_start":1,"column_end":64}},{"value":"/                     respond.send_response(response, true)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621156,"byte_end":621217,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/                         .unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621218,"byte_end":621256,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/                 }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621257,"byte_end":621278,"line_start":97,"line_end":97,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621279,"byte_end":621282,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/             });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621283,"byte_end":621302,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621303,"byte_end":621316,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621317,"byte_end":621326,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621327,"byte_end":621332,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621333,"byte_end":621340,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621341,"byte_end":621344,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [prior knowledge]: http://httpwg.org/specs/rfc7540.html#known-http","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621345,"byte_end":621415,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621416,"byte_end":621452,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621453,"byte_end":621530,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621531,"byte_end":621567,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621568,"byte_end":621610,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/ [`Connection::poll`]: struct.Connection.html#method.poll","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621611,"byte_end":621671,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/ [`Connection::poll_close`]: struct.Connection.html#method.poll_close","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621672,"byte_end":621744,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ [`futures::Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621745,"byte_end":621830,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"/ [`http::Request<RecvStream>`]: ../struct.RecvStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621831,"byte_end":621891,"line_start":113,"line_end":113,"column_start":1,"column_end":61}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621892,"byte_end":621937,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621938,"byte_end":621983,"line_start":115,"line_end":115,"column_start":1,"column_end":46}},{"value":"/ [`TcpListener`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpListener.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":621984,"byte_end":622074,"line_start":116,"line_end":116,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":3279},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623183,"byte_end":623192,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"Handshake","qualname":"::server::Handshake","value":"Handshake {  }","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284}],"decl_id":null,"docs":" In progress HTTP/2 connection handshake future.","sig":null,"attributes":[{"value":"/ In progress HTTP/2 connection handshake future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622628,"byte_end":622679,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622680,"byte_end":622683,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This type implements `Future`, yielding a `Connection` instance once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622684,"byte_end":622760,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ handshake has completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622761,"byte_end":622789,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622790,"byte_end":622793,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The handshake is completed once the connection preface is fully received","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622794,"byte_end":622870,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ from the client **and** the initial settings frame is sent to the client.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622871,"byte_end":622948,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622949,"byte_end":622952,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The handshake future does not wait for the initial settings frame from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":622953,"byte_end":623031,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ client.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623032,"byte_end":623043,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623044,"byte_end":623047,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623048,"byte_end":623093,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623094,"byte_end":623097,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623098,"byte_end":623122,"line_start":146,"line_end":146,"column_start":1,"column_end":25}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623123,"byte_end":623171,"line_start":147,"line_end":147,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3285},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624876,"byte_end":624886,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"Connection","qualname":"::server::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":3288}],"decl_id":null,"docs":" Accepts inbound HTTP/2 streams on a connection.","sig":null,"attributes":[{"value":"/ Accepts inbound HTTP/2 streams on a connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623446,"byte_end":623497,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623498,"byte_end":623501,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ A `Connection` is backed by an I/O resource (usually a TCP socket) and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623502,"byte_end":623576,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ implements the HTTP/2 server logic for that connection. It is responsible","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623577,"byte_end":623654,"line_start":160,"line_end":160,"column_start":1,"column_end":78}},{"value":"/ for receiving inbound streams initiated by the client as well as driving the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623655,"byte_end":623735,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ internal state forward.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623736,"byte_end":623763,"line_start":162,"line_end":162,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623764,"byte_end":623767,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ `Connection` values are created by calling [`handshake`]. Once a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623768,"byte_end":623836,"line_start":164,"line_end":164,"column_start":1,"column_end":69}},{"value":"/ `Connection` value is obtained, the caller must call [`poll`] or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623837,"byte_end":623905,"line_start":165,"line_end":165,"column_start":1,"column_end":69}},{"value":"/ [`poll_close`] in order to drive the internal connection state forward.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623906,"byte_end":623981,"line_start":166,"line_end":166,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623982,"byte_end":623985,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more details","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":623986,"byte_end":624039,"line_start":168,"line_end":168,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624040,"byte_end":624043,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624044,"byte_end":624074,"line_start":170,"line_end":170,"column_start":1,"column_end":31}},{"value":"/ [`handshake`]: struct.Connection.html#method.handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624075,"byte_end":624133,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/ [`poll`]: struct.Connection.html#method.poll","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624134,"byte_end":624182,"line_start":172,"line_end":172,"column_start":1,"column_end":49}},{"value":"/ [`poll_close`]: struct.Connection.html#method.poll_close","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624183,"byte_end":624243,"line_start":173,"line_end":173,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624244,"byte_end":624247,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624248,"byte_end":624262,"line_start":175,"line_end":175,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624263,"byte_end":624266,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624267,"byte_end":624274,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624275,"byte_end":624320,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ # use h2::server;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624321,"byte_end":624342,"line_start":179,"line_end":179,"column_start":1,"column_end":22}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624343,"byte_end":624367,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624368,"byte_end":624373,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624374,"byte_end":624439,"line_start":182,"line_end":182,"column_start":1,"column_end":66}},{"value":"/ let mut server = server::handshake(my_io).await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624440,"byte_end":624501,"line_start":183,"line_end":183,"column_start":1,"column_end":62}},{"value":"/ while let Some(request) = server.accept().await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624502,"byte_end":624555,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624556,"byte_end":624589,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/         let (request, respond) = request.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624590,"byte_end":624644,"line_start":186,"line_end":186,"column_start":1,"column_end":55}},{"value":"/         // Process the request and send the response back to the client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624645,"byte_end":624720,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/         // using `respond`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624721,"byte_end":624752,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624753,"byte_end":624764,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624765,"byte_end":624770,"line_start":190,"line_end":190,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624771,"byte_end":624778,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624779,"byte_end":624784,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624785,"byte_end":624807,"line_start":193,"line_end":193,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624808,"byte_end":624815,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624816,"byte_end":624864,"line_start":195,"line_end":195,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":10963},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626023,"byte_end":626030,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"Builder","qualname":"::server::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":10964},{"krate":0,"index":10965},{"krate":0,"index":10966},{"krate":0,"index":10967},{"krate":0,"index":10968}],"decl_id":null,"docs":" Builds server connections with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds server connections with custom configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":624950,"byte_end":625013,"line_start":200,"line_end":200,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625014,"byte_end":625017,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625018,"byte_end":625086,"line_start":202,"line_end":202,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625087,"byte_end":625090,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ The server is constructed by calling [`handshake`] and passing the I/O","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625091,"byte_end":625165,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ handle that will back the HTTP/2 server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625166,"byte_end":625210,"line_start":205,"line_end":205,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625211,"byte_end":625214,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625215,"byte_end":625280,"line_start":207,"line_end":207,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625281,"byte_end":625284,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625285,"byte_end":625355,"line_start":209,"line_end":209,"column_start":1,"column_end":71}},{"value":"/ configuration settings.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625356,"byte_end":625383,"line_start":210,"line_end":210,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625384,"byte_end":625387,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`Builder::new`]: struct.Builder.html#method.new","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625388,"byte_end":625440,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`handshake`]: struct.Builder.html#method.handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625441,"byte_end":625496,"line_start":213,"line_end":213,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625497,"byte_end":625500,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625501,"byte_end":625515,"line_start":215,"line_end":215,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625516,"byte_end":625519,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625520,"byte_end":625527,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625528,"byte_end":625573,"line_start":218,"line_end":218,"column_start":1,"column_end":46}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625574,"byte_end":625598,"line_start":219,"line_end":219,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625599,"byte_end":625604,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625605,"byte_end":625662,"line_start":221,"line_end":221,"column_start":1,"column_end":58}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625663,"byte_end":625684,"line_start":222,"line_end":222,"column_start":1,"column_end":22}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625685,"byte_end":625692,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625693,"byte_end":625766,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625767,"byte_end":625784,"line_start":225,"line_end":225,"column_start":1,"column_end":18}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625785,"byte_end":625820,"line_start":226,"line_end":226,"column_start":1,"column_end":36}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625821,"byte_end":625860,"line_start":227,"line_end":227,"column_start":1,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625861,"byte_end":625898,"line_start":228,"line_end":228,"column_start":1,"column_end":38}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625899,"byte_end":625925,"line_start":229,"line_end":229,"column_start":1,"column_end":27}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625926,"byte_end":625942,"line_start":230,"line_end":230,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625943,"byte_end":625950,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625951,"byte_end":625956,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625957,"byte_end":625979,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":625980,"byte_end":625987,"line_start":234,"line_end":234,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10973},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627115,"byte_end":627127,"line_start":269,"line_end":269,"column_start":12,"column_end":24},"name":"SendResponse","qualname":"::server::SendResponse","value":"SendResponse {  }","parent":null,"children":[{"krate":0,"index":10975}],"decl_id":null,"docs":" Send a response back to the client","sig":null,"attributes":[{"value":"/ Send a response back to the client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626543,"byte_end":626581,"line_start":253,"line_end":253,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626582,"byte_end":626585,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ A `SendResponse` instance is provided when receiving a request and is used","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626586,"byte_end":626664,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to send the associated response back to the client. It is also used to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626665,"byte_end":626739,"line_start":256,"line_end":256,"column_start":1,"column_end":75}},{"value":"/ explicitly reset the stream with a custom reason.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626740,"byte_end":626793,"line_start":257,"line_end":257,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626794,"byte_end":626797,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ It will also be used to initiate push promises linked with the associated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626798,"byte_end":626875,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"/ stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626876,"byte_end":626887,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626888,"byte_end":626891,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ If the `SendResponse` instance is dropped without sending a response, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626892,"byte_end":626970,"line_start":262,"line_end":262,"column_start":1,"column_end":79}},{"value":"/ the HTTP/2 stream will be reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":626971,"byte_end":627007,"line_start":263,"line_end":263,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627008,"byte_end":627011,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627012,"byte_end":627057,"line_start":265,"line_end":265,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627058,"byte_end":627061,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627062,"byte_end":627086,"line_start":267,"line_end":267,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3289},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627698,"byte_end":627716,"line_start":287,"line_end":287,"column_start":12,"column_end":30},"name":"SendPushedResponse","qualname":"::server::SendPushedResponse","value":"SendPushedResponse {  }","parent":null,"children":[{"krate":0,"index":3291}],"decl_id":null,"docs":" Send a response to a promised request","sig":null,"attributes":[{"value":"/ Send a response to a promised request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627173,"byte_end":627214,"line_start":273,"line_end":273,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627215,"byte_end":627218,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ A `SendPushedResponse` instance is provided when promising a request and is used","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627219,"byte_end":627303,"line_start":275,"line_end":275,"column_start":1,"column_end":85}},{"value":"/ to send the associated response to the client. It is also used to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627304,"byte_end":627373,"line_start":276,"line_end":276,"column_start":1,"column_end":70}},{"value":"/ explicitly reset the stream with a custom reason.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627374,"byte_end":627427,"line_start":277,"line_end":277,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627428,"byte_end":627431,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ It can not be used to initiate push promises.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627432,"byte_end":627481,"line_start":279,"line_end":279,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627482,"byte_end":627485,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ If the `SendPushedResponse` instance is dropped without sending a response, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627486,"byte_end":627570,"line_start":281,"line_end":281,"column_start":1,"column_end":85}},{"value":"/ the HTTP/2 stream will be reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627571,"byte_end":627607,"line_start":282,"line_end":282,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627608,"byte_end":627611,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627612,"byte_end":627657,"line_start":284,"line_end":284,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627658,"byte_end":627661,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627662,"byte_end":627686,"line_start":286,"line_end":286,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":3317},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629814,"byte_end":629823,"line_start":355,"line_end":355,"column_start":8,"column_end":17},"name":"handshake","qualname":"::server::handshake","value":"pub fn handshake<T>(T) -> Handshake<T, Bytes> where T: AsyncRead +\nAsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 server with default configuration\n values backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 server with default configuration","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":628689,"byte_end":628758,"line_start":324,"line_end":324,"column_start":1,"column_end":70}},{"value":"/ values backed by `io`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":628759,"byte_end":628785,"line_start":325,"line_end":325,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":628786,"byte_end":628789,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":628790,"byte_end":628865,"line_start":327,"line_end":327,"column_start":1,"column_end":76}},{"value":"/ the [HTTP/2 handshake]. See [Handshake] for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":628866,"byte_end":628927,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":628928,"byte_end":628931,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Returns a future which resolves to the [`Connection`] instance once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":628932,"byte_end":629007,"line_start":330,"line_end":330,"column_start":1,"column_end":76}},{"value":"/ HTTP/2 handshake has been completed. The returned [`Connection`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629008,"byte_end":629076,"line_start":331,"line_end":331,"column_start":1,"column_end":69}},{"value":"/ instance will be using default configuration values. Use [`Builder`] to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629077,"byte_end":629152,"line_start":332,"line_end":332,"column_start":1,"column_end":76}},{"value":"/ customize the configuration values used by a [`Connection`] instance.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629153,"byte_end":629226,"line_start":333,"line_end":333,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629227,"byte_end":629230,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629231,"byte_end":629308,"line_start":335,"line_end":335,"column_start":1,"column_end":78}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629309,"byte_end":629349,"line_start":336,"line_end":336,"column_start":1,"column_end":41}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629350,"byte_end":629392,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629393,"byte_end":629396,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629397,"byte_end":629411,"line_start":339,"line_end":339,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629412,"byte_end":629415,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629416,"byte_end":629423,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629424,"byte_end":629469,"line_start":342,"line_end":342,"column_start":1,"column_end":46}},{"value":"/ # use h2::server;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629470,"byte_end":629491,"line_start":343,"line_end":343,"column_start":1,"column_end":22}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629492,"byte_end":629516,"line_start":344,"line_end":344,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629517,"byte_end":629522,"line_start":345,"line_end":345,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629523,"byte_end":629586,"line_start":346,"line_end":346,"column_start":1,"column_end":64}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629587,"byte_end":629594,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ let connection = server::handshake(my_io).await.unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629595,"byte_end":629656,"line_start":348,"line_end":348,"column_start":1,"column_end":62}},{"value":"/ // The HTTP/2 handshake has completed, now use `connection` to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629657,"byte_end":629723,"line_start":349,"line_end":349,"column_start":1,"column_end":67}},{"value":"/ // accept inbound HTTP/2 streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629724,"byte_end":629761,"line_start":350,"line_end":350,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629762,"byte_end":629769,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629770,"byte_end":629775,"line_start":352,"line_end":352,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629776,"byte_end":629798,"line_start":353,"line_end":353,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629799,"byte_end":629806,"line_start":354,"line_end":354,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":631048,"byte_end":631054,"line_start":402,"line_end":402,"column_start":18,"column_end":24},"name":"accept","qualname":"<Connection<T, B>>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accept the next incoming request on this connection.\n","sig":null,"attributes":[{"value":"/ Accept the next incoming request on this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":630974,"byte_end":631030,"line_start":401,"line_end":401,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":631268,"byte_end":631279,"line_start":409,"line_end":409,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Connection<T, B>>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<Option<Result<(Request<RecvStream>, SendResponse<B>), crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633034,"byte_end":633056,"line_start":452,"line_end":452,"column_start":12,"column_end":34},"name":"set_target_window_size","qualname":"<Connection<T, B>>::set_target_window_size","value":"pub fn set_target_window_size(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the target window size for the whole connection.","sig":null,"attributes":[{"value":"/ Sets the target window size for the whole connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632242,"byte_end":632299,"line_start":435,"line_end":435,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632304,"byte_end":632307,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ If `size` is greater than the current value, then a `WINDOW_UPDATE`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632312,"byte_end":632383,"line_start":437,"line_end":437,"column_start":5,"column_end":76}},{"value":"/ frame will be immediately sent to the remote, increasing the connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632388,"byte_end":632463,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ level window by `size - current_value`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632468,"byte_end":632511,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632516,"byte_end":632519,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current value, nothing will happen","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632524,"byte_end":632589,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/ immediately. However, as window capacity is released by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632594,"byte_end":632653,"line_start":442,"line_end":442,"column_start":5,"column_end":64}},{"value":"/ [`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632658,"byte_end":632727,"line_start":443,"line_end":443,"column_start":5,"column_end":74}},{"value":"/ out until the number of \"in flight\" bytes drops below `size`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632732,"byte_end":632797,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632802,"byte_end":632805,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632810,"byte_end":632842,"line_start":446,"line_end":446,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632847,"byte_end":632850,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ See [`FlowControl`] documentation for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632855,"byte_end":632910,"line_start":448,"line_end":448,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632915,"byte_end":632918,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632923,"byte_end":632970,"line_start":450,"line_end":450,"column_start":5,"column_end":52}},{"value":"/ [library level]: ../index.html#flow-control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":632975,"byte_end":633022,"line_start":451,"line_end":451,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633691,"byte_end":633714,"line_start":470,"line_end":470,"column_start":12,"column_end":35},"name":"set_initial_window_size","qualname":"<Connection<T, B>>::set_initial_window_size","value":"pub fn set_initial_window_size(&mut Self, u32) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633195,"byte_end":633267,"line_start":457,"line_end":457,"column_start":5,"column_end":77}},{"value":"/ flow control for received data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633272,"byte_end":633307,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633312,"byte_end":633315,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ The `SETTINGS` will be sent to the remote, and only applied once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633320,"byte_end":633392,"line_start":460,"line_end":460,"column_start":5,"column_end":77}},{"value":"/ remote acknowledges the change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633397,"byte_end":633432,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633437,"byte_end":633440,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This can be used to increase or decrease the window size for existing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633445,"byte_end":633518,"line_start":463,"line_end":463,"column_start":5,"column_end":78}},{"value":"/ streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633523,"byte_end":633535,"line_start":464,"line_end":464,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633540,"byte_end":633543,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633548,"byte_end":633560,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633565,"byte_end":633568,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633573,"byte_end":633645,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633650,"byte_end":633679,"line_start":469,"line_end":469,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634199,"byte_end":634222,"line_start":484,"line_end":484,"column_start":12,"column_end":35},"name":"enable_connect_protocol","qualname":"<Connection<T, B>>::enable_connect_protocol","value":"pub fn enable_connect_protocol(&mut Self) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Enables the [extended CONNECT protocol].","sig":null,"attributes":[{"value":"/ Enables the [extended CONNECT protocol].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633898,"byte_end":633942,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633947,"byte_end":633950,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ [extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":633955,"byte_end":634043,"line_start":478,"line_end":478,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634048,"byte_end":634051,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634056,"byte_end":634068,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634073,"byte_end":634076,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634081,"byte_end":634153,"line_start":482,"line_end":482,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634158,"byte_end":634187,"line_start":483,"line_end":483,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635008,"byte_end":635019,"line_start":502,"line_end":502,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Connection<T, B>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ready` when the underlying connection has closed.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the underlying connection has closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634346,"byte_end":634408,"line_start":489,"line_end":489,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634413,"byte_end":634416,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If any new inbound streams are received during a call to `poll_closed`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634421,"byte_end":634496,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ they will be queued and returned on the next call to [`poll_accept`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634501,"byte_end":634574,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634579,"byte_end":634582,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This function will advance the internal connection state, driving","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634587,"byte_end":634656,"line_start":494,"line_end":494,"column_start":5,"column_end":74}},{"value":"/ progress on all the other handles (e.g. [`RecvStream`] and [`SendStream`]).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634661,"byte_end":634740,"line_start":495,"line_end":495,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634745,"byte_end":634748,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ See [here](index.html#managing-the-connection) for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634753,"byte_end":634821,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634826,"byte_end":634829,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [`poll_accept`]: struct.Connection.html#method.poll_accept","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634834,"byte_end":634896,"line_start":499,"line_end":499,"column_start":5,"column_end":67}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634901,"byte_end":634946,"line_start":500,"line_end":500,"column_start":5,"column_end":50}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":634951,"byte_end":634996,"line_start":501,"line_end":501,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635226,"byte_end":635236,"line_start":508,"line_end":508,"column_start":12,"column_end":22},"name":"poll_close","qualname":"<Connection<T, B>>::poll_close","value":"pub fn poll_close(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to poll_closed\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635168,"byte_end":635214,"line_start":507,"line_end":507,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635921,"byte_end":635936,"line_start":524,"line_end":524,"column_start":12,"column_end":27},"name":"abrupt_shutdown","qualname":"<Connection<T, B>>::abrupt_shutdown","value":"pub fn abrupt_shutdown(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Sets the connection to a GOAWAY state.","sig":null,"attributes":[{"value":"/ Sets the connection to a GOAWAY state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635342,"byte_end":635384,"line_start":512,"line_end":512,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635389,"byte_end":635392,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Does not terminate the connection. Must continue being polled to close","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635397,"byte_end":635471,"line_start":514,"line_end":514,"column_start":5,"column_end":79}},{"value":"/ connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635476,"byte_end":635491,"line_start":515,"line_end":515,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635496,"byte_end":635499,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ After flushing the GOAWAY frame, the connection is closed. Any","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635504,"byte_end":635570,"line_start":517,"line_end":517,"column_start":5,"column_end":71}},{"value":"/ outstanding streams do not prevent the connection from closing. This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635575,"byte_end":635647,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ should usually be reserved for shutting down when something bad","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635652,"byte_end":635719,"line_start":519,"line_end":519,"column_start":5,"column_end":72}},{"value":"/ external to `h2` has happened, and open streams cannot be properly","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635724,"byte_end":635794,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/ handled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635799,"byte_end":635811,"line_start":521,"line_end":521,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635816,"byte_end":635819,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ For graceful shutdowns, see [`graceful_shutdown`](Connection::graceful_shutdown).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":635824,"byte_end":635909,"line_start":523,"line_end":523,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636502,"byte_end":636519,"line_start":538,"line_end":538,"column_start":12,"column_end":29},"name":"graceful_shutdown","qualname":"<Connection<T, B>>::graceful_shutdown","value":"pub fn graceful_shutdown(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Starts a [graceful shutdown][1] process.","sig":null,"attributes":[{"value":"/ Starts a [graceful shutdown][1] process.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636028,"byte_end":636072,"line_start":528,"line_end":528,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636077,"byte_end":636080,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Must continue being polled to close connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636085,"byte_end":636136,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636141,"byte_end":636144,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ It's possible to receive more requests after calling this method, since","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636149,"byte_end":636224,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ they might have been in-flight from the client already. After about","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636229,"byte_end":636300,"line_start":533,"line_end":533,"column_start":5,"column_end":76}},{"value":"/ 1 RTT, no new requests should be accepted. Once all active streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636305,"byte_end":636375,"line_start":534,"line_end":534,"column_start":5,"column_end":75}},{"value":"/ have completed, the connection is closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636380,"byte_end":636425,"line_start":535,"line_end":535,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636430,"byte_end":636433,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [1]: http://httpwg.org/specs/rfc7540.html#GOAWAY","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636438,"byte_end":636490,"line_start":537,"line_end":537,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636766,"byte_end":636775,"line_start":547,"line_end":547,"column_start":12,"column_end":21},"name":"ping_pong","qualname":"<Connection<T, B>>::ping_pong","value":"pub fn ping_pong(&mut Self) -> Option<PingPong>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `PingPong` instance from the connection.","sig":null,"attributes":[{"value":"/ Takes a `PingPong` instance from the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636590,"byte_end":636642,"line_start":542,"line_end":542,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636647,"byte_end":636650,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636655,"byte_end":636665,"line_start":544,"line_end":544,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636670,"byte_end":636673,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This may only be called once. Calling multiple times will return `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636678,"byte_end":636754,"line_start":546,"line_end":546,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637330,"byte_end":637357,"line_start":560,"line_end":560,"column_start":12,"column_end":39},"name":"max_concurrent_send_streams","qualname":"<Connection<T, B>>::max_concurrent_send_streams","value":"pub fn max_concurrent_send_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the server on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636881,"byte_end":636955,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"/ by the server on this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":636960,"byte_end":636997,"line_start":552,"line_end":552,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637002,"byte_end":637005,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This limit is configured by the client peer by sending the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637010,"byte_end":637072,"line_start":554,"line_end":554,"column_start":5,"column_end":67}},{"value":"/ [`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637077,"byte_end":637152,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/ This method returns the currently acknowledged value recieved from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637157,"byte_end":637231,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637236,"byte_end":637247,"line_start":557,"line_end":557,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637252,"byte_end":637255,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637260,"byte_end":637318,"line_start":559,"line_end":559,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638025,"byte_end":638052,"line_start":575,"line_end":575,"column_start":12,"column_end":39},"name":"max_concurrent_recv_streams","qualname":"<Connection<T, B>>::max_concurrent_recv_streams","value":"pub fn max_concurrent_recv_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the client on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637430,"byte_end":637504,"line_start":564,"line_end":564,"column_start":5,"column_end":79}},{"value":"/ by the client on this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637509,"byte_end":637546,"line_start":565,"line_end":565,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637551,"byte_end":637554,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637559,"byte_end":637627,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ parameter][1] sent in a `SETTINGS` frame that has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637632,"byte_end":637690,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/ acknowledged by the remote peer. The value to be sent is configured by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637695,"byte_end":637769,"line_start":569,"line_end":569,"column_start":5,"column_end":79}},{"value":"/ the [`Builder::max_concurrent_streams`][2] method before handshaking","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637774,"byte_end":637846,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ with the remote peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637851,"byte_end":637876,"line_start":571,"line_end":571,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637881,"byte_end":637884,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637889,"byte_end":637947,"line_start":573,"line_end":573,"column_start":5,"column_end":63}},{"value":"/ [2]: ../struct.Builder.html#method.max_concurrent_streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":637952,"byte_end":638013,"line_start":574,"line_end":574,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639566,"byte_end":639569,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new server builder instance initialized with default\n configuration values.","sig":null,"attributes":[{"value":"/ Returns a new server builder instance initialized with default","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638809,"byte_end":638875,"line_start":608,"line_end":608,"column_start":5,"column_end":71}},{"value":"/ configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638880,"byte_end":638905,"line_start":609,"line_end":609,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638910,"byte_end":638913,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638918,"byte_end":638979,"line_start":611,"line_end":611,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638984,"byte_end":638987,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638992,"byte_end":639006,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639011,"byte_end":639014,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639019,"byte_end":639026,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639031,"byte_end":639076,"line_start":616,"line_end":616,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639081,"byte_end":639105,"line_start":617,"line_end":617,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639110,"byte_end":639115,"line_start":618,"line_end":618,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639120,"byte_end":639177,"line_start":619,"line_end":619,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639182,"byte_end":639203,"line_start":620,"line_end":620,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639208,"byte_end":639215,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639220,"byte_end":639293,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639298,"byte_end":639315,"line_start":623,"line_end":623,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639320,"byte_end":639355,"line_start":624,"line_end":624,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639360,"byte_end":639399,"line_start":625,"line_end":625,"column_start":5,"column_end":44}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639404,"byte_end":639441,"line_start":626,"line_end":626,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639446,"byte_end":639472,"line_start":627,"line_end":627,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639477,"byte_end":639493,"line_start":628,"line_end":628,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639498,"byte_end":639505,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639510,"byte_end":639515,"line_start":630,"line_end":630,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639520,"byte_end":639542,"line_start":631,"line_end":631,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639547,"byte_end":639554,"line_start":632,"line_end":632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640831,"byte_end":640850,"line_start":672,"line_end":672,"column_start":12,"column_end":31},"name":"initial_window_size","qualname":"<Builder>::initial_window_size","value":"pub fn initial_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for stream-level","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":639948,"byte_end":640014,"line_start":643,"line_end":643,"column_start":5,"column_end":71}},{"value":"/ flow control for received data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640019,"byte_end":640054,"line_start":644,"line_end":644,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640059,"byte_end":640062,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The initial window of a stream is used as part of flow control. For more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640067,"byte_end":640143,"line_start":646,"line_end":646,"column_start":5,"column_end":81}},{"value":"/ details, see [`FlowControl`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640148,"byte_end":640181,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640186,"byte_end":640189,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640194,"byte_end":640226,"line_start":649,"line_end":649,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640231,"byte_end":640234,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640239,"byte_end":640286,"line_start":651,"line_end":651,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640291,"byte_end":640294,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640299,"byte_end":640313,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640318,"byte_end":640321,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640326,"byte_end":640333,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640338,"byte_end":640383,"line_start":656,"line_end":656,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640388,"byte_end":640412,"line_start":657,"line_end":657,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640417,"byte_end":640422,"line_start":658,"line_end":658,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640427,"byte_end":640484,"line_start":659,"line_end":659,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640489,"byte_end":640510,"line_start":660,"line_end":660,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640515,"byte_end":640522,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640527,"byte_end":640600,"line_start":662,"line_end":662,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640605,"byte_end":640622,"line_start":663,"line_end":663,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640627,"byte_end":640662,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640667,"byte_end":640706,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640711,"byte_end":640737,"line_start":666,"line_end":666,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640742,"byte_end":640758,"line_start":667,"line_end":667,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640763,"byte_end":640770,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640775,"byte_end":640780,"line_start":669,"line_end":669,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640785,"byte_end":640807,"line_start":670,"line_end":670,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640812,"byte_end":640819,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641873,"byte_end":641903,"line_start":706,"line_end":706,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Builder>::initial_connection_window_size","value":"pub fn initial_connection_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for connection-level flow control\n for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for connection-level flow control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":640971,"byte_end":641054,"line_start":677,"line_end":677,"column_start":5,"column_end":88}},{"value":"/ for received data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641059,"byte_end":641081,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641086,"byte_end":641089,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ The initial window of a connection is used as part of flow control. For more details,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641094,"byte_end":641183,"line_start":680,"line_end":680,"column_start":5,"column_end":94}},{"value":"/ see [`FlowControl`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641188,"byte_end":641212,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641217,"byte_end":641220,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641225,"byte_end":641257,"line_start":683,"line_end":683,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641262,"byte_end":641265,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641270,"byte_end":641317,"line_start":685,"line_end":685,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641322,"byte_end":641325,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641330,"byte_end":641344,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641349,"byte_end":641352,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641357,"byte_end":641364,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641369,"byte_end":641414,"line_start":690,"line_end":690,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641419,"byte_end":641443,"line_start":691,"line_end":691,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641448,"byte_end":641453,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641458,"byte_end":641515,"line_start":693,"line_end":693,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641520,"byte_end":641541,"line_start":694,"line_end":694,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641546,"byte_end":641553,"line_start":695,"line_end":695,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641558,"byte_end":641631,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641636,"byte_end":641653,"line_start":697,"line_end":697,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641658,"byte_end":641693,"line_start":698,"line_end":698,"column_start":5,"column_end":40}},{"value":"/     .initial_connection_window_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641698,"byte_end":641748,"line_start":699,"line_end":699,"column_start":5,"column_end":55}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641753,"byte_end":641779,"line_start":700,"line_end":700,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641784,"byte_end":641800,"line_start":701,"line_end":701,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641805,"byte_end":641812,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641817,"byte_end":641822,"line_start":703,"line_end":703,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641827,"byte_end":641849,"line_start":704,"line_end":704,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":641854,"byte_end":641861,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643098,"byte_end":643112,"line_start":744,"line_end":744,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Builder>::max_frame_size","value":"pub fn max_frame_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the size (in octets) of the largest HTTP/2 frame payload that the\n configured server is able to accept.","sig":null,"attributes":[{"value":"/ Indicates the size (in octets) of the largest HTTP/2 frame payload that the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642030,"byte_end":642109,"line_start":711,"line_end":711,"column_start":5,"column_end":84}},{"value":"/ configured server is able to accept.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642114,"byte_end":642154,"line_start":712,"line_end":712,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642159,"byte_end":642162,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The sender may send data frames that are **smaller** than this value,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642167,"byte_end":642240,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/ but any data larger than `max` will be broken up into multiple `DATA`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642245,"byte_end":642318,"line_start":715,"line_end":715,"column_start":5,"column_end":78}},{"value":"/ frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642323,"byte_end":642334,"line_start":716,"line_end":716,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642339,"byte_end":642342,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The value **must** be between 16,384 and 16,777,215. The default value is 16,384.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642347,"byte_end":642432,"line_start":718,"line_end":718,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642437,"byte_end":642440,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642445,"byte_end":642459,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642464,"byte_end":642467,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642472,"byte_end":642479,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642484,"byte_end":642529,"line_start":723,"line_end":723,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642534,"byte_end":642558,"line_start":724,"line_end":724,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642563,"byte_end":642568,"line_start":725,"line_end":725,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642573,"byte_end":642630,"line_start":726,"line_end":726,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642635,"byte_end":642656,"line_start":727,"line_end":727,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642661,"byte_end":642668,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642673,"byte_end":642746,"line_start":729,"line_end":729,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642751,"byte_end":642768,"line_start":730,"line_end":730,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642773,"byte_end":642808,"line_start":731,"line_end":731,"column_start":5,"column_end":40}},{"value":"/     .max_frame_size(1_000_000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642813,"byte_end":642847,"line_start":732,"line_end":732,"column_start":5,"column_end":39}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642852,"byte_end":642878,"line_start":733,"line_end":733,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642883,"byte_end":642899,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642904,"byte_end":642911,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642916,"byte_end":642921,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642926,"byte_end":642948,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642953,"byte_end":642960,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642965,"byte_end":642968,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642973,"byte_end":642985,"line_start":740,"line_end":740,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642990,"byte_end":642993,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is not within the legal range specified","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":642998,"byte_end":643071,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ above.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643076,"byte_end":643086,"line_start":743,"line_end":743,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644279,"byte_end":644299,"line_start":778,"line_end":778,"column_start":12,"column_end":32},"name":"max_header_list_size","qualname":"<Builder>::max_header_list_size","value":"pub fn max_header_list_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max size of received header frames.","sig":null,"attributes":[{"value":"/ Sets the max size of received header frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643226,"byte_end":643274,"line_start":749,"line_end":749,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643279,"byte_end":643282,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This advisory setting informs a peer of the maximum size of header list","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643287,"byte_end":643362,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ that the sender is prepared to accept, in octets. The value is based on","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643367,"byte_end":643442,"line_start":752,"line_end":752,"column_start":5,"column_end":80}},{"value":"/ the uncompressed size of header fields, including the length of the name","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643447,"byte_end":643523,"line_start":753,"line_end":753,"column_start":5,"column_end":81}},{"value":"/ and value in octets plus an overhead of 32 octets for each header field.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643528,"byte_end":643604,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643609,"byte_end":643612,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ This setting is also used to limit the maximum amount of data that is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643617,"byte_end":643690,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ buffered to decode HEADERS frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643695,"byte_end":643733,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643738,"byte_end":643741,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643746,"byte_end":643760,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643765,"byte_end":643768,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643773,"byte_end":643780,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643785,"byte_end":643830,"line_start":762,"line_end":762,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643835,"byte_end":643859,"line_start":763,"line_end":763,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643864,"byte_end":643869,"line_start":764,"line_end":764,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643874,"byte_end":643931,"line_start":765,"line_end":765,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643936,"byte_end":643957,"line_start":766,"line_end":766,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643962,"byte_end":643969,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":643974,"byte_end":644047,"line_start":768,"line_end":768,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644052,"byte_end":644069,"line_start":769,"line_end":769,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644074,"byte_end":644109,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .max_header_list_size(16 * 1024)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644114,"byte_end":644154,"line_start":771,"line_end":771,"column_start":5,"column_end":45}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644159,"byte_end":644185,"line_start":772,"line_end":772,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644190,"byte_end":644206,"line_start":773,"line_end":773,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644211,"byte_end":644218,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644223,"byte_end":644228,"line_start":775,"line_end":775,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644233,"byte_end":644255,"line_start":776,"line_end":776,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644260,"byte_end":644267,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646115,"byte_end":646137,"line_start":826,"line_end":826,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Builder>::max_concurrent_streams","value":"pub fn max_concurrent_streams(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644419,"byte_end":644469,"line_start":783,"line_end":783,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644474,"byte_end":644477,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The maximum concurrent streams setting only controls the maximum number","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644482,"byte_end":644557,"line_start":785,"line_end":785,"column_start":5,"column_end":80}},{"value":"/ of streams that can be initiated by the remote peer. In other words,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644562,"byte_end":644634,"line_start":786,"line_end":786,"column_start":5,"column_end":77}},{"value":"/ when this setting is set to 100, this does not limit the number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644639,"byte_end":644709,"line_start":787,"line_end":787,"column_start":5,"column_end":75}},{"value":"/ concurrent streams that can be created by the caller.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644714,"byte_end":644771,"line_start":788,"line_end":788,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644776,"byte_end":644779,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ It is recommended that this value be no smaller than 100, so as to not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644784,"byte_end":644858,"line_start":790,"line_end":790,"column_start":5,"column_end":79}},{"value":"/ unnecessarily limit parallelism. However, any value is legal, including","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644863,"byte_end":644938,"line_start":791,"line_end":791,"column_start":5,"column_end":80}},{"value":"/ 0. If `max` is set to 0, then the remote will not be permitted to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":644943,"byte_end":645012,"line_start":792,"line_end":792,"column_start":5,"column_end":74}},{"value":"/ initiate streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645017,"byte_end":645038,"line_start":793,"line_end":793,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645043,"byte_end":645046,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Note that streams in the reserved state, i.e., push promises that have","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645051,"byte_end":645125,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/ been reserved but the stream has not started, do not count against this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645130,"byte_end":645205,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ setting.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645210,"byte_end":645222,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645227,"byte_end":645230,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Also note that if the remote *does* exceed the value set here, it is not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645235,"byte_end":645311,"line_start":799,"line_end":799,"column_start":5,"column_end":81}},{"value":"/ a protocol level error. Instead, the `h2` library will immediately reset","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645316,"byte_end":645392,"line_start":800,"line_end":800,"column_start":5,"column_end":81}},{"value":"/ the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645397,"byte_end":645412,"line_start":801,"line_end":801,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645417,"byte_end":645420,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2 spec for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645425,"byte_end":645485,"line_start":803,"line_end":803,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645490,"byte_end":645493,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645498,"byte_end":645572,"line_start":805,"line_end":805,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645577,"byte_end":645580,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645585,"byte_end":645599,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645604,"byte_end":645607,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645612,"byte_end":645619,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645624,"byte_end":645669,"line_start":810,"line_end":810,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645674,"byte_end":645698,"line_start":811,"line_end":811,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645703,"byte_end":645708,"line_start":812,"line_end":812,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645713,"byte_end":645770,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645775,"byte_end":645796,"line_start":814,"line_end":814,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645801,"byte_end":645808,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645813,"byte_end":645886,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645891,"byte_end":645908,"line_start":817,"line_end":817,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645913,"byte_end":645948,"line_start":818,"line_end":818,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645953,"byte_end":645990,"line_start":819,"line_end":819,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":645995,"byte_end":646021,"line_start":820,"line_end":820,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646026,"byte_end":646042,"line_start":821,"line_end":821,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646047,"byte_end":646054,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646059,"byte_end":646064,"line_start":823,"line_end":823,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646069,"byte_end":646091,"line_start":824,"line_end":824,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646096,"byte_end":646103,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647885,"byte_end":647913,"line_start":872,"line_end":872,"column_start":12,"column_end":40},"name":"max_concurrent_reset_streams","qualname":"<Builder>::max_concurrent_reset_streams","value":"pub fn max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646259,"byte_end":646323,"line_start":831,"line_end":831,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646328,"byte_end":646331,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset by either calling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646336,"byte_end":646391,"line_start":833,"line_end":833,"column_start":5,"column_end":60}},{"value":"/ [`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646396,"byte_end":646471,"line_start":834,"line_end":834,"column_start":5,"column_end":80}},{"value":"/ before completing the stream, the HTTP/2 specification requires that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646476,"byte_end":646548,"line_start":835,"line_end":835,"column_start":5,"column_end":77}},{"value":"/ any further frames received for that stream must be ignored for \"some","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646553,"byte_end":646626,"line_start":836,"line_end":836,"column_start":5,"column_end":78}},{"value":"/ time\".","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646631,"byte_end":646641,"line_start":837,"line_end":837,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646646,"byte_end":646649,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646654,"byte_end":646730,"line_start":839,"line_end":839,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646735,"byte_end":646810,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646815,"byte_end":646850,"line_start":841,"line_end":841,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646855,"byte_end":646858,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ The `max_concurrent_reset_streams` setting configures sets an upper","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646863,"byte_end":646934,"line_start":843,"line_end":843,"column_start":5,"column_end":76}},{"value":"/ bound on the amount of state that is maintained. When this max value is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":646939,"byte_end":647014,"line_start":844,"line_end":844,"column_start":5,"column_end":80}},{"value":"/ reached, the oldest reset stream is purged from memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647019,"byte_end":647078,"line_start":845,"line_end":845,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647083,"byte_end":647086,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647091,"byte_end":647167,"line_start":847,"line_end":847,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647172,"byte_end":647243,"line_start":848,"line_end":848,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647248,"byte_end":647295,"line_start":849,"line_end":849,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647300,"byte_end":647303,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ The default value is 10.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647308,"byte_end":647336,"line_start":851,"line_end":851,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647341,"byte_end":647344,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647349,"byte_end":647363,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647368,"byte_end":647371,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647376,"byte_end":647383,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647388,"byte_end":647433,"line_start":856,"line_end":856,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647438,"byte_end":647462,"line_start":857,"line_end":857,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647467,"byte_end":647472,"line_start":858,"line_end":858,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647477,"byte_end":647534,"line_start":859,"line_end":859,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647539,"byte_end":647560,"line_start":860,"line_end":860,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647565,"byte_end":647572,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647577,"byte_end":647650,"line_start":862,"line_end":862,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647655,"byte_end":647672,"line_start":863,"line_end":863,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647677,"byte_end":647712,"line_start":864,"line_end":864,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_reset_streams(1000)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647717,"byte_end":647760,"line_start":865,"line_end":865,"column_start":5,"column_end":48}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647765,"byte_end":647791,"line_start":866,"line_end":866,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647796,"byte_end":647812,"line_start":867,"line_end":867,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647817,"byte_end":647824,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647829,"byte_end":647834,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647839,"byte_end":647861,"line_start":870,"line_end":870,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":647866,"byte_end":647873,"line_start":871,"line_end":871,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648508,"byte_end":648528,"line_start":889,"line_end":889,"column_start":12,"column_end":32},"name":"max_send_buffer_size","qualname":"<Builder>::max_send_buffer_size","value":"pub fn max_send_buffer_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum send buffer size per stream.","sig":null,"attributes":[{"value":"/ Sets the maximum send buffer size per stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648013,"byte_end":648062,"line_start":877,"line_end":877,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648067,"byte_end":648070,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ Once a stream has buffered up to (or over) the maximum, the stream's","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648075,"byte_end":648147,"line_start":879,"line_end":879,"column_start":5,"column_end":77}},{"value":"/ flow control will not \"poll\" additional capacity. Once bytes for the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648152,"byte_end":648224,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ stream have been written to the connection, the send buffer capacity","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648229,"byte_end":648301,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/ will be freed up again.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648306,"byte_end":648333,"line_start":882,"line_end":882,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648338,"byte_end":648341,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ The default is currently ~400MB, but may change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648346,"byte_end":648398,"line_start":884,"line_end":884,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648403,"byte_end":648406,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648411,"byte_end":648423,"line_start":886,"line_end":886,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648428,"byte_end":648431,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is larger than `u32::MAX`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648436,"byte_end":648496,"line_start":888,"line_end":888,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650343,"byte_end":650364,"line_start":937,"line_end":937,"column_start":12,"column_end":33},"name":"reset_stream_duration","qualname":"<Builder>::reset_stream_duration","value":"pub fn reset_stream_duration(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648680,"byte_end":648744,"line_start":895,"line_end":895,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648749,"byte_end":648752,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset by either calling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648757,"byte_end":648812,"line_start":897,"line_end":897,"column_start":5,"column_end":60}},{"value":"/ [`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648817,"byte_end":648892,"line_start":898,"line_end":898,"column_start":5,"column_end":80}},{"value":"/ before completing the stream, the HTTP/2 specification requires that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648897,"byte_end":648969,"line_start":899,"line_end":899,"column_start":5,"column_end":77}},{"value":"/ any further frames received for that stream must be ignored for \"some","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":648974,"byte_end":649047,"line_start":900,"line_end":900,"column_start":5,"column_end":78}},{"value":"/ time\".","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649052,"byte_end":649062,"line_start":901,"line_end":901,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649067,"byte_end":649070,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649075,"byte_end":649151,"line_start":903,"line_end":903,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649156,"byte_end":649231,"line_start":904,"line_end":904,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649236,"byte_end":649271,"line_start":905,"line_end":905,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649276,"byte_end":649279,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ The `reset_stream_duration` setting configures the max amount of time","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649284,"byte_end":649357,"line_start":907,"line_end":907,"column_start":5,"column_end":78}},{"value":"/ this state will be maintained in memory. Once the duration elapses, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649362,"byte_end":649437,"line_start":908,"line_end":908,"column_start":5,"column_end":80}},{"value":"/ stream state is purged from memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649442,"byte_end":649481,"line_start":909,"line_end":909,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649486,"byte_end":649489,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649494,"byte_end":649570,"line_start":911,"line_end":911,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649575,"byte_end":649646,"line_start":912,"line_end":912,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649651,"byte_end":649698,"line_start":913,"line_end":913,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649703,"byte_end":649706,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The default value is 30 seconds.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649711,"byte_end":649747,"line_start":915,"line_end":915,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649752,"byte_end":649755,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649760,"byte_end":649774,"line_start":917,"line_end":917,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649779,"byte_end":649782,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649787,"byte_end":649794,"line_start":919,"line_end":919,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649799,"byte_end":649844,"line_start":920,"line_end":920,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649849,"byte_end":649873,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649878,"byte_end":649908,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649913,"byte_end":649918,"line_start":923,"line_end":923,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649923,"byte_end":649980,"line_start":924,"line_end":924,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":649985,"byte_end":650006,"line_start":925,"line_end":925,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650011,"byte_end":650018,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650023,"byte_end":650096,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650101,"byte_end":650118,"line_start":928,"line_end":928,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650123,"byte_end":650158,"line_start":929,"line_end":929,"column_start":5,"column_end":40}},{"value":"/     .reset_stream_duration(Duration::from_secs(10))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650163,"byte_end":650218,"line_start":930,"line_end":930,"column_start":5,"column_end":60}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650223,"byte_end":650249,"line_start":931,"line_end":931,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650254,"byte_end":650270,"line_start":932,"line_end":932,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650275,"byte_end":650282,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650287,"byte_end":650292,"line_start":934,"line_end":934,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650297,"byte_end":650319,"line_start":935,"line_end":935,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650324,"byte_end":650331,"line_start":936,"line_end":936,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650629,"byte_end":650652,"line_start":945,"line_end":945,"column_start":12,"column_end":35},"name":"enable_connect_protocol","qualname":"<Builder>::enable_connect_protocol","value":"pub fn enable_connect_protocol(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the [extended CONNECT protocol].","sig":null,"attributes":[{"value":"/ Enables the [extended CONNECT protocol].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650472,"byte_end":650516,"line_start":942,"line_end":942,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650521,"byte_end":650524,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ [extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650529,"byte_end":650617,"line_start":944,"line_end":944,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652660,"byte_end":652669,"line_start":1006,"line_end":1006,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"pub fn handshake<T, B>(&Self, T) -> Handshake<T, B> where T: AsyncRead +\nAsyncWrite + Unpin, B: Buf + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 server backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 server backed by `io`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650763,"byte_end":650821,"line_start":950,"line_end":950,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650826,"byte_end":650829,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650834,"byte_end":650909,"line_start":952,"line_end":952,"column_start":5,"column_end":80}},{"value":"/ the [HTTP/2 handshake]. See [Handshake] for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650914,"byte_end":650975,"line_start":953,"line_end":953,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650980,"byte_end":650983,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ Returns a future which resolves to the [`Connection`] instance once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":650988,"byte_end":651063,"line_start":955,"line_end":955,"column_start":5,"column_end":80}},{"value":"/ HTTP/2 handshake has been completed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651068,"byte_end":651108,"line_start":956,"line_end":956,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651113,"byte_end":651116,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ This function also allows the caller to configure the send payload data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651121,"byte_end":651196,"line_start":958,"line_end":958,"column_start":5,"column_end":80}},{"value":"/ type. See [Outbound data type] for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651201,"byte_end":651253,"line_start":959,"line_end":959,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651258,"byte_end":651261,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651266,"byte_end":651343,"line_start":961,"line_end":961,"column_start":5,"column_end":82}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651348,"byte_end":651388,"line_start":962,"line_end":962,"column_start":5,"column_end":45}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651393,"byte_end":651435,"line_start":963,"line_end":963,"column_start":5,"column_end":47}},{"value":"/ [Outbound data type]: ../index.html#outbound-data-type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651440,"byte_end":651499,"line_start":964,"line_end":964,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651504,"byte_end":651507,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651512,"byte_end":651526,"line_start":966,"line_end":966,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651531,"byte_end":651534,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651539,"byte_end":651555,"line_start":968,"line_end":968,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651560,"byte_end":651563,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651568,"byte_end":651575,"line_start":970,"line_end":970,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651580,"byte_end":651625,"line_start":971,"line_end":971,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651630,"byte_end":651654,"line_start":972,"line_end":972,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651659,"byte_end":651664,"line_start":973,"line_end":973,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651669,"byte_end":651726,"line_start":974,"line_end":974,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651731,"byte_end":651752,"line_start":975,"line_end":975,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651757,"byte_end":651764,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651769,"byte_end":651842,"line_start":977,"line_end":977,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651847,"byte_end":651864,"line_start":978,"line_end":978,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651869,"byte_end":651904,"line_start":979,"line_end":979,"column_start":5,"column_end":40}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651909,"byte_end":651935,"line_start":980,"line_end":980,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651940,"byte_end":651956,"line_start":981,"line_end":981,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651961,"byte_end":651968,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651973,"byte_end":651978,"line_start":983,"line_end":983,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":651983,"byte_end":652005,"line_start":984,"line_end":984,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652010,"byte_end":652017,"line_start":985,"line_end":985,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652022,"byte_end":652025,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Configures the send-payload data type. In this case, the outbound data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652030,"byte_end":652104,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/ type will be `&'static [u8]`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652109,"byte_end":652142,"line_start":988,"line_end":988,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652147,"byte_end":652150,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652155,"byte_end":652162,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652167,"byte_end":652212,"line_start":991,"line_end":991,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652217,"byte_end":652241,"line_start":992,"line_end":992,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652246,"byte_end":652251,"line_start":993,"line_end":993,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652256,"byte_end":652313,"line_start":994,"line_end":994,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T, &'static [u8]>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652318,"byte_end":652354,"line_start":995,"line_end":995,"column_start":5,"column_end":41}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652359,"byte_end":652366,"line_start":996,"line_end":996,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652371,"byte_end":652444,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652449,"byte_end":652466,"line_start":998,"line_end":998,"column_start":5,"column_end":22}},{"value":"/ let server_fut: Handshake<_, &'static [u8]> = Builder::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652471,"byte_end":652535,"line_start":999,"line_end":999,"column_start":5,"column_end":69}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652540,"byte_end":652566,"line_start":1000,"line_end":1000,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652571,"byte_end":652587,"line_start":1001,"line_end":1001,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652592,"byte_end":652599,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652604,"byte_end":652609,"line_start":1003,"line_end":1003,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652614,"byte_end":652636,"line_start":1004,"line_end":1004,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652641,"byte_end":652648,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653739,"byte_end":653752,"line_start":1040,"line_end":1040,"column_start":12,"column_end":25},"name":"send_response","qualname":"<SendResponse<B>>::send_response","value":"pub fn send_response(&mut Self, Response<()>, bool)\n-> Result<SendStream<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Send a response to a client request.","sig":null,"attributes":[{"value":"/ Send a response to a client request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653010,"byte_end":653050,"line_start":1024,"line_end":1024,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653055,"byte_end":653058,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendStream`] instance is returned. This instance can be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653063,"byte_end":653138,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/ used to stream the response body and send trailers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653143,"byte_end":653198,"line_start":1027,"line_end":1027,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653203,"byte_end":653206,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ If a body or trailers will be sent on the returned [`SendStream`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653211,"byte_end":653280,"line_start":1029,"line_end":1029,"column_start":5,"column_end":74}},{"value":"/ instance, then `end_of_stream` must be set to `false` when calling this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653285,"byte_end":653360,"line_start":1030,"line_end":1030,"column_start":5,"column_end":80}},{"value":"/ function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653365,"byte_end":653378,"line_start":1031,"line_end":1031,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653383,"byte_end":653386,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ The [`SendResponse`] instance is already associated with a received","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653391,"byte_end":653462,"line_start":1033,"line_end":1033,"column_start":5,"column_end":76}},{"value":"/ request.  This function may only be called once per instance and only if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653467,"byte_end":653543,"line_start":1034,"line_end":1034,"column_start":5,"column_end":81}},{"value":"/ [`send_reset`] has not been previously called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653548,"byte_end":653598,"line_start":1035,"line_end":1035,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653603,"byte_end":653606,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ [`SendResponse`]: #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653611,"byte_end":653634,"line_start":1037,"line_end":1037,"column_start":5,"column_end":28}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653639,"byte_end":653684,"line_start":1038,"line_end":1038,"column_start":5,"column_end":50}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":653689,"byte_end":653727,"line_start":1039,"line_end":1039,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654216,"byte_end":654228,"line_start":1056,"line_end":1056,"column_start":12,"column_end":24},"name":"push_request","qualname":"<SendResponse<B>>::push_request","value":"pub fn push_request(&mut Self, Request<()>)\n-> Result<SendPushedResponse<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Push a request and response to the client","sig":null,"attributes":[{"value":"/ Push a request and response to the client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654054,"byte_end":654099,"line_start":1051,"line_end":1051,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654104,"byte_end":654107,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendResponse`] instance is returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654112,"byte_end":654168,"line_start":1053,"line_end":1053,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654173,"byte_end":654176,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ [`SendResponse`]: #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654181,"byte_end":654204,"line_start":1055,"line_end":1055,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655148,"byte_end":655158,"line_start":1083,"line_end":1083,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendResponse<B>>::send_reset","value":"pub fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Send a stream reset to the peer.","sig":null,"attributes":[{"value":"/ Send a stream reset to the peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654545,"byte_end":654581,"line_start":1068,"line_end":1068,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654586,"byte_end":654589,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ This essentially cancels the stream, including any inbound or outbound","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654594,"byte_end":654668,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/ data streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654673,"byte_end":654690,"line_start":1071,"line_end":1071,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654695,"byte_end":654698,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ If this function is called before [`send_response`], a call to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654703,"byte_end":654769,"line_start":1073,"line_end":1073,"column_start":5,"column_end":71}},{"value":"/ [`send_response`] will result in an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654774,"byte_end":654820,"line_start":1074,"line_end":1074,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654825,"byte_end":654828,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ If this function is called while a [`SendStream`] instance is active,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654833,"byte_end":654906,"line_start":1076,"line_end":1076,"column_start":5,"column_end":78}},{"value":"/ any further use of the instance will result in an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654911,"byte_end":654971,"line_start":1077,"line_end":1077,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654976,"byte_end":654979,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ This function should only be called once.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":654984,"byte_end":655029,"line_start":1079,"line_end":1079,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655034,"byte_end":655037,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ [`send_response`]: #method.send_response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655042,"byte_end":655086,"line_start":1081,"line_end":1081,"column_start":5,"column_end":49}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655091,"byte_end":655136,"line_start":1082,"line_end":1082,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655723,"byte_end":655733,"line_start":1099,"line_end":1099,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendResponse<B>>::poll_reset","value":"pub fn poll_reset(&mut Self, &mut Context)\n-> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655237,"byte_end":655297,"line_start":1087,"line_end":1087,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655302,"byte_end":655305,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655310,"byte_end":655372,"line_start":1089,"line_end":1089,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655377,"byte_end":655445,"line_start":1090,"line_end":1090,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655450,"byte_end":655453,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655458,"byte_end":655527,"line_start":1092,"line_end":1092,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655532,"byte_end":655581,"line_start":1093,"line_end":1093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655586,"byte_end":655589,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655594,"byte_end":655605,"line_start":1095,"line_end":1095,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655610,"byte_end":655613,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Calling this method after having called `send_response` will return","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655618,"byte_end":655689,"line_start":1097,"line_end":1097,"column_start":5,"column_end":76}},{"value":"/ a user error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655694,"byte_end":655711,"line_start":1098,"line_end":1098,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656036,"byte_end":656045,"line_start":1108,"line_end":1108,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendResponse<B>>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655883,"byte_end":655932,"line_start":1103,"line_end":1103,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655937,"byte_end":655940,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655945,"byte_end":655957,"line_start":1105,"line_end":1105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655962,"byte_end":655965,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":655970,"byte_end":656024,"line_start":1107,"line_end":1107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656962,"byte_end":656975,"line_start":1132,"line_end":1132,"column_start":12,"column_end":25},"name":"send_response","qualname":"<SendPushedResponse<B>>::send_response","value":"pub fn send_response(&mut Self, Response<()>, bool)\n-> Result<SendStream<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Send a response to a promised request.","sig":null,"attributes":[{"value":"/ Send a response to a promised request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656227,"byte_end":656269,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656274,"byte_end":656277,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendStream`] instance is returned. This instance can be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656282,"byte_end":656357,"line_start":1118,"line_end":1118,"column_start":5,"column_end":80}},{"value":"/ used to stream the response body and send trailers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656362,"byte_end":656417,"line_start":1119,"line_end":1119,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656422,"byte_end":656425,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ If a body or trailers will be sent on the returned [`SendStream`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656430,"byte_end":656499,"line_start":1121,"line_end":1121,"column_start":5,"column_end":74}},{"value":"/ instance, then `end_of_stream` must be set to `false` when calling this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656504,"byte_end":656579,"line_start":1122,"line_end":1122,"column_start":5,"column_end":80}},{"value":"/ function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656584,"byte_end":656597,"line_start":1123,"line_end":1123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656602,"byte_end":656605,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ The [`SendPushedResponse`] instance is associated with a promised","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656610,"byte_end":656679,"line_start":1125,"line_end":1125,"column_start":5,"column_end":74}},{"value":"/ request.  This function may only be called once per instance and only if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656684,"byte_end":656760,"line_start":1126,"line_end":1126,"column_start":5,"column_end":81}},{"value":"/ [`send_reset`] has not been previously called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656765,"byte_end":656815,"line_start":1127,"line_end":1127,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656820,"byte_end":656823,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ [`SendPushedResponse`]: #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656828,"byte_end":656857,"line_start":1129,"line_end":1129,"column_start":5,"column_end":34}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656862,"byte_end":656907,"line_start":1130,"line_end":1130,"column_start":5,"column_end":50}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656912,"byte_end":656950,"line_start":1131,"line_end":1131,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657776,"byte_end":657786,"line_start":1155,"line_end":1155,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendPushedResponse<B>>::send_reset","value":"pub fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Send a stream reset to the peer.","sig":null,"attributes":[{"value":"/ Send a stream reset to the peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657173,"byte_end":657209,"line_start":1140,"line_end":1140,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657214,"byte_end":657217,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ This essentially cancels the stream, including any inbound or outbound","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657222,"byte_end":657296,"line_start":1142,"line_end":1142,"column_start":5,"column_end":79}},{"value":"/ data streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657301,"byte_end":657318,"line_start":1143,"line_end":1143,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657323,"byte_end":657326,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ If this function is called before [`send_response`], a call to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657331,"byte_end":657397,"line_start":1145,"line_end":1145,"column_start":5,"column_end":71}},{"value":"/ [`send_response`] will result in an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657402,"byte_end":657448,"line_start":1146,"line_end":1146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657453,"byte_end":657456,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ If this function is called while a [`SendStream`] instance is active,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657461,"byte_end":657534,"line_start":1148,"line_end":1148,"column_start":5,"column_end":78}},{"value":"/ any further use of the instance will result in an error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657539,"byte_end":657599,"line_start":1149,"line_end":1149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657604,"byte_end":657607,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ This function should only be called once.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657612,"byte_end":657657,"line_start":1151,"line_end":1151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657662,"byte_end":657665,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ [`send_response`]: #method.send_response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657670,"byte_end":657714,"line_start":1153,"line_end":1153,"column_start":5,"column_end":49}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657719,"byte_end":657764,"line_start":1154,"line_end":1154,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658351,"byte_end":658361,"line_start":1171,"line_end":1171,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendPushedResponse<B>>::poll_reset","value":"pub fn poll_reset(&mut Self, &mut Context)\n-> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657865,"byte_end":657925,"line_start":1159,"line_end":1159,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657930,"byte_end":657933,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":657938,"byte_end":658000,"line_start":1161,"line_end":1161,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658005,"byte_end":658073,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658078,"byte_end":658081,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658086,"byte_end":658155,"line_start":1164,"line_end":1164,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658160,"byte_end":658209,"line_start":1165,"line_end":1165,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658214,"byte_end":658217,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658222,"byte_end":658233,"line_start":1167,"line_end":1167,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658238,"byte_end":658241,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ Calling this method after having called `send_response` will return","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658246,"byte_end":658317,"line_start":1169,"line_end":1169,"column_start":5,"column_end":76}},{"value":"/ a user error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658322,"byte_end":658339,"line_start":1170,"line_end":1170,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658629,"byte_end":658638,"line_start":1180,"line_end":1180,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendPushedResponse<B>>::stream_id","value":"pub fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658476,"byte_end":658525,"line_start":1175,"line_end":1175,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658530,"byte_end":658533,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658538,"byte_end":658550,"line_start":1177,"line_end":1177,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658555,"byte_end":658558,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658563,"byte_end":658617,"line_start":1179,"line_end":1179,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":11547},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676247,"byte_end":676257,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"SendStream","qualname":"::share::SendStream","value":"SendStream {  }","parent":null,"children":[{"krate":0,"index":11549}],"decl_id":null,"docs":" Sends the body stream and trailers to the remote peer.","sig":null,"attributes":[{"value":"/ Sends the body stream and trailers to the remote peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":671773,"byte_end":671831,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":671832,"byte_end":671835,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":671836,"byte_end":671850,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":671851,"byte_end":671854,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ A `SendStream` is provided by [`SendRequest`] and [`SendResponse`] once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":671855,"byte_end":671934,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ HTTP/2 message header has been sent sent. It is used to stream the message","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":671935,"byte_end":672013,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ body and send the message trailers. See method level documentation for more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672014,"byte_end":672093,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672094,"byte_end":672106,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672107,"byte_end":672110,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `SendStream` instance is also used to manage outbound flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672111,"byte_end":672186,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672187,"byte_end":672190,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ If a `SendStream` is dropped without explicitly closing the send stream, a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672191,"byte_end":672269,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ `RST_STREAM` frame will be sent. This essentially cancels the request /","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672270,"byte_end":672345,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ response exchange.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672346,"byte_end":672368,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672369,"byte_end":672372,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The ways to explicitly close the send stream are:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672373,"byte_end":672426,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672427,"byte_end":672430,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ * Set `end_of_stream` to true when calling [`send_request`],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672431,"byte_end":672495,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/   [`send_response`], or [`send_data`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672496,"byte_end":672538,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ * Send trailers with [`send_trailers`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672539,"byte_end":672582,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ * Explicitly reset the stream with [`send_reset`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672583,"byte_end":672637,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672638,"byte_end":672641,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Flow control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672642,"byte_end":672660,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672661,"byte_end":672664,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ In HTTP/2, data cannot be sent to the remote peer unless there is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672665,"byte_end":672734,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/ available window capacity on both the stream and the connection. When a data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672735,"byte_end":672815,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ frame is sent, both the stream window and the connection window are","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672816,"byte_end":672887,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ decremented. When the stream level window reaches zero, no further data can","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672888,"byte_end":672967,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ be sent on that stream. When the connection level window reaches zero, no","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":672968,"byte_end":673045,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ further data can be sent on any stream for that connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673046,"byte_end":673109,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673110,"byte_end":673113,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ When the remote peer is ready to receive more data, it sends `WINDOW_UPDATE`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673114,"byte_end":673194,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ frames. These frames increment the windows. See the [specification] for more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673195,"byte_end":673275,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ details on the principles of HTTP/2 flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673276,"byte_end":673329,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673330,"byte_end":673333,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The implications for sending data are that the caller **should** ensure that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673334,"byte_end":673414,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ both the stream and the connection has available window capacity before","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673415,"byte_end":673490,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ loading the data to send into memory. The `SendStream` instance provides the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673491,"byte_end":673571,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ necessary APIs to perform this logic. This, however, is not an obligation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673572,"byte_end":673650,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ If the caller attempts to send data on a stream when there is no available","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673651,"byte_end":673729,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ window capacity, the library will buffer the data until capacity becomes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673730,"byte_end":673806,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ available, at which point the buffer will be flushed to the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673807,"byte_end":673882,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673883,"byte_end":673886,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: There is no bound on the amount of data that the library will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673887,"byte_end":673962,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ buffer. If you are sending large amounts of data, you really should hook","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":673963,"byte_end":674039,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ into the flow control lifecycle. Otherwise, you risk using up significant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674040,"byte_end":674117,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ amounts of memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674118,"byte_end":674140,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674141,"byte_end":674144,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ To hook into the flow control lifecycle, the caller signals to the library","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674145,"byte_end":674223,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ that it intends to send data by calling [`reserve_capacity`], specifying the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674224,"byte_end":674304,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ amount of data, in octets, that the caller intends to send. After this,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674305,"byte_end":674380,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ `poll_capacity` is used to be notified when the requested capacity is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674381,"byte_end":674454,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ assigned to the stream. Once [`poll_capacity`] returns `Ready` with the number","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674455,"byte_end":674537,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ of octets available to the stream, the caller is able to actually send the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674538,"byte_end":674616,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ data using [`send_data`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674617,"byte_end":674646,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674647,"byte_end":674650,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Because there is also a connection level window that applies to **all**","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674651,"byte_end":674726,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ streams on a connection, when capacity is assigned to a stream (indicated by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674727,"byte_end":674807,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ `poll_capacity` returning `Ready`), this capacity is reserved on the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674808,"byte_end":674880,"line_start":72,"line_end":72,"column_start":1,"column_end":73}},{"value":"/ connection and will **not** be assigned to any other stream. If data is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674881,"byte_end":674956,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ never written to the stream, that capacity is effectively lost to other","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":674957,"byte_end":675032,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ streams and this introduces the risk of deadlocking a connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675033,"byte_end":675102,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675103,"byte_end":675106,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ To avoid throttling data on a connection, the caller should not reserve","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675107,"byte_end":675182,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ capacity until ready to send data and once any capacity is assigned to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675183,"byte_end":675261,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ stream, the caller should immediately send data consuming this capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675262,"byte_end":675338,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ There is no guarantee as to when the full capacity requested will become","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675339,"byte_end":675415,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ available. For example, if the caller requests 64 KB of data and 512 bytes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675416,"byte_end":675494,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ become available, the caller should immediately send 512 bytes of data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675495,"byte_end":675570,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675571,"byte_end":675574,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ See [`reserve_capacity`] documentation for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675575,"byte_end":675635,"line_start":84,"line_end":84,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675636,"byte_end":675639,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`]: client/struct.SendRequest.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675640,"byte_end":675691,"line_start":86,"line_end":86,"column_start":1,"column_end":52}},{"value":"/ [`SendResponse`]: server/struct.SendResponse.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675692,"byte_end":675745,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/ [specification]: http://httpwg.org/specs/rfc7540.html#FlowControl","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675746,"byte_end":675815,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/ [`reserve_capacity`]: #method.reserve_capacity","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675816,"byte_end":675866,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/ [`poll_capacity`]: #method.poll_capacity","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675867,"byte_end":675911,"line_start":90,"line_end":90,"column_start":1,"column_end":45}},{"value":"/ [`send_data`]: #method.send_data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675912,"byte_end":675948,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/ [`send_request`]: client/struct.SendRequest.html#method.send_request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":675949,"byte_end":676021,"line_start":92,"line_end":92,"column_start":1,"column_end":73}},{"value":"/ [`send_response`]: server/struct.SendResponse.html#method.send_response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676022,"byte_end":676097,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ [`send_data`]: #method.send_data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676098,"byte_end":676134,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/ [`send_trailers`]: #method.send_trailers","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676135,"byte_end":676179,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676180,"byte_end":676218,"line_start":96,"line_end":96,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":11553},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676881,"byte_end":676889,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::share::StreamId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream identifier, as described in [Section 5.1.1] of RFC 7540.","sig":null,"attributes":[{"value":"/ A stream identifier, as described in [Section 5.1.1] of RFC 7540.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676303,"byte_end":676372,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676373,"byte_end":676376,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Streams are identified with an unsigned 31-bit integer. Streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676377,"byte_end":676444,"line_start":104,"line_end":104,"column_start":1,"column_end":68}},{"value":"/ initiated by a client MUST use odd-numbered stream identifiers; those","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676445,"byte_end":676518,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ initiated by the server MUST use even-numbered stream identifiers.  A","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676519,"byte_end":676592,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ stream identifier of zero (0x0) is used for connection control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676593,"byte_end":676659,"line_start":107,"line_end":107,"column_start":1,"column_end":67}},{"value":"/ messages; the stream identifier of zero cannot be used to establish a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676660,"byte_end":676733,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/ new stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676734,"byte_end":676749,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676750,"byte_end":676753,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [Section 5.1.1]: https://tools.ietf.org/html/rfc7540#section-5.1.1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676754,"byte_end":676824,"line_start":111,"line_end":111,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3484},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677769,"byte_end":677779,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"RecvStream","qualname":"::share::RecvStream","value":"RecvStream {  }","parent":null,"children":[{"krate":0,"index":3485}],"decl_id":null,"docs":" Receives the body stream and trailers from the remote peer.","sig":null,"attributes":[{"value":"/ Receives the body stream and trailers from the remote peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676897,"byte_end":676960,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676961,"byte_end":676964,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ A `RecvStream` is provided by [`client::ResponseFuture`] and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":676965,"byte_end":677029,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/ [`server::Connection`] with the received HTTP/2 message head (the response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677030,"byte_end":677108,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/ and request head respectively).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677109,"byte_end":677144,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677145,"byte_end":677148,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ A `RecvStream` instance is used to receive the streaming message body and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677149,"byte_end":677226,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/ any trailers from the remote peer. It is also used to manage inbound flow","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677227,"byte_end":677304,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677305,"byte_end":677317,"line_start":123,"line_end":123,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677318,"byte_end":677321,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ See method level documentation for more details on receiving data. See","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677322,"byte_end":677396,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/ [`FlowControl`] for more details on inbound flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677397,"byte_end":677458,"line_start":126,"line_end":126,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677459,"byte_end":677462,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`client::ResponseFuture`]: client/struct.ResponseFuture.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677463,"byte_end":677528,"line_start":128,"line_end":128,"column_start":1,"column_end":66}},{"value":"/ [`server::Connection`]: server/struct.Connection.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677529,"byte_end":677586,"line_start":129,"line_end":129,"column_start":1,"column_end":58}},{"value":"/ [`FlowControl`]: struct.FlowControl.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677587,"byte_end":677631,"line_start":130,"line_end":130,"column_start":1,"column_end":45}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677632,"byte_end":677708,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677709,"byte_end":677757,"line_start":132,"line_end":132,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":11570},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680337,"byte_end":680348,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"FlowControl","qualname":"::share::FlowControl","value":"FlowControl {  }","parent":null,"children":[{"krate":0,"index":11571}],"decl_id":null,"docs":" A handle to release window capacity to a remote stream.","sig":null,"attributes":[{"value":"/ A handle to release window capacity to a remote stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677809,"byte_end":677868,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677869,"byte_end":677872,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This type allows the caller to manage inbound data [flow control]. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677873,"byte_end":677947,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ caller is expected to call [`release_capacity`] after dropping data frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":677948,"byte_end":678027,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678028,"byte_end":678031,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678032,"byte_end":678046,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678047,"byte_end":678050,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Each stream has a window size. This window size is the maximum amount of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678051,"byte_end":678127,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/ inbound data that can be in-flight. In-flight data is defined as data that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678128,"byte_end":678206,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ has been received, but not yet released.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678207,"byte_end":678251,"line_start":146,"line_end":146,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678252,"byte_end":678255,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ When a stream is created, the window size is set to the connection's initial","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678256,"byte_end":678336,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ window size value. When a data frame is received, the window size is then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678337,"byte_end":678414,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ decremented by size of the data frame before the data is provided to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678415,"byte_end":678491,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ caller. As the caller finishes using the data, [`release_capacity`] must be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678492,"byte_end":678571,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ called. This will then increment the window size again, allowing the peer to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678572,"byte_end":678652,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/ send more data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678653,"byte_end":678672,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678673,"byte_end":678676,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ There is also a connection level window as well as the stream level window.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678677,"byte_end":678756,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ Received data counts against the connection level window as well and calls","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678757,"byte_end":678835,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ to [`release_capacity`] will also increment the connection level window.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678836,"byte_end":678912,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678913,"byte_end":678916,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Sending `WINDOW_UPDATE` frames","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678917,"byte_end":678953,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678954,"byte_end":678957,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ `WINDOW_UPDATE` frames will not be sent out for **every** call to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":678958,"byte_end":679027,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/ `release_capacity`, as this would end up slowing down the protocol. Instead,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679028,"byte_end":679108,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ `h2` waits until the window size is increased to a certain threshold and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679109,"byte_end":679185,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"/ then sends out a single `WINDOW_UPDATE` frame representing all the calls to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679186,"byte_end":679265,"line_start":164,"line_end":164,"column_start":1,"column_end":80}},{"value":"/ `release_capacity` since the last `WINDOW_UPDATE` frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679266,"byte_end":679326,"line_start":165,"line_end":165,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679327,"byte_end":679330,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This essentially batches window updating.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679331,"byte_end":679376,"line_start":167,"line_end":167,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679377,"byte_end":679380,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Scenarios","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679381,"byte_end":679396,"line_start":169,"line_end":169,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679397,"byte_end":679400,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Following is a basic scenario with an HTTP/2 connection containing a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679401,"byte_end":679473,"line_start":171,"line_end":171,"column_start":1,"column_end":73}},{"value":"/ single active stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679474,"byte_end":679499,"line_start":172,"line_end":172,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679500,"byte_end":679503,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ * A new stream is activated. The receive window is initialized to 1024 (the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679504,"byte_end":679583,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"/   value of the initial window size for this connection).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679584,"byte_end":679644,"line_start":175,"line_end":175,"column_start":1,"column_end":61}},{"value":"/ * A `DATA` frame is received containing a payload of 600 bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679645,"byte_end":679712,"line_start":176,"line_end":176,"column_start":1,"column_end":68}},{"value":"/ * The receive window size is reduced to 424 bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679713,"byte_end":679767,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/ * [`release_capacity`] is called with 200.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679768,"byte_end":679814,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ * The receive window size is now 624 bytes. The peer may send no more than","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679815,"byte_end":679893,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/   this.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679894,"byte_end":679905,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"/ * A `DATA` frame is received with a payload of 624 bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679906,"byte_end":679967,"line_start":181,"line_end":181,"column_start":1,"column_end":62}},{"value":"/ * The window size is now 0 bytes. The peer may not send any more data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":679968,"byte_end":680042,"line_start":182,"line_end":182,"column_start":1,"column_end":75}},{"value":"/ * [`release_capacity`] is called with 1024.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680043,"byte_end":680090,"line_start":183,"line_end":183,"column_start":1,"column_end":48}},{"value":"/ * The receive window size is now 1024 bytes. The peer may now send more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680091,"byte_end":680166,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680167,"byte_end":680176,"line_start":185,"line_end":185,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680177,"byte_end":680180,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [flow control]: ../index.html#flow-control","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680181,"byte_end":680227,"line_start":187,"line_end":187,"column_start":1,"column_end":47}},{"value":"/ [`release_capacity`]: struct.FlowControl.html#method.release_capacity","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680228,"byte_end":680301,"line_start":188,"line_end":188,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3486},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680484,"byte_end":680492,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"PingPong","qualname":"::share::PingPong","value":"PingPong {  }","parent":null,"children":[{"krate":0,"index":3487}],"decl_id":null,"docs":" A handle to send and receive PING frames with the peer.\n","sig":null,"attributes":[{"value":"/ A handle to send and receive PING frames with the peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680389,"byte_end":680448,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3488},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680641,"byte_end":680645,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"Ping","qualname":"::share::Ping","value":"Ping {  }","parent":null,"children":[{"krate":0,"index":3489}],"decl_id":null,"docs":" Sent via [`PingPong`][] to send a PING frame to a peer.","sig":null,"attributes":[{"value":"/ Sent via [`PingPong`][] to send a PING frame to a peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680527,"byte_end":680586,"line_start":200,"line_end":200,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680587,"byte_end":680590,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680591,"byte_end":680629,"line_start":202,"line_end":202,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3490},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680819,"byte_end":680823,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"Pong","qualname":"::share::Pong","value":"Pong {  }","parent":null,"children":[{"krate":0,"index":3491}],"decl_id":null,"docs":" Received via [`PingPong`][] when a peer acknowledges a [`Ping`][].","sig":null,"attributes":[{"value":"/ Received via [`PingPong`][] when a peer acknowledges a [`Ping`][].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680663,"byte_end":680733,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680734,"byte_end":680737,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680738,"byte_end":680776,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/ [`Ping`]: struct.Ping.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680777,"byte_end":680807,"line_start":210,"line_end":210,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683282,"byte_end":683298,"line_start":280,"line_end":280,"column_start":12,"column_end":28},"name":"reserve_capacity","qualname":"<SendStream<B>>::reserve_capacity","value":"pub fn reserve_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Requests capacity to send data.","sig":null,"attributes":[{"value":"/ Requests capacity to send data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681002,"byte_end":681037,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681042,"byte_end":681045,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function is used to express intent to send data. This requests","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681050,"byte_end":681121,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/ connection level capacity. Once the capacity is available, it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681126,"byte_end":681194,"line_start":225,"line_end":225,"column_start":5,"column_end":73}},{"value":"/ assigned to the stream and not reused by other streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681199,"byte_end":681258,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681263,"byte_end":681266,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This function may be called repeatedly. The `capacity` argument is the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681271,"byte_end":681345,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ **total** amount of requested capacity. Sequential calls to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681350,"byte_end":681413,"line_start":229,"line_end":229,"column_start":5,"column_end":68}},{"value":"/ `reserve_capacity` are *not* additive. Given the following:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681418,"byte_end":681481,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681486,"byte_end":681489,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681494,"byte_end":681505,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681510,"byte_end":681526,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/ # fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681531,"byte_end":681589,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681594,"byte_end":681632,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/ send_stream.reserve_capacity(200);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681637,"byte_end":681675,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681680,"byte_end":681687,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681692,"byte_end":681699,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681704,"byte_end":681707,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ After the second call to `reserve_capacity`, the *total* requested","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681712,"byte_end":681782,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ capacity will be 200.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681787,"byte_end":681812,"line_start":241,"line_end":241,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681817,"byte_end":681820,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ `reserve_capacity` is also used to cancel previous capacity requests.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681825,"byte_end":681898,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ Given the following:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681903,"byte_end":681927,"line_start":244,"line_end":244,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681932,"byte_end":681935,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681940,"byte_end":681951,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681956,"byte_end":681972,"line_start":247,"line_end":247,"column_start":5,"column_end":21}},{"value":"/ # fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":681977,"byte_end":682035,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682040,"byte_end":682078,"line_start":249,"line_end":249,"column_start":5,"column_end":43}},{"value":"/ send_stream.reserve_capacity(0);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682083,"byte_end":682119,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682124,"byte_end":682131,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682136,"byte_end":682143,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682148,"byte_end":682151,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ After the second call to `reserve_capacity`, the *total* requested","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682156,"byte_end":682226,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/ capacity will be 0, i.e. there is no requested capacity for the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682231,"byte_end":682306,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682311,"byte_end":682314,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If `reserve_capacity` is called with a lower value than the amount of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682319,"byte_end":682392,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ capacity **currently** assigned to the stream, this capacity will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682397,"byte_end":682469,"line_start":258,"line_end":258,"column_start":5,"column_end":77}},{"value":"/ returned to the connection to be re-assigned to other streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682474,"byte_end":682540,"line_start":259,"line_end":259,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682545,"byte_end":682548,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Also, the amount of capacity that is reserved gets decremented as data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682553,"byte_end":682627,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ is sent. For example:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682632,"byte_end":682657,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682662,"byte_end":682665,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682670,"byte_end":682681,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682686,"byte_end":682702,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/ # async fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682707,"byte_end":682771,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682776,"byte_end":682814,"line_start":267,"line_end":267,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682819,"byte_end":682822,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ send_stream.send_data(b\"hello\", false).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682827,"byte_end":682879,"line_start":269,"line_end":269,"column_start":5,"column_end":57}},{"value":"/ // At this point, the total amount of requested capacity is 95 bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682884,"byte_end":682957,"line_start":270,"line_end":270,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682962,"byte_end":682965,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // Calling `reserve_capacity` with `100` again essentially requests an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":682970,"byte_end":683044,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ // additional 5 bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683049,"byte_end":683075,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683080,"byte_end":683118,"line_start":274,"line_end":274,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683123,"byte_end":683130,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683135,"byte_end":683142,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683147,"byte_end":683150,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ See [Flow control](struct.SendStream.html#flow-control) for an overview","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683155,"byte_end":683230,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ of how send flow control works.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683235,"byte_end":683270,"line_start":279,"line_end":279,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683613,"byte_end":683621,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SendStream<B>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream's current send capacity.","sig":null,"attributes":[{"value":"/ Returns the stream's current send capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683436,"byte_end":683483,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683488,"byte_end":683491,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This allows the caller to check the current amount of available capacity","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683496,"byte_end":683572,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ before sending data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683577,"byte_end":683601,"line_start":288,"line_end":288,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684512,"byte_end":684525,"line_start":307,"line_end":307,"column_start":12,"column_end":25},"name":"poll_capacity","qualname":"<SendStream<B>>::poll_capacity","value":"pub fn poll_capacity(&mut Self, &mut Context)\n-> Poll<Option<Result<usize, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Requests to be notified when the stream's capacity increases.","sig":null,"attributes":[{"value":"/ Requests to be notified when the stream's capacity increases.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683690,"byte_end":683755,"line_start":293,"line_end":293,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683760,"byte_end":683763,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Before calling this, capacity should be requested with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683768,"byte_end":683826,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/ `reserve_capacity`. Once capacity is requested, the connection will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683831,"byte_end":683902,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/ assign capacity to the stream **as it becomes available**. There is no","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683907,"byte_end":683981,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ guarantee as to when and in what increments capacity gets assigned to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":683986,"byte_end":684059,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684064,"byte_end":684079,"line_start":299,"line_end":299,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684084,"byte_end":684087,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ To get notified when the available capacity increases, the caller calls","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684092,"byte_end":684167,"line_start":301,"line_end":301,"column_start":5,"column_end":80}},{"value":"/ `poll_capacity`, which returns `Ready(Some(n))` when `n` has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684172,"byte_end":684241,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"/ increased by the connection. Note that `n` here represents the **total**","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684246,"byte_end":684322,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ amount of assigned capacity at that point in time. It is also possible","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684327,"byte_end":684401,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ that `n` is lower than the previous call if, since then, the caller has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684406,"byte_end":684481,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ sent data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684486,"byte_end":684500,"line_start":306,"line_end":306,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685564,"byte_end":685573,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"send_data","qualname":"<SendStream<B>>::send_data","value":"pub fn send_data(&mut Self, B, bool) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a single data frame to the remote peer.","sig":null,"attributes":[{"value":"/ Sends a single data frame to the remote peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684734,"byte_end":684783,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684788,"byte_end":684791,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function may be called repeatedly as long as `end_of_stream` is set","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684796,"byte_end":684872,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ to `false`. Setting `end_of_stream` to `true` sets the end stream flag","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684877,"byte_end":684951,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ on the data frame. Any further calls to `send_data` or `send_trailers`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":684956,"byte_end":685030,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ will return an [`Error`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685035,"byte_end":685064,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685069,"byte_end":685072,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ `send_data` can be called without reserving capacity. In this case, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685077,"byte_end":685152,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ data is buffered and the capacity is implicitly requested. Once the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685157,"byte_end":685228,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/ capacity becomes available, the data is flushed to the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685233,"byte_end":685303,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ However, this buffering is unbounded. As such, sending large amounts of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685308,"byte_end":685383,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ data without reserving capacity before hand could result in large","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685388,"byte_end":685457,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ amounts of data being buffered in memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685462,"byte_end":685507,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685512,"byte_end":685515,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: struct.Error.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685520,"byte_end":685552,"line_start":328,"line_end":328,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685936,"byte_end":685949,"line_start":339,"line_end":339,"column_start":12,"column_end":25},"name":"send_trailers","qualname":"<SendStream<B>>::send_trailers","value":"pub fn send_trailers(&mut Self, HeaderMap) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends trailers to the remote peer.","sig":null,"attributes":[{"value":"/ Sends trailers to the remote peer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685752,"byte_end":685790,"line_start":335,"line_end":335,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685795,"byte_end":685798,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Sending trailers implicitly closes the send stream. Once the send stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685803,"byte_end":685879,"line_start":337,"line_end":337,"column_start":5,"column_end":81}},{"value":"/ is closed, no more data can be sent.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":685884,"byte_end":685924,"line_start":338,"line_end":338,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686377,"byte_end":686387,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendStream<B>>::send_reset","value":"pub fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Resets the stream.","sig":null,"attributes":[{"value":"/ Resets the stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686086,"byte_end":686108,"line_start":343,"line_end":343,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686113,"byte_end":686116,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This cancels the request / response exchange. If the response has not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686121,"byte_end":686194,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ yet been received, the associated `ResponseFuture` will return an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686199,"byte_end":686268,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ [`Error`] to reflect the canceled exchange.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686273,"byte_end":686320,"line_start":347,"line_end":347,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686325,"byte_end":686328,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: struct.Error.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686333,"byte_end":686365,"line_start":349,"line_end":349,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686946,"byte_end":686956,"line_start":366,"line_end":366,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendStream<B>>::poll_reset","value":"pub fn poll_reset(&mut Self, &mut Context)\n-> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686466,"byte_end":686526,"line_start":354,"line_end":354,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686531,"byte_end":686534,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686539,"byte_end":686601,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686606,"byte_end":686674,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686679,"byte_end":686682,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686687,"byte_end":686756,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686761,"byte_end":686810,"line_start":360,"line_end":360,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686815,"byte_end":686818,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686823,"byte_end":686834,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686839,"byte_end":686842,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ If connection sees an error, this returns that error instead of a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686847,"byte_end":686916,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ `Reason`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":686921,"byte_end":686934,"line_start":365,"line_end":365,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687251,"byte_end":687260,"line_start":375,"line_end":375,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendStream<B>>::stream_id","value":"pub fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of this `SendStream`.","sig":null,"attributes":[{"value":"/ Returns the stream ID of this `SendStream`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687100,"byte_end":687147,"line_start":370,"line_end":370,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687152,"byte_end":687155,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687160,"byte_end":687172,"line_start":372,"line_end":372,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687177,"byte_end":687180,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687185,"byte_end":687239,"line_start":374,"line_end":374,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687687,"byte_end":687691,"line_start":395,"line_end":395,"column_start":18,"column_end":22},"name":"data","qualname":"<RecvStream>::data","value":"pub async fn data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the next data frame.\n","sig":null,"attributes":[{"value":"/ Get the next data frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687641,"byte_end":687669,"line_start":394,"line_end":394,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687889,"byte_end":687897,"line_start":400,"line_end":400,"column_start":18,"column_end":26},"name":"trailers","qualname":"<RecvStream>::trailers","value":"pub async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get optional trailers for this stream.\n","sig":null,"attributes":[{"value":"/ Get optional trailers for this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687829,"byte_end":687871,"line_start":399,"line_end":399,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688088,"byte_end":688097,"line_start":405,"line_end":405,"column_start":12,"column_end":21},"name":"poll_data","qualname":"<RecvStream>::poll_data","value":"pub fn poll_data(&mut Self, &mut Context)\n-> Poll<Option<Result<Bytes, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next data frame.\n","sig":null,"attributes":[{"value":"/ Poll for the next data frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688043,"byte_end":688076,"line_start":404,"line_end":404,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688275,"byte_end":688288,"line_start":410,"line_end":410,"column_start":12,"column_end":25},"name":"poll_trailers","qualname":"<RecvStream>::poll_trailers","value":"pub fn poll_trailers(&mut Self, &mut Context)\n-> Poll<Result<Option<HeaderMap>, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688828,"byte_end":688841,"line_start":425,"line_end":425,"column_start":12,"column_end":25},"name":"is_end_stream","qualname":"<RecvStream>::is_end_stream","value":"pub fn is_end_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the receive half has reached the end of stream.","sig":null,"attributes":[{"value":"/ Returns true if the receive half has reached the end of stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688628,"byte_end":688695,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688700,"byte_end":688703,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ A return value of `true` means that calls to `poll` and `poll_trailers`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688708,"byte_end":688783,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ will both return `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688788,"byte_end":688816,"line_start":424,"line_end":424,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689054,"byte_end":689066,"line_start":432,"line_end":432,"column_start":12,"column_end":24},"name":"flow_control","qualname":"<RecvStream>::flow_control","value":"pub fn flow_control(&mut Self) -> &mut FlowControl","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this stream's `FlowControl`.","sig":null,"attributes":[{"value":"/ Get a mutable reference to this stream's `FlowControl`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688911,"byte_end":688970,"line_start":429,"line_end":429,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688975,"byte_end":688978,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ It can be used immediately, or cloned to be used later.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":688983,"byte_end":689042,"line_start":431,"line_end":431,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689280,"byte_end":689289,"line_start":441,"line_end":441,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<RecvStream>::stream_id","value":"pub fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of this stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689135,"byte_end":689176,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689181,"byte_end":689184,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689189,"byte_end":689201,"line_start":438,"line_end":438,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689206,"byte_end":689209,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689214,"byte_end":689268,"line_start":440,"line_end":440,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690491,"byte_end":690500,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<FlowControl>::stream_id","value":"pub fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the stream whose capacity will\n be released by this `FlowControl`.\n","sig":null,"attributes":[{"value":"/ Returns the stream ID of the stream whose capacity will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690377,"byte_end":690436,"line_start":481,"line_end":481,"column_start":5,"column_end":64}},{"value":"/ be released by this `FlowControl`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690441,"byte_end":690479,"line_start":482,"line_end":482,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690676,"byte_end":690694,"line_start":488,"line_end":488,"column_start":12,"column_end":30},"name":"available_capacity","qualname":"<FlowControl>::available_capacity","value":"pub fn available_capacity(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Get the current available capacity of data this stream *could* receive.\n","sig":null,"attributes":[{"value":"/ Get the current available capacity of data this stream *could* receive.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690589,"byte_end":690664,"line_start":487,"line_end":487,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690920,"byte_end":690933,"line_start":495,"line_end":495,"column_start":12,"column_end":25},"name":"used_capacity","qualname":"<FlowControl>::used_capacity","value":"pub fn used_capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the currently *used* capacity for this stream.","sig":null,"attributes":[{"value":"/ Get the currently *used* capacity for this stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690769,"byte_end":690823,"line_start":492,"line_end":492,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690828,"byte_end":690831,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is the amount of bytes that can be released back to the remote.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690836,"byte_end":690908,"line_start":494,"line_end":494,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691696,"byte_end":691712,"line_start":515,"line_end":515,"column_start":12,"column_end":28},"name":"release_capacity","qualname":"<FlowControl>::release_capacity","value":"pub fn release_capacity(&mut Self, usize) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Release window capacity back to remote stream.","sig":null,"attributes":[{"value":"/ Release window capacity back to remote stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691012,"byte_end":691062,"line_start":499,"line_end":499,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691067,"byte_end":691070,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This releases capacity back to the stream level and the connection level","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691075,"byte_end":691151,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ windows. Both window sizes will be increased by `sz`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691156,"byte_end":691213,"line_start":502,"line_end":502,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691218,"byte_end":691221,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ See [struct level] documentation for more details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691226,"byte_end":691280,"line_start":504,"line_end":504,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691285,"byte_end":691288,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691293,"byte_end":691305,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691310,"byte_end":691313,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function errors if increasing the receive window size by `sz` would","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691318,"byte_end":691394,"line_start":508,"line_end":508,"column_start":5,"column_end":81}},{"value":"/ result in a window size greater than the target window size. In other","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691399,"byte_end":691472,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ words, the caller cannot release more capacity than data has been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691477,"byte_end":691546,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/ received. If 1024 bytes of data have been received, at most 1024 bytes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691551,"byte_end":691625,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ can be released.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691630,"byte_end":691650,"line_start":512,"line_end":512,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691655,"byte_end":691658,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ [struct level]: #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":691663,"byte_end":691684,"line_start":514,"line_end":514,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":692226,"byte_end":692230,"line_start":533,"line_end":533,"column_start":18,"column_end":22},"name":"ping","qualname":"<PingPong>::ping","value":"pub async fn ping<'_>(&'_ mut Self, Ping) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send a PING frame and wait for the peer to send the pong.\n","sig":null,"attributes":[{"value":"/ Send a PING frame and wait for the peer to send the pong.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":692147,"byte_end":692208,"line_start":532,"line_end":532,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":692423,"byte_end":692432,"line_start":539,"line_end":539,"column_start":12,"column_end":21},"name":"send_ping","qualname":"<PingPong>::send_ping","value":"pub fn send_ping(&mut Self, Ping) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":692878,"byte_end":692887,"line_start":552,"line_end":552,"column_start":12,"column_end":21},"name":"poll_pong","qualname":"<PingPong>::poll_pong","value":"pub fn poll_pong(&mut Self, &mut Context) -> Poll<Result<Pong, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693444,"byte_end":693450,"line_start":572,"line_end":572,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Ping>::opaque","value":"pub fn opaque() -> Ping","parent":null,"children":[],"decl_id":null,"docs":" Creates a new opaque `Ping` to be sent via a [`PingPong`][].","sig":null,"attributes":[{"value":"/ Creates a new opaque `Ping` to be sent via a [`PingPong`][].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693237,"byte_end":693301,"line_start":567,"line_end":567,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693306,"byte_end":693309,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The payload is \"opaque\", such that it shouldn't be depended on.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693314,"byte_end":693381,"line_start":569,"line_end":569,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693386,"byte_end":693389,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693394,"byte_end":693432,"line_start":571,"line_end":571,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13208,"byte_end":13217,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13244,"byte_end":13253,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13479,"byte_end":13488,"line_start":67,"line_end":67,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13600,"byte_end":13609,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13741,"byte_end":13750,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13777,"byte_end":13786,"line_start":83,"line_end":83,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":15828,"byte_end":15838,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":26785,"byte_end":26795,"line_start":329,"line_end":329,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":28188,"byte_end":28199,"line_start":374,"line_end":374,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":29054,"byte_end":29059,"line_start":402,"line_end":402,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":31282,"byte_end":31293,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":35030,"byte_end":35037,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":39358,"byte_end":39365,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":39468,"byte_end":39479,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":40299,"byte_end":40310,"line_start":352,"line_end":352,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":40586,"byte_end":40597,"line_start":363,"line_end":363,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":6533,"byte_end":6538,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":7517,"byte_end":7522,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":9616,"byte_end":9621,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":10508,"byte_end":10513,"line_start":155,"line_end":155,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":10775,"byte_end":10780,"line_start":166,"line_end":166,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":11677,"byte_end":11682,"line_start":194,"line_end":194,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41945,"byte_end":41950,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":43166,"byte_end":43171,"line_start":91,"line_end":91,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":43750,"byte_end":43755,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":43891,"byte_end":43896,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":44096,"byte_end":44101,"line_start":126,"line_end":126,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":44235,"byte_end":44240,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":45707,"byte_end":45712,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":50356,"byte_end":50363,"line_start":147,"line_end":147,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":56100,"byte_end":56107,"line_start":326,"line_end":326,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":56217,"byte_end":56231,"line_start":334,"line_end":334,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":59673,"byte_end":59678,"line_start":445,"line_end":445,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62179,"byte_end":62191,"line_start":534,"line_end":534,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62354,"byte_end":62366,"line_start":541,"line_end":541,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62545,"byte_end":62557,"line_start":548,"line_end":548,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62730,"byte_end":62742,"line_start":555,"line_end":555,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62915,"byte_end":62927,"line_start":562,"line_end":562,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":63098,"byte_end":63103,"line_start":569,"line_end":569,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/encoder.rs","byte_start":72365,"byte_end":72372,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/encoder.rs","byte_start":77890,"byte_end":77897,"line_start":185,"line_end":185,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":95621,"byte_end":95627,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":96186,"byte_end":96192,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":101292,"byte_end":101298,"line_start":212,"line_end":212,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":101855,"byte_end":101859,"line_start":229,"line_end":229,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":103240,"byte_end":103248,"line_start":266,"line_end":266,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":103927,"byte_end":103935,"line_start":291,"line_end":291,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":104043,"byte_end":104051,"line_start":298,"line_end":298,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":104139,"byte_end":104147,"line_start":304,"line_end":304,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/huffman/mod.rs","byte_start":105661,"byte_end":105668,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/table.rs","byte_start":220869,"byte_end":220874,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/table.rs","byte_start":238986,"byte_end":238991,"line_start":637,"line_end":637,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":246913,"byte_end":246923,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":257443,"byte_end":257458,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":257909,"byte_end":257922,"line_start":378,"line_end":378,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":263705,"byte_end":263715,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":263899,"byte_end":263909,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":265305,"byte_end":265315,"line_start":574,"line_end":574,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265935,"byte_end":265940,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":266852,"byte_end":266861,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267043,"byte_end":267048,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267397,"byte_end":267402,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267517,"byte_end":267522,"line_start":77,"line_end":77,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267669,"byte_end":267678,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/go_away.rs","byte_start":269265,"byte_end":269271,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/go_away.rs","byte_start":272570,"byte_end":272579,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/peer.rs","byte_start":273653,"byte_end":273656,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":276791,"byte_end":276799,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":281183,"byte_end":281195,"line_start":201,"line_end":201,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":281390,"byte_end":281399,"line_start":212,"line_end":212,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":282954,"byte_end":282965,"line_start":263,"line_end":263,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":283483,"byte_end":283494,"line_start":285,"line_end":285,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/settings.rs","byte_start":284518,"byte_end":284526,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/buffer.rs","byte_start":290897,"byte_end":290903,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/buffer.rs","byte_start":290987,"byte_end":290992,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/counts.rs","byte_start":293366,"byte_end":293372,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/counts.rs","byte_start":298887,"byte_end":298893,"line_start":202,"line_end":202,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":300849,"byte_end":300860,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305186,"byte_end":305192,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305502,"byte_end":305508,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305698,"byte_end":305704,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305979,"byte_end":305985,"line_start":229,"line_end":229,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":306116,"byte_end":306122,"line_start":235,"line_end":235,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":306293,"byte_end":306299,"line_start":242,"line_end":242,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":306415,"byte_end":306421,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/prioritize.rs","byte_start":309244,"byte_end":309254,"line_start":78,"line_end":78,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/prioritize.rs","byte_start":339758,"byte_end":339769,"line_start":866,"line_end":866,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/prioritize.rs","byte_start":340169,"byte_end":340180,"line_start":887,"line_end":887,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/recv.rs","byte_start":342771,"byte_end":342775,"line_start":83,"line_end":83,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/recv.rs","byte_start":377944,"byte_end":377948,"line_start":1067,"line_end":1067,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/recv.rs","byte_start":378187,"byte_end":378207,"line_start":1080,"line_end":1080,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/send.rs","byte_start":379743,"byte_end":379747,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/state.rs","byte_start":400308,"byte_end":400313,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/state.rs","byte_start":412840,"byte_end":412845,"line_start":462,"line_end":462,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/state.rs","byte_start":412939,"byte_end":412943,"line_start":468,"line_end":468,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":414806,"byte_end":414811,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417134,"byte_end":417139,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417254,"byte_end":417259,"line_start":185,"line_end":185,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417607,"byte_end":417612,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417926,"byte_end":417931,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":418684,"byte_end":418689,"line_start":239,"line_end":239,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":421278,"byte_end":421281,"line_start":343,"line_end":343,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422174,"byte_end":422177,"line_start":374,"line_end":374,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422340,"byte_end":422343,"line_start":383,"line_end":383,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422476,"byte_end":422479,"line_start":391,"line_end":391,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422598,"byte_end":422601,"line_start":397,"line_end":397,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422748,"byte_end":422761,"line_start":405,"line_end":405,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422961,"byte_end":422972,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":427289,"byte_end":427295,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":434617,"byte_end":434627,"line_start":336,"line_end":336,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":435155,"byte_end":435163,"line_start":358,"line_end":358,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":435895,"byte_end":435911,"line_start":385,"line_end":385,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":436474,"byte_end":436490,"line_start":407,"line_end":407,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":437029,"byte_end":437037,"line_start":429,"line_end":429,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":437749,"byte_end":437764,"line_start":456,"line_end":456,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":438398,"byte_end":438411,"line_start":484,"line_end":484,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":441583,"byte_end":441590,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":447914,"byte_end":447924,"line_start":312,"line_end":312,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":450019,"byte_end":450024,"line_start":371,"line_end":371,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1979},{"krate":0,"index":1983},{"krate":0,"index":1987},{"krate":0,"index":1991},{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":469476,"byte_end":469483,"line_start":907,"line_end":907,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":470227,"byte_end":470234,"line_start":934,"line_end":934,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":471736,"byte_end":471743,"line_start":990,"line_end":990,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":472038,"byte_end":472045,"line_start":1004,"line_end":1004,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":472398,"byte_end":472407,"line_start":1022,"line_end":1022,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":479497,"byte_end":479506,"line_start":1241,"line_end":1241,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":479715,"byte_end":479730,"line_start":1252,"line_end":1252,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":483014,"byte_end":483029,"line_start":1359,"line_end":1359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":483802,"byte_end":483817,"line_start":1383,"line_end":1383,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":484145,"byte_end":484160,"line_start":1397,"line_end":1397,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":486375,"byte_end":486385,"line_start":1470,"line_end":1470,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":486533,"byte_end":486540,"line_start":1479,"line_end":1479,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":494443,"byte_end":494447,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":496988,"byte_end":496992,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":497612,"byte_end":497616,"line_start":144,"line_end":144,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":498034,"byte_end":498039,"line_start":160,"line_end":160,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":498138,"byte_end":498142,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":498602,"byte_end":498611,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":499170,"byte_end":499179,"line_start":214,"line_end":214,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":499348,"byte_end":499357,"line_start":226,"line_end":226,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/go_away.rs","byte_start":499863,"byte_end":499869,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/go_away.rs","byte_start":501117,"byte_end":501122,"line_start":61,"line_end":61,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/go_away.rs","byte_start":501226,"byte_end":501232,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/head.rs","byte_start":502074,"byte_end":502078,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/head.rs","byte_start":503097,"byte_end":503101,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":506118,"byte_end":506125,"line_start":111,"line_end":111,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":510623,"byte_end":510628,"line_start":284,"line_end":284,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2468}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":510727,"byte_end":510734,"line_start":290,"line_end":290,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":511801,"byte_end":511812,"line_start":340,"line_end":340,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":516511,"byte_end":516516,"line_start":503,"line_end":503,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":516623,"byte_end":516634,"line_start":509,"line_end":509,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":517010,"byte_end":517022,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":517374,"byte_end":517380,"line_start":537,"line_end":537,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":519744,"byte_end":519763,"line_start":622,"line_end":622,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":521383,"byte_end":521387,"line_start":674,"line_end":674,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522475,"byte_end":522486,"line_start":716,"line_end":716,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523159,"byte_end":523170,"line_start":750,"line_end":750,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523417,"byte_end":523428,"line_start":763,"line_end":763,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523822,"byte_end":523837,"line_start":776,"line_end":776,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524274,"byte_end":524289,"line_start":798,"line_end":798,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524552,"byte_end":524567,"line_start":811,"line_end":811,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524842,"byte_end":524853,"line_start":822,"line_end":822,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2547},{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/ping.rs","byte_start":532887,"byte_end":532891,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/ping.rs","byte_start":535262,"byte_end":535267,"line_start":98,"line_end":98,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/priority.rs","byte_start":535926,"byte_end":535934,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/priority.rs","byte_start":536323,"byte_end":536328,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/priority.rs","byte_start":536452,"byte_end":536468,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537891,"byte_end":537897,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":541087,"byte_end":541093,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2624}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":541264,"byte_end":541270,"line_start":99,"line_end":99,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":542031,"byte_end":542034,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":542166,"byte_end":542172,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reset.rs","byte_start":542496,"byte_end":542501,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reset.rs","byte_start":543509,"byte_end":543514,"line_start":52,"line_end":52,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":545127,"byte_end":545135,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2729},{"krate":0,"index":2731},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":551237,"byte_end":551242,"line_start":264,"line_end":264,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":551347,"byte_end":551355,"line_start":270,"line_end":270,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":552465,"byte_end":552472,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2745},{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554299,"byte_end":554312,"line_start":361,"line_end":361,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554730,"byte_end":554743,"line_start":385,"line_end":385,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555651,"byte_end":555659,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":557362,"byte_end":557370,"line_start":79,"line_end":79,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":557630,"byte_end":557638,"line_start":92,"line_end":92,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/util.rs","byte_start":559288,"byte_end":559298,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/window_update.rs","byte_start":560115,"byte_end":560127,"line_start":13,"line_end":13,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/window_update.rs","byte_start":561464,"byte_end":561469,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/mod.rs","byte_start":491277,"byte_end":491282,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/mod.rs","byte_start":491873,"byte_end":491878,"line_start":103,"line_end":103,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574433,"byte_end":574444,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":582101,"byte_end":582112,"line_start":539,"line_end":539,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":582273,"byte_end":582284,"line_start":548,"line_end":548,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583191,"byte_end":583207,"line_start":585,"line_end":585,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583692,"byte_end":583699,"line_start":605,"line_end":605,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601603,"byte_end":601610,"line_start":1109,"line_end":1109,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3078}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":603672,"byte_end":603682,"line_start":1177,"line_end":1177,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608457,"byte_end":608467,"line_start":1306,"line_end":1306,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608814,"byte_end":608824,"line_start":1319,"line_end":1319,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609078,"byte_end":609092,"line_start":1332,"line_end":1332,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3108},{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609467,"byte_end":609481,"line_start":1343,"line_end":1343,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":610243,"byte_end":610255,"line_start":1371,"line_end":1371,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611544,"byte_end":611555,"line_start":1410,"line_end":1410,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612135,"byte_end":612155,"line_start":1430,"line_end":1430,"column_start":17,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612362,"byte_end":612382,"line_start":1438,"line_end":1438,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612651,"byte_end":612655,"line_start":1451,"line_end":1451,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":614798,"byte_end":614802,"line_start":1516,"line_end":1516,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616106,"byte_end":616114,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616625,"byte_end":616633,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616771,"byte_end":616779,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616871,"byte_end":616879,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627866,"byte_end":627884,"line_start":292,"line_end":292,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3294}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629983,"byte_end":629993,"line_start":364,"line_end":364,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638510,"byte_end":638520,"line_start":593,"line_end":593,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638795,"byte_end":638802,"line_start":607,"line_end":607,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652869,"byte_end":652876,"line_start":1015,"line_end":1015,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652988,"byte_end":653000,"line_start":1023,"line_end":1023,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656199,"byte_end":656217,"line_start":1115,"line_end":1115,"column_start":14,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658750,"byte_end":658755,"line_start":1187,"line_end":1187,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658873,"byte_end":658878,"line_start":1193,"line_end":1193,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":659291,"byte_end":659302,"line_start":1209,"line_end":1209,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":659561,"byte_end":659572,"line_start":1222,"line_end":1222,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3390},{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":660849,"byte_end":660858,"line_start":1261,"line_end":1261,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3397}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":663984,"byte_end":663993,"line_start":1332,"line_end":1332,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":664193,"byte_end":664197,"line_start":1342,"line_end":1342,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":666262,"byte_end":666266,"line_start":1418,"line_end":1418,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":670287,"byte_end":670298,"line_start":1544,"line_end":1544,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":670742,"byte_end":670753,"line_start":1558,"line_end":1558,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":671029,"byte_end":671040,"line_start":1569,"line_end":1569,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":671327,"byte_end":671338,"line_start":1580,"line_end":1580,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680886,"byte_end":680896,"line_start":217,"line_end":217,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687382,"byte_end":687390,"line_start":382,"line_end":382,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687536,"byte_end":687546,"line_start":389,"line_end":389,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3512},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689618,"byte_end":689628,"line_start":455,"line_end":455,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3522}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689817,"byte_end":689827,"line_start":463,"line_end":463,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3524}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690259,"byte_end":690270,"line_start":476,"line_end":476,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":692041,"byte_end":692049,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3537},{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693068,"byte_end":693076,"line_start":558,"line_end":558,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693226,"byte_end":693230,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693516,"byte_end":693520,"line_start":577,"line_end":577,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693681,"byte_end":693685,"line_start":585,"line_end":585,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":5205,"byte_end":5209,"line_start":152,"line_end":152,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3595}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4328,"byte_end":4334,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2925}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4344,"byte_end":4347,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3139}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":4357,"byte_end":4363,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3160}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13208,"byte_end":13217,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3598},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13244,"byte_end":13253,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3598},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13479,"byte_end":13488,"line_start":67,"line_end":67,"column_start":26,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3598},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13600,"byte_end":13609,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3598},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13741,"byte_end":13750,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3607},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/error.rs","byte_start":13777,"byte_end":13786,"line_start":83,"line_end":83,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":15828,"byte_end":15838,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":26785,"byte_end":26795,"line_start":329,"line_end":329,"column_start":20,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3634},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":28188,"byte_end":28199,"line_start":374,"line_end":374,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_read.rs","byte_start":29054,"byte_end":29059,"line_start":402,"line_end":402,"column_start":31,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":31282,"byte_end":31293,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":35030,"byte_end":35037,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":39358,"byte_end":39365,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":39468,"byte_end":39479,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":40299,"byte_end":40310,"line_start":352,"line_end":352,"column_start":45,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4473},"to":{"krate":24,"index":227}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/framed_write.rs","byte_start":40586,"byte_end":40597,"line_start":363,"line_end":363,"column_start":29,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4473},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":6533,"byte_end":6538,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":7517,"byte_end":7522,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":9616,"byte_end":9621,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":10508,"byte_end":10513,"line_start":155,"line_end":155,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4774},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":10775,"byte_end":10780,"line_start":166,"line_end":166,"column_start":31,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4774},"to":{"krate":34,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/codec/mod.rs","byte_start":11677,"byte_end":11682,"line_start":194,"line_end":194,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4774},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":41945,"byte_end":41950,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":43166,"byte_end":43171,"line_start":91,"line_end":91,"column_start":29,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":43750,"byte_end":43755,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":43891,"byte_end":43896,"line_start":117,"line_end":117,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":44096,"byte_end":44101,"line_start":126,"line_end":126,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":44235,"byte_end":44240,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/error.rs","byte_start":45707,"byte_end":45712,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4782},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":50356,"byte_end":50363,"line_start":147,"line_end":147,"column_start":6,"column_end":13},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":56100,"byte_end":56107,"line_start":326,"line_end":326,"column_start":18,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4808},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":56217,"byte_end":56231,"line_start":334,"line_end":334,"column_start":6,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":59673,"byte_end":59678,"line_start":445,"line_end":445,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62179,"byte_end":62191,"line_start":534,"line_end":534,"column_start":26,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4815},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62354,"byte_end":62366,"line_start":541,"line_end":541,"column_start":43,"column_end":55},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4815},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62545,"byte_end":62557,"line_start":548,"line_end":548,"column_start":42,"column_end":54},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4815},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62730,"byte_end":62742,"line_start":555,"line_end":555,"column_start":38,"column_end":50},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4815},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":62915,"byte_end":62927,"line_start":562,"line_end":562,"column_start":42,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4815},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/decoder.rs","byte_start":63098,"byte_end":63103,"line_start":569,"line_end":569,"column_start":36,"column_end":41},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":10799},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/encoder.rs","byte_start":72365,"byte_end":72372,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/encoder.rs","byte_start":77890,"byte_end":77897,"line_start":185,"line_end":185,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5089},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":95621,"byte_end":95627,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":96186,"byte_end":96192,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":101292,"byte_end":101298,"line_start":212,"line_end":212,"column_start":23,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5122},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":101855,"byte_end":101859,"line_start":229,"line_end":229,"column_start":10,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":103240,"byte_end":103248,"line_start":266,"line_end":266,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":103927,"byte_end":103935,"line_start":291,"line_end":291,"column_start":26,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5200},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":104043,"byte_end":104051,"line_start":298,"line_end":298,"column_start":22,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5200},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/header.rs","byte_start":104139,"byte_end":104147,"line_start":304,"line_end":304,"column_start":21,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5200},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/huffman/mod.rs","byte_start":105661,"byte_end":105668,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/table.rs","byte_start":220869,"byte_end":220874,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/hpack/table.rs","byte_start":238986,"byte_end":238991,"line_start":637,"line_end":637,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":246913,"byte_end":246923,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":257443,"byte_end":257458,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":257909,"byte_end":257922,"line_start":378,"line_end":378,"column_start":9,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":263705,"byte_end":263715,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":263899,"byte_end":263909,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/connection.rs","byte_start":265305,"byte_end":265315,"line_start":574,"line_end":574,"column_start":24,"column_end":34},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5283},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":265935,"byte_end":265940,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":266852,"byte_end":266861,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267043,"byte_end":267048,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5793},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267397,"byte_end":267402,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5793},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267517,"byte_end":267522,"line_start":77,"line_end":77,"column_start":26,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5793},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/error.rs","byte_start":267669,"byte_end":267678,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3598},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/go_away.rs","byte_start":269265,"byte_end":269271,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/go_away.rs","byte_start":272570,"byte_end":272579,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/peer.rs","byte_start":273653,"byte_end":273656,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":276791,"byte_end":276799,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":281183,"byte_end":281195,"line_start":201,"line_end":201,"column_start":6,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":281390,"byte_end":281399,"line_start":212,"line_end":212,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":282954,"byte_end":282965,"line_start":263,"line_end":263,"column_start":6,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/ping_pong.rs","byte_start":283483,"byte_end":283494,"line_start":285,"line_end":285,"column_start":15,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5927},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/settings.rs","byte_start":284518,"byte_end":284526,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/buffer.rs","byte_start":290897,"byte_end":290903,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/buffer.rs","byte_start":290987,"byte_end":290992,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/counts.rs","byte_start":293366,"byte_end":293372,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/counts.rs","byte_start":298887,"byte_end":298893,"line_start":202,"line_end":202,"column_start":15,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6203},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":300849,"byte_end":300860,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305186,"byte_end":305192,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305502,"byte_end":305508,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305698,"byte_end":305704,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":305979,"byte_end":305985,"line_start":229,"line_end":229,"column_start":44,"column_end":50},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":306116,"byte_end":306122,"line_start":235,"line_end":235,"column_start":38,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":306293,"byte_end":306299,"line_start":242,"line_end":242,"column_start":44,"column_end":50},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/flow_control.rs","byte_start":306415,"byte_end":306421,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6377},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/prioritize.rs","byte_start":309244,"byte_end":309254,"line_start":78,"line_end":78,"column_start":6,"column_end":16},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":6391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/prioritize.rs","byte_start":339758,"byte_end":339769,"line_start":866,"line_end":866,"column_start":17,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1230},"to":{"krate":21,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/prioritize.rs","byte_start":340169,"byte_end":340180,"line_start":887,"line_end":887,"column_start":29,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1230},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/recv.rs","byte_start":342771,"byte_end":342775,"line_start":83,"line_end":83,"column_start":6,"column_end":10},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":7227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/recv.rs","byte_start":377944,"byte_end":377948,"line_start":1067,"line_end":1067,"column_start":6,"column_end":10},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/recv.rs","byte_start":378187,"byte_end":378207,"line_start":1080,"line_end":1080,"column_start":25,"column_end":45},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7256},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/send.rs","byte_start":379743,"byte_end":379747,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":8002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/state.rs","byte_start":400308,"byte_end":400313,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":8357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/state.rs","byte_start":412840,"byte_end":412845,"line_start":462,"line_end":462,"column_start":18,"column_end":23},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":8357},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/state.rs","byte_start":412939,"byte_end":412943,"line_start":468,"line_end":468,"column_start":18,"column_end":22},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":8386},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":414806,"byte_end":414811,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":8773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417134,"byte_end":417139,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":8773},"to":{"krate":0,"index":1649}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417254,"byte_end":417259,"line_start":185,"line_end":185,"column_start":26,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":8773},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417607,"byte_end":417612,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":8773},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":417926,"byte_end":417931,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":8773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":418684,"byte_end":418689,"line_start":239,"line_end":239,"column_start":9,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":8808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":421278,"byte_end":421281,"line_start":343,"line_end":343,"column_start":10,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422174,"byte_end":422177,"line_start":374,"line_end":374,"column_start":22,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1624},"to":{"krate":0,"index":1649}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422340,"byte_end":422343,"line_start":383,"line_end":383,"column_start":25,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422476,"byte_end":422479,"line_start":391,"line_end":391,"column_start":28,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422598,"byte_end":422601,"line_start":397,"line_end":397,"column_start":25,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422748,"byte_end":422761,"line_start":405,"line_end":405,"column_start":10,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/store.rs","byte_start":422961,"byte_end":422972,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":427289,"byte_end":427295,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":8927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":434617,"byte_end":434627,"line_start":336,"line_end":336,"column_start":22,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":8969},"to":{"krate":0,"index":1628}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":435155,"byte_end":435163,"line_start":358,"line_end":358,"column_start":22,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":8973},"to":{"krate":0,"index":1628}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":435895,"byte_end":435911,"line_start":385,"line_end":385,"column_start":22,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":8977},"to":{"krate":0,"index":1628}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":436474,"byte_end":436490,"line_start":407,"line_end":407,"column_start":22,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":8981},"to":{"krate":0,"index":1628}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":437029,"byte_end":437037,"line_start":429,"line_end":429,"column_start":22,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8985},"to":{"krate":0,"index":1628}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":437749,"byte_end":437764,"line_start":456,"line_end":456,"column_start":22,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":8989},"to":{"krate":0,"index":1628}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/stream.rs","byte_start":438398,"byte_end":438411,"line_start":484,"line_end":484,"column_start":6,"column_end":19},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":8959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":441583,"byte_end":441590,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":447914,"byte_end":447924,"line_start":312,"line_end":312,"column_start":9,"column_end":19},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":450019,"byte_end":450024,"line_start":371,"line_end":371,"column_start":6,"column_end":11},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":9098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":469476,"byte_end":469483,"line_start":907,"line_end":907,"column_start":9,"column_end":16},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":9071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":470227,"byte_end":470234,"line_start":934,"line_end":934,"column_start":12,"column_end":19},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":9071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":471736,"byte_end":471743,"line_start":990,"line_end":990,"column_start":22,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":9071},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":472038,"byte_end":472045,"line_start":1004,"line_end":1004,"column_start":21,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":9071},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":472398,"byte_end":472407,"line_start":1022,"line_end":1022,"column_start":9,"column_end":18},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":9091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":479497,"byte_end":479506,"line_start":1241,"line_end":1241,"column_start":19,"column_end":28},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":9091},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":479715,"byte_end":479730,"line_start":1252,"line_end":1252,"column_start":6,"column_end":21},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":483014,"byte_end":483029,"line_start":1359,"line_end":1359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1923},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":483802,"byte_end":483817,"line_start":1383,"line_end":1383,"column_start":16,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1923},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":484145,"byte_end":484160,"line_start":1397,"line_end":1397,"column_start":15,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1923},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":486375,"byte_end":486385,"line_start":1470,"line_end":1470,"column_start":9,"column_end":19},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":9112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/proto/streams/streams.rs","byte_start":486533,"byte_end":486540,"line_start":1479,"line_end":1479,"column_start":6,"column_end":13},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":9105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":494443,"byte_end":494447,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":9573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":496988,"byte_end":496992,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":9573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":497612,"byte_end":497616,"line_start":144,"line_end":144,"column_start":14,"column_end":18},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":9573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":498034,"byte_end":498039,"line_start":160,"line_end":160,"column_start":27,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":498138,"byte_end":498142,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":9573},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":498602,"byte_end":498611,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":9590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":499170,"byte_end":499179,"line_start":214,"line_end":214,"column_start":18,"column_end":27},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":9590},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/data.rs","byte_start":499348,"byte_end":499357,"line_start":226,"line_end":226,"column_start":21,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":9590},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/go_away.rs","byte_start":499863,"byte_end":499869,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":9603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/go_away.rs","byte_start":501117,"byte_end":501122,"line_start":61,"line_end":61,"column_start":33,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/go_away.rs","byte_start":501226,"byte_end":501232,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":9603},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/head.rs","byte_start":502074,"byte_end":502078,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":9642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/head.rs","byte_start":503097,"byte_end":503101,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":9658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":506118,"byte_end":506125,"line_start":111,"line_end":111,"column_start":6,"column_end":13},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":9702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":510623,"byte_end":510628,"line_start":284,"line_end":284,"column_start":27,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":510727,"byte_end":510734,"line_start":290,"line_end":290,"column_start":21,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":9702},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":511801,"byte_end":511812,"line_start":340,"line_end":340,"column_start":6,"column_end":17},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":9727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":516511,"byte_end":516516,"line_start":503,"line_end":503,"column_start":31,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":516623,"byte_end":516634,"line_start":509,"line_end":509,"column_start":21,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":9727},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":517010,"byte_end":517022,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":9752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":517374,"byte_end":517380,"line_start":537,"line_end":537,"column_start":6,"column_end":12},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":9757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":519744,"byte_end":519763,"line_start":622,"line_end":622,"column_start":6,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":9793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":521383,"byte_end":521387,"line_start":674,"line_end":674,"column_start":19,"column_end":23},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":9775},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":522475,"byte_end":522486,"line_start":716,"line_end":716,"column_start":6,"column_end":17},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":9714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523159,"byte_end":523170,"line_start":750,"line_end":750,"column_start":18,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":9714},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523417,"byte_end":523428,"line_start":763,"line_end":763,"column_start":21,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":9714},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":523822,"byte_end":523837,"line_start":776,"line_end":776,"column_start":6,"column_end":21},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":9739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524274,"byte_end":524289,"line_start":798,"line_end":798,"column_start":18,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":9739},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524552,"byte_end":524567,"line_start":811,"line_end":811,"column_start":21,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":9739},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/headers.rs","byte_start":524842,"byte_end":524853,"line_start":822,"line_end":822,"column_start":6,"column_end":17},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":9780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/ping.rs","byte_start":532887,"byte_end":532891,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":10435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/ping.rs","byte_start":535262,"byte_end":535267,"line_start":98,"line_end":98,"column_start":24,"column_end":29},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/priority.rs","byte_start":535926,"byte_end":535934,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":10473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/priority.rs","byte_start":536323,"byte_end":536328,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/priority.rs","byte_start":536452,"byte_end":536468,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":10485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":537891,"byte_end":537897,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":10498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":541087,"byte_end":541093,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":10498},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":541264,"byte_end":541270,"line_start":99,"line_end":99,"column_start":21,"column_end":27},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":10498},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":542031,"byte_end":542034,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2629},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reason.rs","byte_start":542166,"byte_end":542172,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":10498},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reset.rs","byte_start":542496,"byte_end":542501,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":10511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/reset.rs","byte_start":543509,"byte_end":543514,"line_start":52,"line_end":52,"column_start":32,"column_end":37},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":545127,"byte_end":545135,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":10552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":551237,"byte_end":551242,"line_start":264,"line_end":264,"column_start":28,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":551347,"byte_end":551355,"line_start":270,"line_end":270,"column_start":21,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":10552},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":552465,"byte_end":552472,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":10572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554299,"byte_end":554312,"line_start":361,"line_end":361,"column_start":6,"column_end":19},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":10596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/settings.rs","byte_start":554730,"byte_end":554743,"line_start":385,"line_end":385,"column_start":21,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":10596},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":555651,"byte_end":555659,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":10689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":557362,"byte_end":557370,"line_start":79,"line_end":79,"column_start":20,"column_end":28},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":10689},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/stream_id.rs","byte_start":557630,"byte_end":557638,"line_start":92,"line_end":92,"column_start":25,"column_end":33},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":10689},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/util.rs","byte_start":559288,"byte_end":559298,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/window_update.rs","byte_start":560115,"byte_end":560127,"line_start":13,"line_end":13,"column_start":6,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":10718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/window_update.rs","byte_start":561464,"byte_end":561469,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/mod.rs","byte_start":491277,"byte_end":491282,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":10759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/frame/mod.rs","byte_start":491873,"byte_end":491878,"line_start":103,"line_end":103,"column_start":24,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":10759},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":574433,"byte_end":574444,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":582101,"byte_end":582112,"line_start":539,"line_end":539,"column_start":24,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3036},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":582273,"byte_end":582284,"line_start":548,"line_end":548,"column_start":19,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3036},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583191,"byte_end":583207,"line_start":585,"line_end":585,"column_start":20,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":10832},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":583692,"byte_end":583699,"line_start":605,"line_end":605,"column_start":6,"column_end":13},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":10856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":601603,"byte_end":601610,"line_start":1109,"line_end":1109,"column_start":18,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":10856},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":603672,"byte_end":603682,"line_start":1177,"line_end":1177,"column_start":12,"column_end":22},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608457,"byte_end":608467,"line_start":1306,"line_end":1306,"column_start":23,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":608814,"byte_end":608824,"line_start":1319,"line_end":1319,"column_start":27,"column_end":37},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609078,"byte_end":609092,"line_start":1332,"line_end":1332,"column_start":17,"column_end":31},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":10838},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":609467,"byte_end":609481,"line_start":1343,"line_end":1343,"column_start":6,"column_end":20},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":10838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":610243,"byte_end":610255,"line_start":1371,"line_end":1371,"column_start":6,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":10852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":611544,"byte_end":611555,"line_start":1410,"line_end":1410,"column_start":6,"column_end":17},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":10847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612135,"byte_end":612155,"line_start":1430,"line_end":1430,"column_start":17,"column_end":37},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":10843},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612362,"byte_end":612382,"line_start":1438,"line_end":1438,"column_start":6,"column_end":26},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":10843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":612651,"byte_end":612655,"line_start":1451,"line_end":1451,"column_start":6,"column_end":10},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":10868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/client.rs","byte_start":614798,"byte_end":614802,"line_start":1516,"line_end":1516,"column_start":22,"column_end":26},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":10868},"to":{"krate":0,"index":977}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616106,"byte_end":616114,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":10952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616625,"byte_end":616633,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616771,"byte_end":616779,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/ext.rs","byte_start":616871,"byte_end":616879,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":10952},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":627866,"byte_end":627884,"line_start":292,"line_end":292,"column_start":42,"column_end":60},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3289},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":629983,"byte_end":629993,"line_start":364,"line_end":364,"column_start":12,"column_end":22},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638510,"byte_end":638520,"line_start":593,"line_end":593,"column_start":27,"column_end":37},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3285},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":638795,"byte_end":638802,"line_start":607,"line_end":607,"column_start":6,"column_end":13},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":10963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652869,"byte_end":652876,"line_start":1015,"line_end":1015,"column_start":18,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":10963},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":652988,"byte_end":653000,"line_start":1023,"line_end":1023,"column_start":14,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":10973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":656199,"byte_end":656217,"line_start":1115,"line_end":1115,"column_start":14,"column_end":32},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658750,"byte_end":658755,"line_start":1187,"line_end":1187,"column_start":17,"column_end":22},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":658873,"byte_end":658878,"line_start":1193,"line_end":1193,"column_start":23,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":659291,"byte_end":659302,"line_start":1209,"line_end":1209,"column_start":17,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":659561,"byte_end":659572,"line_start":1222,"line_end":1222,"column_start":23,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":660849,"byte_end":660858,"line_start":1261,"line_end":1261,"column_start":28,"column_end":37},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3279},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":663984,"byte_end":663993,"line_start":1332,"line_end":1332,"column_start":27,"column_end":36},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3279},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":664193,"byte_end":664197,"line_start":1342,"line_end":1342,"column_start":6,"column_end":10},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":10979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":666262,"byte_end":666266,"line_start":1418,"line_end":1418,"column_start":22,"column_end":26},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":10979},"to":{"krate":0,"index":977}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":670287,"byte_end":670298,"line_start":1544,"line_end":1544,"column_start":27,"column_end":38},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3295},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":670742,"byte_end":670753,"line_start":1558,"line_end":1558,"column_start":56,"column_end":67},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3295},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":671029,"byte_end":671040,"line_start":1569,"line_end":1569,"column_start":62,"column_end":73},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3295},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/server.rs","byte_start":671327,"byte_end":671338,"line_start":1580,"line_end":1580,"column_start":56,"column_end":67},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3295},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":680886,"byte_end":680896,"line_start":217,"line_end":217,"column_start":14,"column_end":24},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":11547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687382,"byte_end":687390,"line_start":382,"line_end":382,"column_start":6,"column_end":14},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":11553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":687536,"byte_end":687546,"line_start":389,"line_end":389,"column_start":6,"column_end":16},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689618,"byte_end":689628,"line_start":455,"line_end":455,"column_start":21,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3484},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":689817,"byte_end":689827,"line_start":463,"line_end":463,"column_start":15,"column_end":25},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3484},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":690259,"byte_end":690270,"line_start":476,"line_end":476,"column_start":6,"column_end":17},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":11570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":692041,"byte_end":692049,"line_start":527,"line_end":527,"column_start":6,"column_end":14},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693068,"byte_end":693076,"line_start":558,"line_end":558,"column_start":21,"column_end":29},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3486},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693226,"byte_end":693230,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693516,"byte_end":693520,"line_start":577,"line_end":577,"column_start":21,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/share.rs","byte_start":693681,"byte_end":693685,"line_start":585,"line_end":585,"column_start":21,"column_end":25},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3490},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.9/src/lib.rs","byte_start":5205,"byte_end":5209,"line_start":152,"line_end":152,"column_start":30,"column_end":34},"kind":{"Impl":{"id":245}},"from":{"krate":2,"index":46047},"to":{"krate":0,"index":3580}}]}