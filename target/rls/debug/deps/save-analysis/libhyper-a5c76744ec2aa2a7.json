{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16","program":"/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hyper","--edition=2018","/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--crate-type","staticlib","--crate-type","cdylib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"client\"","--cfg","feature=\"default\"","--cfg","feature=\"h2\"","--cfg","feature=\"http1\"","--cfg","feature=\"http2\"","--cfg","feature=\"server\"","--cfg","feature=\"socket2\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","-C","metadata=a5c76744ec2aa2a7","-C","extra-filename=-a5c76744ec2aa2a7","--out-dir","/home/carter/Documents/magma/target/rls/debug/deps","-L","dependency=/home/carter/Documents/magma/target/rls/debug/deps","--extern","bytes=/home/carter/Documents/magma/target/rls/debug/deps/libbytes-0503ea3f6654f70c.rmeta","--extern","futures_channel=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_channel-326dad744ad85bc9.rmeta","--extern","futures_core=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_core-47d67b3da90b0dab.rmeta","--extern","futures_util=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_util-cee492a9bce929a2.rmeta","--extern","h2=/home/carter/Documents/magma/target/rls/debug/deps/libh2-9fa089028f8f64ac.rmeta","--extern","http=/home/carter/Documents/magma/target/rls/debug/deps/libhttp-01d6c92d11fa341e.rmeta","--extern","http_body=/home/carter/Documents/magma/target/rls/debug/deps/libhttp_body-5ccff16a2c6a3aa8.rmeta","--extern","httparse=/home/carter/Documents/magma/target/rls/debug/deps/libhttparse-ffed736734182740.rmeta","--extern","httpdate=/home/carter/Documents/magma/target/rls/debug/deps/libhttpdate-4aa1e7fa55e21633.rmeta","--extern","itoa=/home/carter/Documents/magma/target/rls/debug/deps/libitoa-7fe9566a8552298e.rmeta","--extern","pin_project_lite=/home/carter/Documents/magma/target/rls/debug/deps/libpin_project_lite-b0bfa5eb334f8d78.rmeta","--extern","socket2=/home/carter/Documents/magma/target/rls/debug/deps/libsocket2-7500819588e6635f.rmeta","--extern","tokio=/home/carter/Documents/magma/target/rls/debug/deps/libtokio-b2223b5bfd67a9c5.rmeta","--extern","tower_service=/home/carter/Documents/magma/target/rls/debug/deps/libtower_service-778e8c7a7470b21a.rmeta","--extern","tracing=/home/carter/Documents/magma/target/rls/debug/deps/libtracing-c12f5731c7ba55b3.rmeta","--extern","want=/home/carter/Documents/magma/target/rls/debug/deps/libwant-c65efe8026c4bff7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/carter/Documents/magma/target/rls/debug/deps/libhyper-a5c76744ec2aa2a7.rmeta"},"prelude":{"crate_id":{"name":"hyper","disambiguator":[11631499791805252862,0]},"crate_root":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src","external_crates":[{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","num":20,"id":{"name":"http","disambiguator":[8282796909834839114,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","num":21,"id":{"name":"fnv","disambiguator":[5726890394453190873,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/buf.rs","num":22,"id":{"name":"bytes","disambiguator":[3369492189907758608,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/buf.rs","num":23,"id":{"name":"serde","disambiguator":[9837994145478425761,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/buf.rs","num":24,"id":{"name":"serde_derive","disambiguator":[7617876261426685084,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","num":25,"id":{"name":"itoa","disambiguator":[2267151899538898389,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","num":26,"id":{"name":"httpdate","disambiguator":[7243696894752449411,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[17627374544393263653,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":28,"id":{"name":"tokio","disambiguator":[14502373230496154198,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":29,"id":{"name":"mio","disambiguator":[2328091442476404014,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":30,"id":{"name":"log","disambiguator":[16138615073828880648,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":31,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":32,"id":{"name":"libc","disambiguator":[4939918902751890021,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":33,"id":{"name":"tokio_macros","disambiguator":[15753602501778055535,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":34,"id":{"name":"memchr","disambiguator":[5547902202154193270,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","num":35,"id":{"name":"num_cpus","disambiguator":[7421392767721256841,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","num":36,"id":{"name":"futures_util","disambiguator":[4188540048087790575,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","num":37,"id":{"name":"futures_core","disambiguator":[6467786051959710749,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","num":38,"id":{"name":"pin_utils","disambiguator":[3673188743213573932,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","num":39,"id":{"name":"futures_task","disambiguator":[12674779394054587089,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","num":40,"id":{"name":"futures_sink","disambiguator":[8307411743786656110,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","num":41,"id":{"name":"slab","disambiguator":[4028794699268519618,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","num":42,"id":{"name":"futures_io","disambiguator":[7547705343272351995,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","num":43,"id":{"name":"http_body","disambiguator":[10800406506209552213,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","num":44,"id":{"name":"futures_channel","disambiguator":[3532695250553988744,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","num":45,"id":{"name":"tracing","disambiguator":[4374259961214310887,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","num":46,"id":{"name":"tracing_core","disambiguator":[645194319511760397,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","num":47,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","num":48,"id":{"name":"tower_service","disambiguator":[6263273231800291378,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","num":49,"id":{"name":"h2","disambiguator":[1482961337157116535,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","num":50,"id":{"name":"tokio_util","disambiguator":[15911388018115882298,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","num":51,"id":{"name":"indexmap","disambiguator":[1617702545361477212,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","num":52,"id":{"name":"hashbrown","disambiguator":[6732706441073868690,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/mod.rs","num":53,"id":{"name":"httparse","disambiguator":[1823328149409561258,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","num":54,"id":{"name":"socket2","disambiguator":[3308872494014797509,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","num":55,"id":{"name":"itoa","disambiguator":[12886324193804442083,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","num":56,"id":{"name":"want","disambiguator":[18075201021282471511,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","num":57,"id":{"name":"try_lock","disambiguator":[16395620852255619907,0]}}],"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":0,"byte_end":3099,"line_start":1,"line_end":109,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2295,"byte_end":2299,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2383,"byte_end":2389,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"alias_span":null,"name":"header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3000},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2391,"byte_end":2397,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1358},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2399,"byte_end":2406,"line_start":65,"line_end":65,"column_start":39,"column_end":46},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1491},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2408,"byte_end":2416,"line_start":65,"line_end":65,"column_start":48,"column_end":56},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3093},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2418,"byte_end":2428,"line_start":65,"line_end":65,"column_start":58,"column_end":68},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3218},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2430,"byte_end":2433,"line_start":65,"line_end":65,"column_start":70,"column_end":73},"alias_span":null,"name":"Uri","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3274},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2435,"byte_end":2442,"line_start":65,"line_end":65,"column_start":75,"column_end":82},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":2384},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2485,"byte_end":2494,"line_start":68,"line_end":68,"column_start":22,"column_end":31},"alias_span":null,"name":"HeaderMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2518,"byte_end":2522,"line_start":70,"line_end":70,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2547,"byte_end":2552,"line_start":71,"line_end":71,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2554,"byte_end":2560,"line_start":71,"line_end":71,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":42},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35809,"byte_end":35812,"line_start":18,"line_end":18,"column_start":17,"column_end":20},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":22,"index":526},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35814,"byte_end":35819,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":43,"index":406},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35841,"byte_end":35845,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"alias_span":null,"name":"HttpBody","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":43,"index":522},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35878,"byte_end":35886,"line_start":20,"line_end":20,"column_start":20,"column_end":28},"alias_span":null,"name":"SizeHint","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35914,"byte_end":35923,"line_start":22,"line_end":22,"column_start":26,"column_end":35},"alias_span":null,"name":"aggregate","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35946,"byte_end":35950,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":576},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35952,"byte_end":35958,"line_start":23,"line_end":23,"column_start":28,"column_end":34},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":36029,"byte_end":36037,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"alias_span":null,"name":"to_bytes","value":"","parent":{"krate":0,"index":437}},{"kind":"Use","ref_id":{"krate":48,"index":13},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93351,"byte_end":93358,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":839}},{"kind":"Use","ref_id":{"krate":0,"index":978},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93902,"byte_end":93917,"line_start":54,"line_end":54,"column_start":21,"column_end":36},"alias_span":null,"name":"make_service_fn","value":"","parent":{"krate":0,"index":839}},{"kind":"Use","ref_id":{"krate":0,"index":1061},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93939,"byte_end":93949,"line_start":55,"line_end":55,"column_start":21,"column_end":31},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":839}},{"kind":"Use","ref_id":{"krate":0,"index":4269},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024526,"byte_end":17024539,"line_start":52,"line_end":52,"column_start":24,"column_end":37},"alias_span":null,"name":"HttpConnector","value":"","parent":{"krate":0,"index":3757}},{"kind":"Use","ref_id":{"krate":0,"index":4269},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027369,"byte_end":17027382,"line_start":89,"line_end":89,"column_start":26,"column_end":39},"alias_span":null,"name":"HttpConnector","value":"","parent":{"krate":0,"index":3761}},{"kind":"Use","ref_id":{"krate":0,"index":4276},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027384,"byte_end":17027392,"line_start":89,"line_end":89,"column_start":41,"column_end":49},"alias_span":null,"name":"HttpInfo","value":"","parent":{"krate":0,"index":3761}},{"kind":"Use","ref_id":{"krate":0,"index":3832},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027522,"byte_end":17027529,"line_start":98,"line_end":98,"column_start":27,"column_end":34},"alias_span":null,"name":"Connect","value":"","parent":{"krate":0,"index":3761}},{"kind":"Use","ref_id":{"krate":0,"index":5301},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024703,"byte_end":17024710,"line_start":61,"line_end":61,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3757}},{"kind":"Use","ref_id":{"krate":0,"index":4482},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024712,"byte_end":17024718,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":3757}},{"kind":"Use","ref_id":{"krate":0,"index":4489},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024720,"byte_end":17024734,"line_start":61,"line_end":61,"column_start":45,"column_end":59},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":3757}},{"kind":"Use","ref_id":{"krate":0,"index":4482},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2967,"byte_end":2973,"line_start":100,"line_end":100,"column_start":28,"column_end":34},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5806},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221141,"byte_end":17221153,"line_start":88,"line_end":88,"column_start":22,"column_end":34},"alias_span":null,"name":"AddrIncoming","value":"","parent":{"krate":0,"index":5416}},{"kind":"Use","ref_id":{"krate":0,"index":6119},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221155,"byte_end":17221165,"line_start":88,"line_end":88,"column_start":36,"column_end":46},"alias_span":null,"name":"AddrStream","value":"","parent":{"krate":0,"index":5416}},{"kind":"Use","ref_id":{"krate":0,"index":6508},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215293,"byte_end":17215299,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":5363}},{"kind":"Use","ref_id":{"krate":0,"index":6101},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215394,"byte_end":17215401,"line_start":161,"line_end":161,"column_start":27,"column_end":34},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":5363}},{"kind":"Use","ref_id":{"krate":0,"index":6508},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":3090,"byte_end":3096,"line_start":108,"line_end":108,"column_start":28,"column_end":34},"alias_span":null,"name":"Server","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":0,"byte_end":3099,"line_start":1,"line_end":109,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":437},{"krate":0,"index":709},{"krate":0,"index":808},{"krate":0,"index":835},{"krate":0,"index":839},{"krate":0,"index":1114},{"krate":0,"index":1744},{"krate":0,"index":1780},{"krate":0,"index":3757},{"krate":0,"index":3858},{"krate":0,"index":5363},{"krate":0,"index":5885}],"decl_id":null,"docs":" # hyper","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":23,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/ # hyper","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":306,"byte_end":317,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":318,"byte_end":321,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ hyper is a **fast** and **correct** HTTP implementation written in and for Rust.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":322,"byte_end":406,"line_start":11,"line_end":11,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":407,"byte_end":410,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":411,"byte_end":426,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":427,"byte_end":430,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - HTTP/1 and HTTP/2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":431,"byte_end":454,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ - Asynchronous design","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":455,"byte_end":480,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ - Leading in performance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":481,"byte_end":509,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ - Tested and **correct**","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":510,"byte_end":538,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ - Extensive production use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":539,"byte_end":569,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ - [Client](client/index.html) and [Server](server/index.html) APIs","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":570,"byte_end":640,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":641,"byte_end":644,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If just starting out, **check out the [Guides](https://hyper.rs/guides)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":645,"byte_end":720,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ first.**","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":721,"byte_end":733,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":734,"byte_end":737,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## \"Low-level\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":738,"byte_end":756,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":757,"byte_end":760,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ hyper is a lower-level HTTP library, meant to be a building block","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":761,"byte_end":830,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ for libraries and applications.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":831,"byte_end":866,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":867,"byte_end":870,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If looking for just a convenient HTTP client, consider the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":871,"byte_end":933,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ [reqwest](https://crates.io/crates/reqwest) crate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":934,"byte_end":988,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":989,"byte_end":992,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Optional Features","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":993,"byte_end":1016,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ hyper uses a set of [feature flags] to reduce the amount of compiled code.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1021,"byte_end":1099,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ It is possible to just enable certain features over others. By default,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1100,"byte_end":1175,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ hyper does not enable any features but allows one to enable a subset for","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1176,"byte_end":1252,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ their use case. Below is a list of the available feature flags. You may","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1253,"byte_end":1328,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ also notice above each function, struct and trait there is listed one or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1329,"byte_end":1405,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ more feature flags that are required for that item to be used.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1406,"byte_end":1472,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1473,"byte_end":1476,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If you are new to hyper it is possible to enable the `full` feature flag","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1477,"byte_end":1553,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ which will enable all public APIs. Beware though that this will pull in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1554,"byte_end":1629,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ many extra dependencies that you may not need.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1630,"byte_end":1680,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1681,"byte_end":1684,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The following optional features are available:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1685,"byte_end":1735,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1736,"byte_end":1739,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - `http1`: Enables HTTP/1 support.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1740,"byte_end":1778,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ - `http2`: Enables HTTP/2 support.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1779,"byte_end":1817,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/ - `client`: Enables the HTTP `client`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1818,"byte_end":1860,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ - `server`: Enables the HTTP `server`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1861,"byte_end":1903,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ - `runtime`: Enables convenient integration with `tokio`, providing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1904,"byte_end":1975,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/   connectors and acceptors for TCP, and a default executor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":1976,"byte_end":2039,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ - `tcp`: Enables convenient implementations over TCP (using tokio).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2040,"byte_end":2111,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ - `stream`: Provides `futures::Stream` capabilities.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2112,"byte_end":2168,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2169,"byte_end":2172,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2173,"byte_end":2270,"line_start":57,"line_end":57,"column_start":1,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1241},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":12626,"byte_end":12634,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"name":"Watching","qualname":"::common::drain::Watching","value":"Watching {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":218},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18697,"byte_end":18711,"line_start":19,"line_end":19,"column_start":11,"column_end":25},"name":"ConnStreamExec","qualname":"::common::exec::ConnStreamExec","value":"ConnStreamExec<F, B: HttpBody>: Clone","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18660,"byte_end":18686,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18744,"byte_end":18760,"line_start":20,"line_end":20,"column_start":8,"column_end":24},"name":"execute_h2stream","qualname":"::common::exec::ConnStreamExec::execute_h2stream","value":"pub fn execute_h2stream(&mut Self, H2Stream<F, B>)","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18882,"byte_end":18892,"line_start":24,"line_end":24,"column_start":11,"column_end":21},"name":"NewSvcExec","qualname":"::common::exec::NewSvcExec","value":"NewSvcExec<I, N, S: HttpService<Body>, E, W: Watcher<I, S, E>>: Clone","parent":null,"children":[{"krate":0,"index":228}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(feature = \"server\", any(feature = \"http1\", feature = \"http2\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18797,"byte_end":18871,"line_start":23,"line_end":23,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18961,"byte_end":18976,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"execute_new_svc","qualname":"::common::exec::NewSvcExec::execute_new_svc","value":"pub fn execute_new_svc(&mut Self, NewSvcTask<I, N, S, E, W>)","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":19227,"byte_end":19234,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"name":"Default","qualname":"::common::exec::Exec::Default","value":"Exec::Default","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":19240,"byte_end":19248,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"Executor","qualname":"::common::exec::Exec::Executor","value":"Exec::Executor(Arc<dyn Executor<BoxSendFuture> + Send + Sync>)","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1294},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":19216,"byte_end":19220,"line_start":33,"line_end":33,"column_start":10,"column_end":14},"name":"Exec","qualname":"::common::exec::Exec","value":"pub enum Exec {\n    Default,\n    Executor(Arc<dyn Executor<BoxSendFuture> + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":437},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"body","qualname":"::body","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":482},{"krate":0,"index":653},{"krate":0,"index":677},{"krate":0,"index":695},{"krate":0,"index":704}],"decl_id":null,"docs":" Streaming bodies for Requests and Responses","sig":null,"attributes":[{"value":"/ Streaming bodies for Requests and Responses","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":34885,"byte_end":34932,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":34933,"byte_end":34936,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For both [Clients](crate::client) and [Servers](crate::server), requests and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":34937,"byte_end":35017,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ responses use streaming bodies, instead of complete buffering. This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35018,"byte_end":35089,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ allows applications to not use memory they don't need, and allows exerting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35090,"byte_end":35168,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ back-pressure on connections by only reading when asked.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35169,"byte_end":35229,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35230,"byte_end":35233,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two pieces to this in hyper:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35234,"byte_end":35276,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35277,"byte_end":35280,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - **The [`HttpBody`](HttpBody) trait** describes all possible bodies.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35281,"byte_end":35354,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/   hyper allows any body type that implements `HttpBody`, allowing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35355,"byte_end":35424,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   applications to have fine-grained control over their streaming.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35425,"byte_end":35494,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ - **The [`Body`](Body) concrete type**, which is an implementation of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35495,"byte_end":35568,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   `HttpBody`, and returned by hyper as a \"receive stream\" (so, for server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35569,"byte_end":35646,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/   requests and client responses). It is also a decent default implementation","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35647,"byte_end":35727,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/   if you don't have very custom needs of your send streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/mod.rs","byte_start":35728,"byte_end":35791,"line_start":16,"line_end":16,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":477},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37791,"byte_end":37800,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"name":"aggregate","qualname":"::body::aggregate::aggregate","value":"pub async fn aggregate<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Aggregate the data buffers from a body asynchronously.","sig":null,"attributes":[{"value":"/ Aggregate the data buffers from a body asynchronously.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37268,"byte_end":37326,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37327,"byte_end":37330,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned `impl Buf` groups the `Buf`s from the `HttpBody` without","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37331,"byte_end":37404,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ copying them. This is ideal if you don't require a contiguous buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37405,"byte_end":37478,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37479,"byte_end":37482,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37483,"byte_end":37493,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37494,"byte_end":37497,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37498,"byte_end":37594,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37595,"byte_end":37691,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/aggregate.rs","byte_start":37692,"byte_end":37777,"line_start":15,"line_end":15,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":39279,"byte_end":39283,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Body","qualname":"::body::body::Body","value":"Body {  }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" A stream of `Bytes`, used when receiving bodies.","sig":null,"attributes":[{"value":"/ A stream of `Bytes`, used when receiving bodies.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":38939,"byte_end":38991,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":38992,"byte_end":38995,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A good default [`HttpBody`](crate::body::HttpBody) to use in many","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":38996,"byte_end":39065,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ applications.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":39066,"byte_end":39083,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":39084,"byte_end":39087,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: To read the full body, use [`body::to_bytes`](crate::body::to_bytes)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":39088,"byte_end":39166,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ or [`body::aggregate`](crate::body::aggregate).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":39167,"byte_end":39218,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":39219,"byte_end":39267,"line_start":35,"line_end":35,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":576},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41972,"byte_end":41978,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"Sender","qualname":"::body::body::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":" A sender half created through [`Body::channel()`].","sig":null,"attributes":[{"value":"/ A sender half created through [`Body::channel()`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41264,"byte_end":41318,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41319,"byte_end":41322,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41323,"byte_end":41384,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41385,"byte_end":41388,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Body Closing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41389,"byte_end":41408,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41409,"byte_end":41412,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Note that the request body will always be closed normally when the sender is dropped (meaning","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41413,"byte_end":41510,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ that the empty terminating chunk will be sent to the remote). If you desire to close the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41511,"byte_end":41603,"line_start":102,"line_end":102,"column_start":1,"column_end":93}},{"value":"/ connection with an incomplete response (e.g. in the case of an error during asynchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41604,"byte_end":41696,"line_start":103,"line_end":103,"column_start":1,"column_end":93}},{"value":"/ processing), call the [`Sender::abort()`] method to abort the body in an abnormal fashion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41697,"byte_end":41791,"line_start":104,"line_end":104,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41792,"byte_end":41795,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Body::channel()`]: struct.Body.html#method.channel","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41796,"byte_end":41852,"line_start":106,"line_end":106,"column_start":1,"column_end":57}},{"value":"/ [`Sender::abort()`]: struct.Sender.html#method.abort","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41853,"byte_end":41909,"line_start":107,"line_end":107,"column_start":1,"column_end":57}},{"value":"must_use = \"Sender does nothing unless sent on\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":41910,"byte_end":41960,"line_start":108,"line_end":108,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42402,"byte_end":42407,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"empty","qualname":"<Body>::empty","value":"pub fn empty() -> Body","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `Body` stream.","sig":null,"attributes":[{"value":"/ Create an empty `Body` stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42157,"byte_end":42191,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42196,"byte_end":42199,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42204,"byte_end":42217,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42222,"byte_end":42225,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42230,"byte_end":42237,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use hyper::{Body, Request};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42242,"byte_end":42273,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42278,"byte_end":42281,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // create a `GET /` request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42286,"byte_end":42317,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/ let get = Request::new(Body::empty());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42322,"byte_end":42364,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42369,"byte_end":42376,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42381,"byte_end":42390,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42625,"byte_end":42632,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"channel","qualname":"<Body>::channel","value":"pub fn channel() -> (Sender, Body)","parent":null,"children":[],"decl_id":null,"docs":" Create a `Body` stream with an associated sender half.","sig":null,"attributes":[{"value":"/ Create a `Body` stream with an associated sender half.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42467,"byte_end":42525,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42530,"byte_end":42533,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Useful when wanting to stream chunks from another thread.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42538,"byte_end":42599,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42604,"byte_end":42613,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":44115,"byte_end":44126,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"wrap_stream","qualname":"<Body>::wrap_stream","value":"pub fn wrap_stream<S, O, E>(S) -> Body where S: Stream<Item = Result<O, E>> +\nSend + 'static, O: Into<Bytes> + 'static,\nE: Into<Box<dyn StdError + Send + Sync>> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Wrap a futures `Stream` in a box inside `Body`.","sig":null,"attributes":[{"value":"/ Wrap a futures `Stream` in a box inside `Body`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43496,"byte_end":43547,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43552,"byte_end":43555,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43560,"byte_end":43573,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43578,"byte_end":43581,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43586,"byte_end":43593,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ # use hyper::Body;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43598,"byte_end":43620,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/ let chunks: Vec<Result<_, std::io::Error>> = vec![","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43625,"byte_end":43679,"line_start":173,"line_end":173,"column_start":5,"column_end":59}},{"value":"/     Ok(\"hello\"),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43684,"byte_end":43704,"line_start":174,"line_end":174,"column_start":5,"column_end":25}},{"value":"/     Ok(\" \"),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43709,"byte_end":43725,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/     Ok(\"world\"),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43730,"byte_end":43750,"line_start":176,"line_end":176,"column_start":5,"column_end":25}},{"value":"/ ];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43755,"byte_end":43761,"line_start":177,"line_end":177,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43766,"byte_end":43769,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let stream = futures_util::stream::iter(chunks);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43774,"byte_end":43826,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43831,"byte_end":43834,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let body = Body::wrap_stream(stream);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43839,"byte_end":43880,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43885,"byte_end":43892,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43897,"byte_end":43900,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Optional","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43905,"byte_end":43919,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43924,"byte_end":43927,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function requires enabling the `stream` feature in your","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":43932,"byte_end":43996,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":44001,"byte_end":44018,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":44023,"byte_end":44049,"line_start":188,"line_end":188,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55535,"byte_end":55545,"line_start":548,"line_end":548,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context) -> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Check to see if this `Sender` can send more data.\n","sig":null,"attributes":[{"value":"/ Check to see if this `Sender` can send more data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55470,"byte_end":55523,"line_start":547,"line_end":547,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":56409,"byte_end":56418,"line_start":570,"line_end":570,"column_start":18,"column_end":27},"name":"send_data","qualname":"<Sender>::send_data","value":"pub async fn send_data<'_>(&'_ mut Self, Bytes) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send data on data channel when it is ready.\n","sig":null,"attributes":[{"value":"/ Send data on data channel when it is ready.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":56344,"byte_end":56391,"line_start":569,"line_end":569,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":56670,"byte_end":56683,"line_start":578,"line_end":578,"column_start":18,"column_end":31},"name":"send_trailers","qualname":"<Sender>::send_trailers","value":"pub async fn send_trailers<'_>(&'_ mut Self, HeaderMap) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send trailers on trailers channel.\n","sig":null,"attributes":[{"value":"/ Send trailers on trailers channel.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":56614,"byte_end":56652,"line_start":577,"line_end":577,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57358,"byte_end":57371,"line_start":598,"line_end":598,"column_start":12,"column_end":25},"name":"try_send_data","qualname":"<Sender>::try_send_data","value":"pub fn try_send_data(&mut Self, Bytes) -> Result<(), Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on this channel.","sig":null,"attributes":[{"value":"/ Try to send data on this channel.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":56964,"byte_end":57001,"line_start":586,"line_end":586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57006,"byte_end":57009,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57014,"byte_end":57026,"line_start":588,"line_end":588,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57031,"byte_end":57034,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(Bytes)` if the channel could not (currently) accept","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57039,"byte_end":57107,"line_start":590,"line_end":590,"column_start":5,"column_end":73}},{"value":"/ another `Bytes`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57112,"byte_end":57132,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57137,"byte_end":57140,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57145,"byte_end":57155,"line_start":593,"line_end":593,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57160,"byte_end":57163,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ This is mostly useful for when trying to send from some other thread","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57168,"byte_end":57240,"line_start":595,"line_end":595,"column_start":5,"column_end":77}},{"value":"/ that doesn't have an async context. If in an async context, prefer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57245,"byte_end":57315,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ `send_data()` instead.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57320,"byte_end":57346,"line_start":597,"line_end":597,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57608,"byte_end":57613,"line_start":605,"line_end":605,"column_start":12,"column_end":17},"name":"abort","qualname":"<Sender>::abort","value":"pub fn abort(Self)","parent":null,"children":[],"decl_id":null,"docs":" Aborts the body in an abnormal fashion.\n","sig":null,"attributes":[{"value":"/ Aborts the body in an abnormal fashion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57553,"byte_end":57596,"line_start":604,"line_end":604,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":691},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67990,"byte_end":67998,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"to_bytes","qualname":"::body::to_bytes::to_bytes","value":"pub async fn to_bytes<T>(T) -> /*impl Trait*/ where T: HttpBody","parent":null,"children":[],"decl_id":null,"docs":" Concatenate the buffers from a body into a single `Bytes` asynchronously.","sig":null,"attributes":[{"value":"/ Concatenate the buffers from a body into a single `Bytes` asynchronously.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66390,"byte_end":66467,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66468,"byte_end":66471,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This may require copying the data into a single buffer. If you don't need","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66472,"byte_end":66549,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ a contiguous buffer, prefer the [`aggregate`](crate::body::aggregate())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66550,"byte_end":66625,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66626,"byte_end":66639,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66640,"byte_end":66643,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66644,"byte_end":66654,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66655,"byte_end":66658,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Care needs to be taken if the remote is untrusted. The function doesn't implement any length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66659,"byte_end":66755,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ checks and an malicious peer might make it consume arbitrary amounts of memory. Checking the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66756,"byte_end":66852,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Content-Length` is a possibility, but it is not strictly mandated to be present.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66853,"byte_end":66938,"line_start":15,"line_end":15,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66939,"byte_end":66942,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66943,"byte_end":66956,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66957,"byte_end":66960,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66961,"byte_end":66968,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"client\", any(feature = \"http1\", feature = \"http2\")))]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":66969,"byte_end":67049,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ # async fn doc() -> hyper::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67050,"byte_end":67093,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/ use hyper::{body::HttpBody};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67094,"byte_end":67126,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67127,"byte_end":67130,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # let request = hyper::Request::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67131,"byte_end":67176,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ #        .method(hyper::Method::POST)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67177,"byte_end":67218,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ #        .uri(\"http://httpbin.org/post\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67219,"byte_end":67263,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ #        .header(\"content-type\", \"application/json\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67264,"byte_end":67320,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ #        .body(hyper::Body::from(r#\"{\"library\":\"hyper\"}\"#)).unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67321,"byte_end":67394,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ # let client = hyper::Client::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67395,"byte_end":67435,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ let response = client.request(request).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67436,"byte_end":67486,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67487,"byte_end":67490,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ const MAX_ALLOWED_RESPONSE_SIZE: u64 = 1024;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67491,"byte_end":67539,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67540,"byte_end":67543,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let response_content_length = match response.body().size_hint().upper() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67544,"byte_end":67621,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/     Some(v) => v,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67622,"byte_end":67643,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/     None => MAX_ALLOWED_RESPONSE_SIZE + 1 // Just to protect ourselves from a malicious response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67644,"byte_end":67744,"line_start":36,"line_end":36,"column_start":1,"column_end":101}},{"value":"/ };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67745,"byte_end":67751,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67752,"byte_end":67755,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ if response_content_length < MAX_ALLOWED_RESPONSE_SIZE {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67756,"byte_end":67816,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/     let body_bytes = hyper::body::to_bytes(response.into_body()).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67817,"byte_end":67893,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/     println!(\"body: {:?}\", body_bytes);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67894,"byte_end":67937,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67938,"byte_end":67943,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67944,"byte_end":67947,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67948,"byte_end":67960,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67961,"byte_end":67968,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/to_bytes.rs","byte_start":67969,"byte_end":67976,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":716},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":68939,"byte_end":68945,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type often returned from methods that can have hyper `Error`s.\n","sig":null,"attributes":[{"value":"/ Result type often returned from methods that can have hyper `Error`s.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":68856,"byte_end":68929,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":69101,"byte_end":69106,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":720}],"decl_id":null,"docs":" Represents errors that can occur handling HTTP streams.\n","sig":null,"attributes":[{"value":"/ Represents errors that can occur handling HTTP streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":69030,"byte_end":69089,"line_start":10,"line_end":10,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73323,"byte_end":73331,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_parse","qualname":"<Error>::is_parse","value":"pub fn is_parse(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73262,"byte_end":73311,"line_start":150,"line_end":150,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73510,"byte_end":73528,"line_start":156,"line_end":156,"column_start":12,"column_end":30},"name":"is_parse_too_large","qualname":"<Error>::is_parse_too_large","value":"pub fn is_parse_too_large(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by a message that was too large.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by a message that was too large.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73410,"byte_end":73498,"line_start":155,"line_end":155,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73816,"byte_end":73831,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"is_parse_status","qualname":"<Error>::is_parse_status","value":"pub fn is_parse_status(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an HTTP parse error caused by an invalid response status code or\n reason phrase.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an HTTP parse error caused by an invalid response status code or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73688,"byte_end":73781,"line_start":163,"line_end":163,"column_start":5,"column_end":98}},{"value":"/ reason phrase.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73786,"byte_end":73804,"line_start":164,"line_end":164,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73989,"byte_end":73996,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"is_user","qualname":"<Error>::is_user","value":"pub fn is_user(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error was caused by user code.\n","sig":null,"attributes":[{"value":"/ Returns true if this error was caused by user code.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73922,"byte_end":73977,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74151,"byte_end":74162,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Error>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was about a `Request` that was canceled.\n","sig":null,"attributes":[{"value":"/ Returns true if this was about a `Request` that was canceled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74074,"byte_end":74139,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74302,"byte_end":74311,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Error>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a sender's channel is closed.\n","sig":null,"attributes":[{"value":"/ Returns true if a sender's channel is closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74241,"byte_end":74290,"line_start":179,"line_end":179,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74460,"byte_end":74470,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"is_connect","qualname":"<Error>::is_connect","value":"pub fn is_connect(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this was an error from `Connect`.\n","sig":null,"attributes":[{"value":"/ Returns true if this was an error from `Connect`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74395,"byte_end":74448,"line_start":184,"line_end":184,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74634,"byte_end":74655,"line_start":190,"line_end":190,"column_start":12,"column_end":33},"name":"is_incomplete_message","qualname":"<Error>::is_incomplete_message","value":"pub fn is_incomplete_message(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the connection closed before a message could complete.\n","sig":null,"attributes":[{"value":"/ Returns true if the connection closed before a message could complete.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74548,"byte_end":74622,"line_start":189,"line_end":189,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74802,"byte_end":74823,"line_start":195,"line_end":195,"column_start":12,"column_end":33},"name":"is_body_write_aborted","qualname":"<Error>::is_body_write_aborted","value":"pub fn is_body_write_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the body write was aborted.\n","sig":null,"attributes":[{"value":"/ Returns true if the body write was aborted.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74743,"byte_end":74790,"line_start":194,"line_end":194,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74976,"byte_end":74986,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"is_timeout","qualname":"<Error>::is_timeout","value":"pub fn is_timeout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by a timeout.\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by a timeout.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":74910,"byte_end":74964,"line_start":199,"line_end":199,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":75120,"byte_end":75130,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"into_cause","qualname":"<Error>::into_cause","value":"pub fn into_cause(Self) -> Option<Box<dyn StdError + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the error, returning its cause.\n","sig":null,"attributes":[{"value":"/ Consumes the error, returning its cause.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":75064,"byte_end":75108,"line_start":204,"line_end":204,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":835},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rt","qualname":"::rt","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","parent":null,"children":[{"krate":0,"index":836}],"decl_id":null,"docs":" Runtime components","sig":null,"attributes":[{"value":"/ Runtime components","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91364,"byte_end":91386,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91387,"byte_end":91390,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ By default, hyper includes the [tokio](https://tokio.rs) runtime.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91391,"byte_end":91460,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91461,"byte_end":91464,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If the `runtime` feature is disabled, the types in this module can be used","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91465,"byte_end":91543,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to plug in other runtimes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91544,"byte_end":91574,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":836},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91614,"byte_end":91622,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Executor","qualname":"::rt::Executor","value":"Executor<Fut>","parent":null,"children":[{"krate":0,"index":838}],"decl_id":null,"docs":" An executor of futures.\n","sig":null,"attributes":[{"value":"/ An executor of futures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91576,"byte_end":91603,"line_start":8,"line_end":8,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91691,"byte_end":91698,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"execute","qualname":"::rt::Executor::execute","value":"pub fn execute(&Self, Fut)","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":" Place the future into the executor to be run.\n","sig":null,"attributes":[{"value":"/ Place the future into the executor to be run.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/rt.rs","byte_start":91634,"byte_end":91683,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":839},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::service","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":890},{"krate":0,"index":1003},{"krate":0,"index":1031},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111}],"decl_id":null,"docs":" Asynchronous Services","sig":null,"attributes":[{"value":"/ Asynchronous Services","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":91720,"byte_end":91745,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":91746,"byte_end":91749,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A [`Service`](Service) is a trait representing an asynchronous","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":91750,"byte_end":91816,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ function of a request to a response. It's similar to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":91817,"byte_end":91873,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ `async fn(Request) -> Result<Response, Error>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":91874,"byte_end":91925,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":91926,"byte_end":91929,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The argument and return value isn't strictly required to be for HTTP.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":91930,"byte_end":92003,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ Therefore, hyper uses several \"trait aliases\" to reduce clutter around","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92004,"byte_end":92078,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ bounds. These are:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92079,"byte_end":92101,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92102,"byte_end":92105,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `HttpService`: This is blanketly implemented for all types that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92106,"byte_end":92175,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/   implement `Service<http::Request<B1>, Response = http::Response<B2>>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92176,"byte_end":92252,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ - `MakeService`: When a `Service` returns a new `Service` as its \"response\",","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92253,"byte_end":92333,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/   we consider it a `MakeService`. Again, blanketly implemented in those cases.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92334,"byte_end":92416,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ - `MakeConnection`: A `Service` that returns a \"connection\", a type that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92417,"byte_end":92493,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92494,"byte_end":92540,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92541,"byte_end":92544,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # HttpService","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92545,"byte_end":92562,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92563,"byte_end":92566,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In hyper, especially in the server setting, a `Service` is usually bound","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92567,"byte_end":92643,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ to a single connection. It defines how to respond to **all** requests that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92644,"byte_end":92722,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ connection will receive.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92723,"byte_end":92751,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92752,"byte_end":92755,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The helper [`service_fn`](service_fn) should be sufficient for most cases, but","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92756,"byte_end":92838,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ if you need to implement `Service` for a type manually, you can follow the example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92839,"byte_end":92925,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/ in `service_struct_impl.rs`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92926,"byte_end":92958,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92959,"byte_end":92962,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # MakeService","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92963,"byte_end":92980,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92981,"byte_end":92984,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Since a `Service` is bound to a single connection, a [`Server`](crate::Server)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":92985,"byte_end":93067,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ needs a way to make them as it accepts connections. This is what a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93068,"byte_end":93138,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ `MakeService` does.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93139,"byte_end":93162,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93163,"byte_end":93166,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Resources that need to be shared by all `Service`s can be put into a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93167,"byte_end":93239,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ `MakeService`, and then passed to individual `Service`s when `call`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93240,"byte_end":93311,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ is called.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/mod.rs","byte_start":93312,"byte_end":93326,"line_start":36,"line_end":36,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":867},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94158,"byte_end":94169,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"HttpService","qualname":"::service::http::HttpService","value":"HttpService<ReqBody>: sealed::Sealed<ReqBody>","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873}],"decl_id":null,"docs":" An asynchronous function from `Request` to `Response`.\n","sig":null,"attributes":[{"value":"/ An asynchronous function from `Request` to `Response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94089,"byte_end":94147,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":869},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94268,"byte_end":94275,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::http::HttpService::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" The `HttpBody` body of the `http::Response`.\n","sig":null,"attributes":[{"value":"/ The `HttpBody` body of the `http::Response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94210,"byte_end":94258,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":870},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94567,"byte_end":94572,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::http::HttpService::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" The error type that can occur within this `Service`.","sig":null,"attributes":[{"value":"/ The error type that can occur within this `Service`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94292,"byte_end":94348,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94353,"byte_end":94356,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Note: Returning an `Error` to a hyper server will cause the connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94361,"byte_end":94435,"line_start":14,"line_end":14,"column_start":5,"column_end":79}},{"value":"/ to be abruptly aborted. In most cases, it is better to return a `Response`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94440,"byte_end":94518,"line_start":15,"line_end":15,"column_start":5,"column_end":83}},{"value":"/ with a 4xx or 5xx status code.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94523,"byte_end":94557,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":871},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94672,"byte_end":94678,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::http::HttpService::Future","value":"type Future: Future<Output = Result<Response<Self::ResBody>, Self::Error>>;","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":" The `Future` returned by this `Service`.\n","sig":null,"attributes":[{"value":"/ The `Future` returned by this `Service`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94618,"byte_end":94662,"line_start":19,"line_end":19,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94770,"byte_end":94780,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::service::http::HttpService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94881,"byte_end":94885,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"call","qualname":"::service::http::HttpService::call","value":"pub fn call(&mut Self, Request<ReqBody>) -> Self::Future","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":888},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":95641,"byte_end":95647,"line_start":57,"line_end":57,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::http::sealed::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":924},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":95953,"byte_end":95967,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"MakeConnection","qualname":"::service::make::MakeConnection","value":"MakeConnection<Target>: self::sealed::Sealed<(Target,)>","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":926},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96020,"byte_end":96030,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Connection","qualname":"::service::make::MakeConnection::Connection","value":"type Connection: AsyncRead + AsyncWrite;","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":927},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96065,"byte_end":96070,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeConnection::Error","value":"type Error;","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":928},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96081,"byte_end":96087,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeConnection::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>>;","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96153,"byte_end":96163,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::service::make::MakeConnection::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96244,"byte_end":96259,"line_start":18,"line_end":18,"column_start":8,"column_end":23},"name":"make_connection","qualname":"::service::make::MakeConnection::make_connection","value":"pub fn make_connection(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":942},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96967,"byte_end":96981,"line_start":43,"line_end":43,"column_start":11,"column_end":25},"name":"MakeServiceRef","qualname":"::service::make::MakeServiceRef","value":"MakeServiceRef<Target, ReqBody>: self::sealed::Sealed<(Target, ReqBody)>","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":945},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97051,"byte_end":97058,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"ResBody","qualname":"::service::make::MakeServiceRef::ResBody","value":"type ResBody: HttpBody;","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":946},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97079,"byte_end":97084,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Error","qualname":"::service::make::MakeServiceRef::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":947},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97134,"byte_end":97141,"line_start":46,"line_end":46,"column_start":10,"column_end":17},"name":"Service","qualname":"::service::make::MakeServiceRef::Service","value":"type Service: HttpService<ReqBody, ResBody = Self::ResBody, Error = Self::Error>;","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":948},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97220,"byte_end":97229,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"MakeError","qualname":"::service::make::MakeServiceRef::MakeError","value":"type MakeError: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":949},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97279,"byte_end":97285,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Future","qualname":"::service::make::MakeServiceRef::Future","value":"type Future: Future<Output = Result<Self::Service, Self::MakeError>>;","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":950},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97793,"byte_end":97805,"line_start":59,"line_end":59,"column_start":10,"column_end":22},"name":"__DontNameMe","qualname":"::service::make::MakeServiceRef::__DontNameMe","value":"type __DontNameMe: self::sealed::CantImpl;","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97839,"byte_end":97853,"line_start":61,"line_end":61,"column_start":8,"column_end":22},"name":"poll_ready_ref","qualname":"::service::make::MakeServiceRef::poll_ready_ref","value":"pub fn poll_ready_ref(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::MakeError>>","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97939,"byte_end":97955,"line_start":63,"line_end":63,"column_start":8,"column_end":24},"name":"make_service_ref","qualname":"::service::make::MakeServiceRef::make_service_ref","value":"pub fn make_service_ref(&mut Self, &Target) -> Self::Future","parent":{"krate":0,"index":942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":978},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99998,"byte_end":100013,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"make_service_fn","qualname":"::service::make::make_service_fn","value":"pub fn make_service_fn<F, Target, Ret>(F) -> MakeServiceFn<F> where\nF: FnMut(&Target) -> Ret, Ret: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `MakeService` from a function.","sig":null,"attributes":[{"value":"/ Create a `MakeService` from a function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":98977,"byte_end":99020,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99021,"byte_end":99024,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99025,"byte_end":99038,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99039,"byte_end":99042,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99043,"byte_end":99050,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99051,"byte_end":99084,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99085,"byte_end":99107,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99108,"byte_end":99141,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99142,"byte_end":99191,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/ use hyper::server::conn::AddrStream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99192,"byte_end":99232,"line_start":111,"line_end":111,"column_start":1,"column_end":41}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99233,"byte_end":99287,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99288,"byte_end":99291,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let addr = ([127, 0, 0, 1], 3000).into();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99292,"byte_end":99337,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99338,"byte_end":99341,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let make_svc = make_service_fn(|socket: &AddrStream| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99342,"byte_end":99400,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/     let remote_addr = socket.remote_addr();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99401,"byte_end":99448,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/     async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99449,"byte_end":99469,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/         Ok::<_, Infallible>(service_fn(move |_: Request<Body>| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99470,"byte_end":99549,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/             Ok::<_, Infallible>(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99550,"byte_end":99586,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/                 Response::new(Body::from(format!(\"Hello, {}!\", remote_addr)))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99587,"byte_end":99668,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/             )","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99669,"byte_end":99686,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/         }))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99687,"byte_end":99702,"line_start":123,"line_end":123,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99703,"byte_end":99712,"line_start":124,"line_end":124,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99713,"byte_end":99720,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99721,"byte_end":99724,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // Then bind and serve...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99725,"byte_end":99754,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"/ let server = Server::bind(&addr)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99755,"byte_end":99791,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/     .serve(make_svc);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99792,"byte_end":99817,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99818,"byte_end":99821,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // Finally, spawn `server` onto an Executor...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99822,"byte_end":99872,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/ if let Err(e) = server.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99873,"byte_end":99907,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/     eprintln!(\"server error: {}\", e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99908,"byte_end":99949,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99950,"byte_end":99955,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99956,"byte_end":99963,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99964,"byte_end":99982,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":99983,"byte_end":99990,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1575},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":100224,"byte_end":100237,"line_start":148,"line_end":148,"column_start":12,"column_end":25},"name":"MakeServiceFn","qualname":"::service::make::MakeServiceFn","value":"MakeServiceFn {  }","parent":null,"children":[{"krate":0,"index":1577}],"decl_id":null,"docs":" `MakeService` returned from [`make_service_fn`]\n","sig":null,"attributes":[{"value":"/ `MakeService` returned from [`make_service_fn`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":100138,"byte_end":100189,"line_start":146,"line_end":146,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":998},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":100954,"byte_end":100960,"line_start":178,"line_end":178,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::service::make::sealed::Sealed","value":"Sealed<X>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1001},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":101106,"byte_end":101114,"line_start":184,"line_end":184,"column_start":14,"column_end":22},"name":"CantName","qualname":"::service::make::sealed::CantName","value":"pub enum CantName { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":101053,"byte_end":101092,"line_start":183,"line_end":183,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1583},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/oneshot.rs","byte_start":101754,"byte_end":101761,"line_start":22,"line_end":22,"column_start":16,"column_end":23},"name":"Oneshot","qualname":"::service::oneshot::Oneshot","value":"Oneshot {  }","parent":null,"children":[{"krate":0,"index":1586}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1061},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103817,"byte_end":103827,"line_start":27,"line_end":27,"column_start":8,"column_end":18},"name":"service_fn","qualname":"::service::util::service_fn","value":"pub fn service_fn<F, R, S>(F) -> ServiceFn<F, R> where F: FnMut(Request<R>) ->\nS, S: Future","parent":null,"children":[],"decl_id":null,"docs":" Create a `Service` from a function.","sig":null,"attributes":[{"value":"/ Create a `Service` from a function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103262,"byte_end":103301,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103302,"byte_end":103305,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103306,"byte_end":103319,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103320,"byte_end":103323,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103324,"byte_end":103331,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use hyper::{Body, Request, Response, Version};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103332,"byte_end":103382,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/ use hyper::service::service_fn;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103383,"byte_end":103418,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103419,"byte_end":103422,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let service = service_fn(|req: Request<Body>| async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103423,"byte_end":103485,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/     if req.version() == Version::HTTP_11 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103486,"byte_end":103532,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/         Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103533,"byte_end":103589,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103590,"byte_end":103606,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/         // Note: it's usually better to return a Response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103607,"byte_end":103668,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/         // with an appropriate StatusCode instead of an Err.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103669,"byte_end":103733,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/         Err(\"not HTTP/1.1, abort connection\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103734,"byte_end":103783,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103784,"byte_end":103793,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103794,"byte_end":103801,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103802,"byte_end":103809,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1065},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":104029,"byte_end":104038,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"ServiceFn","qualname":"::service::util::ServiceFn","value":"ServiceFn {  }","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" Service returned by [`service_fn`]\n","sig":null,"attributes":[{"value":"/ Service returned by [`service_fn`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":103979,"byte_end":104017,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":1114},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"upgrade","qualname":"::upgrade","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1680},{"krate":0,"index":1685},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1213}],"decl_id":null,"docs":" HTTP Upgrades","sig":null,"attributes":[{"value":"/ HTTP Upgrades","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105118,"byte_end":105135,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105136,"byte_end":105139,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module deals with managing [HTTP Upgrades][mdn] in hyper. Since","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105140,"byte_end":105212,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ several concepts in HTTP allow for first talking HTTP, and then converting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105213,"byte_end":105291,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to a different protocol, this module conflates them into a single API.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105292,"byte_end":105366,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ Those include:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105367,"byte_end":105385,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105386,"byte_end":105389,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - HTTP/1.1 Upgrades","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105390,"byte_end":105413,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ - HTTP `CONNECT`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105414,"byte_end":105434,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105435,"byte_end":105438,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ You are responsible for any other pre-requisites to establish an upgrade,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105439,"byte_end":105516,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ such as sending the appropriate headers, methods, and status codes. You can","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105517,"byte_end":105596,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ then use [`on`][] to grab a `Future` which will resolve to the upgraded","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105597,"byte_end":105672,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ connection object, or an error if the upgrade fails.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105673,"byte_end":105729,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105730,"byte_end":105733,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105734,"byte_end":105821,"line_start":16,"line_end":16,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105822,"byte_end":105825,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105826,"byte_end":105838,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105839,"byte_end":105842,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Sending an HTTP ugprade from the [`client`](super::client) involves setting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105843,"byte_end":105922,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ either the appropriate method, if wanting to `CONNECT`, or headers such as","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":105923,"byte_end":106001,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ `Upgrade` and `Connection`, on the `http::Request`. Once receiving the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106002,"byte_end":106076,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ `http::Response` back, you must check for the specific information that the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106077,"byte_end":106156,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ upgrade is agreed upon by the server (such as a `101` status code), and then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106157,"byte_end":106237,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ get the `Future` from the `Response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106238,"byte_end":106279,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106280,"byte_end":106283,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106284,"byte_end":106296,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106297,"byte_end":106300,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Receiving upgrade requests in a server requires you to check the relevant","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106301,"byte_end":106378,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ headers in a `Request`, and if an upgrade should be done, you then send the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106379,"byte_end":106458,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ corresponding headers in a response. To then wait for hyper to finish the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106459,"byte_end":106536,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ upgrade, you call `on()` with the `Request`, and then can spawn a task","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106537,"byte_end":106611,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ awaiting it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106612,"byte_end":106628,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106629,"byte_end":106632,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106633,"byte_end":106646,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106647,"byte_end":106650,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ See [this example][example] showing how upgrades work with both","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106651,"byte_end":106718,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"/ Clients and Servers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106719,"byte_end":106743,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106744,"byte_end":106747,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":106748,"byte_end":106829,"line_start":40,"line_end":40,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107512,"byte_end":107520,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Upgraded","qualname":"::upgrade::Upgraded","value":"Upgraded {  }","parent":null,"children":[{"krate":0,"index":1166}],"decl_id":null,"docs":" An upgraded HTTP connection.","sig":null,"attributes":[{"value":"/ An upgraded HTTP connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107182,"byte_end":107214,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107215,"byte_end":107218,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This type holds a trait object internally of the original IO that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107219,"byte_end":107288,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ was used to speak HTTP before the upgrade. It can be used directly","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107289,"byte_end":107359,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ as a `Read` or `Write` for convenience.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107360,"byte_end":107403,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107404,"byte_end":107407,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Alternatively, if the exact type is known, this can be deconstructed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107408,"byte_end":107480,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ into its parts.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107481,"byte_end":107500,"line_start":64,"line_end":64,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107694,"byte_end":107703,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"OnUpgrade","qualname":"::upgrade::OnUpgrade","value":"OnUpgrade {  }","parent":null,"children":[{"krate":0,"index":1168}],"decl_id":null,"docs":" A future for a possible HTTP upgrade.","sig":null,"attributes":[{"value":"/ A future for a possible HTTP upgrade.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107562,"byte_end":107603,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107604,"byte_end":107607,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ If no upgrade was available, or it doesn't succeed, yields an `Error`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107608,"byte_end":107682,"line_start":71,"line_end":71,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108010,"byte_end":108015,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Parts","qualname":"::upgrade::Parts","value":"Parts { io, read_buf }","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684}],"decl_id":null,"docs":" The deconstructed parts of an [`Upgraded`](Upgraded) type.","sig":null,"attributes":[{"value":"/ The deconstructed parts of an [`Upgraded`](Upgraded) type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107769,"byte_end":107831,"line_start":76,"line_end":76,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107832,"byte_end":107835,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Includes the original IO type, and a read buffer of bytes that the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107836,"byte_end":107906,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ HTTP state machine may have already read before completing an upgrade.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":107907,"byte_end":107981,"line_start":79,"line_end":79,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1682},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108085,"byte_end":108087,"line_start":83,"line_end":83,"column_start":9,"column_end":11},"name":"io","qualname":"::upgrade::Parts::io","value":"T","parent":{"krate":0,"index":1680},"children":[],"decl_id":null,"docs":" The original IO object used before the upgrade.\n","sig":null,"attributes":[{"value":"/ The original IO object used before the upgrade.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108025,"byte_end":108076,"line_start":82,"line_end":82,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1683},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108507,"byte_end":108515,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::upgrade::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":1680},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108096,"byte_end":108164,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108169,"byte_end":108172,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ For instance, if the `Connection` is used for an HTTP upgrade request,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108177,"byte_end":108251,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ it is possible the server sent back the first bytes of the new protocol","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108256,"byte_end":108331,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ along with the response upgrade.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108336,"byte_end":108372,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108377,"byte_end":108380,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108385,"byte_end":108458,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108463,"byte_end":108498,"line_start":91,"line_end":91,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108768,"byte_end":108770,"line_start":104,"line_end":104,"column_start":8,"column_end":10},"name":"on","qualname":"::upgrade::on","value":"pub fn on<T: sealed::CanUpgrade>(T) -> OnUpgrade","parent":null,"children":[],"decl_id":null,"docs":" Gets a pending HTTP upgrade from this message.","sig":null,"attributes":[{"value":"/ Gets a pending HTTP upgrade from this message.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108543,"byte_end":108593,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108594,"byte_end":108597,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This can be called on the following types:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108598,"byte_end":108644,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108645,"byte_end":108648,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ - `http::Request<B>`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108649,"byte_end":108673,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"/ - `http::Response<B>`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108674,"byte_end":108699,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"/ - `&mut http::Request<B>`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108700,"byte_end":108729,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/ - `&mut http::Response<B>`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":108730,"byte_end":108760,"line_start":103,"line_end":103,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":109688,"byte_end":109696,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"downcast","qualname":"<Upgraded>::downcast","value":"pub fn downcast<T: AsyncRead + AsyncWrite + Unpin + 'static>(Self)\n-> Result<Parts<T>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to downcast the internal trait object to the type passed.","sig":null,"attributes":[{"value":"/ Tries to downcast the internal trait object to the type passed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":109504,"byte_end":109571,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":109576,"byte_end":109579,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ On success, returns the downcasted parts. On error, returns the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":109584,"byte_end":109651,"line_start":134,"line_end":134,"column_start":5,"column_end":72}},{"value":"/ `Upgraded` back.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":109656,"byte_end":109676,"line_start":135,"line_end":135,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":1217},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":114121,"byte_end":114131,"line_start":298,"line_end":298,"column_start":15,"column_end":25},"name":"CanUpgrade","qualname":"::upgrade::sealed::CanUpgrade","value":"CanUpgrade","parent":null,"children":[{"krate":0,"index":1218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":114145,"byte_end":114155,"line_start":299,"line_end":299,"column_start":12,"column_end":22},"name":"on_upgrade","qualname":"::upgrade::sealed::CanUpgrade::on_upgrade","value":"pub fn on_upgrade(Self) -> OnUpgrade","parent":{"krate":0,"index":1217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2497},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16824198,"byte_end":16824206,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"PollItem","qualname":"::proto::h1::dispatch::Dispatch::PollItem","value":"type PollItem;","parent":{"krate":0,"index":2496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2498},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16824217,"byte_end":16824225,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"PollBody","qualname":"::proto::h1::dispatch::Dispatch::PollBody","value":"type PollBody;","parent":{"krate":0,"index":2496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2499},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16824236,"byte_end":16824245,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"name":"PollError","qualname":"::proto::h1::dispatch::Dispatch::PollError","value":"type PollError;","parent":{"krate":0,"index":2496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2500},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16824256,"byte_end":16824264,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"RecvItem","qualname":"::proto::h1::dispatch::Dispatch::RecvItem","value":"type RecvItem;","parent":{"krate":0,"index":2496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3002},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/mod.rs","byte_start":16747682,"byte_end":16747690,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"name":"Incoming","qualname":"::proto::h1::Http1Transaction::Incoming","value":"type Incoming;","parent":{"krate":0,"index":3001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3003},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/mod.rs","byte_start":16747701,"byte_end":16747709,"line_start":38,"line_end":38,"column_start":10,"column_end":18},"name":"Outgoing","qualname":"::proto::h1::Http1Transaction::Outgoing","value":"type Outgoing: Default;","parent":{"krate":0,"index":3001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17016590,"byte_end":17016598,"line_start":359,"line_end":359,"column_start":16,"column_end":24},"name":"H2Stream","qualname":"::proto::h2::server::H2Stream","value":"H2Stream {  }","parent":null,"children":[{"krate":0,"index":8739},{"krate":0,"index":8740}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3757},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","parent":null,"children":[{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4657},{"krate":0,"index":4887},{"krate":0,"index":5009},{"krate":0,"index":5215}],"decl_id":null,"docs":" HTTP Client","sig":null,"attributes":[{"value":"cfg(feature = \"client\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/cfg.rs","byte_start":3214,"byte_end":3227,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ HTTP Client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022701,"byte_end":17022716,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022717,"byte_end":17022720,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ There are two levels of APIs provided for construct HTTP clients:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022721,"byte_end":17022790,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022791,"byte_end":17022794,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The higher-level [`Client`](Client) type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022795,"byte_end":17022842,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/ - The lower-level [`conn`](conn) module.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022843,"byte_end":17022887,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022888,"byte_end":17022891,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022892,"byte_end":17022904,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022905,"byte_end":17022908,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`Client`](Client) is the main way to send HTTP requests to a server.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022909,"byte_end":17022986,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ The default `Client` provides these things on top of the lower-level API:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17022987,"byte_end":17023064,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023065,"byte_end":17023068,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - A default **connector**, able to resolve hostnames and connect to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023069,"byte_end":17023140,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/   destinations over plain-text TCP.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023141,"byte_end":17023180,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ - A **pool** of existing connections, allowing better performance when","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023181,"byte_end":17023255,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   making multiple requests to the same hostname.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023256,"byte_end":17023308,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ - Automatic setting of the `Host` header, based on the request `Uri`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023309,"byte_end":17023382,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ - Automatic request **retries** when a pooled connection is closed by the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023383,"byte_end":17023460,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/   server before any bytes have been written.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023461,"byte_end":17023509,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023510,"byte_end":17023513,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Many of these features can configured, by making use of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023514,"byte_end":17023573,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ [`Client::builder`](Client::builder).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023574,"byte_end":17023615,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023616,"byte_end":17023619,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023620,"byte_end":17023634,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023635,"byte_end":17023638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For a small example program simply fetching a URL, take a look at the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023639,"byte_end":17023712,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ [full client example](https://github.com/hyperium/hyper/blob/master/examples/client.rs).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023713,"byte_end":17023805,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023806,"byte_end":17023809,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023810,"byte_end":17023817,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"tcp\", feature = \"client\", any(feature = \"http1\", feature = \"http2\")))]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023818,"byte_end":17023915,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ # async fn fetch_httpbin() -> hyper::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023916,"byte_end":17023969,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ use hyper::{body::HttpBody as _, Client, Uri};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17023970,"byte_end":17024020,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024021,"byte_end":17024024,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024025,"byte_end":17024056,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024057,"byte_end":17024060,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Make a GET /ip to 'http://httpbin.org'","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024061,"byte_end":17024106,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ let res = client.get(Uri::from_static(\"http://httpbin.org/ip\")).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024107,"byte_end":17024182,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024183,"byte_end":17024186,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // And then, if the request gets a response...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024187,"byte_end":17024237,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/ println!(\"status: {}\", res.status());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024238,"byte_end":17024279,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024280,"byte_end":17024283,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Concatenate the body stream into a single buffer...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024284,"byte_end":17024342,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ let buf = hyper::body::to_bytes(res).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024343,"byte_end":17024391,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024392,"byte_end":17024395,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ println!(\"body: {:?}\", buf);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024396,"byte_end":17024428,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024429,"byte_end":17024441,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024442,"byte_end":17024449,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # fn main () {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024450,"byte_end":17024469,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024470,"byte_end":17024477,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3761},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"connect","qualname":"::client::connect","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3765},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":4024},{"krate":0,"index":4295},{"krate":0,"index":3768},{"krate":0,"index":4298},{"krate":0,"index":4302},{"krate":0,"index":3770},{"krate":0,"index":4304},{"krate":0,"index":4309},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":3773},{"krate":0,"index":3783},{"krate":0,"index":3785},{"krate":0,"index":3787},{"krate":0,"index":3789},{"krate":0,"index":4317},{"krate":0,"index":4321},{"krate":0,"index":3792},{"krate":0,"index":3796},{"krate":0,"index":3801},{"krate":0,"index":3804},{"krate":0,"index":3808}],"decl_id":null,"docs":" Connectors used by the `Client`.","sig":null,"attributes":[{"value":"/ Connectors used by the `Client`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17024839,"byte_end":17024875,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17024876,"byte_end":17024879,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17024880,"byte_end":17024905,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17024906,"byte_end":17024909,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - A default [`HttpConnector`][] that does DNS resolution and establishes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17024910,"byte_end":17024986,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/   connections over TCP.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17024987,"byte_end":17025014,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/ - Types to build custom connectors.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025015,"byte_end":17025054,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025055,"byte_end":17025058,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Connectors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025059,"byte_end":17025075,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025076,"byte_end":17025079,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A \"connector\" is a [`Service`][] that takes a [`Uri`][] destination, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025080,"byte_end":17025156,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ its `Response` is some type implementing [`AsyncRead`][], [`AsyncWrite`][],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025157,"byte_end":17025236,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and [`Connection`][].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025237,"byte_end":17025262,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025263,"byte_end":17025266,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Custom Connectors","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025267,"byte_end":17025291,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025292,"byte_end":17025295,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A simple connector that ignores the `Uri` destination and always returns","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025296,"byte_end":17025372,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ a TCP connection to the same address could be written like this:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025373,"byte_end":17025441,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025442,"byte_end":17025445,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025446,"byte_end":17025464,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ let connector = tower::service_fn(|_dst| async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025465,"byte_end":17025517,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/     tokio::net::TcpStream::connect(\"127.0.0.1:1337\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025518,"byte_end":17025574,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/ })","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025575,"byte_end":17025581,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025582,"byte_end":17025589,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025590,"byte_end":17025593,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Or, fully written out:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025594,"byte_end":17025620,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025621,"byte_end":17025624,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025625,"byte_end":17025632,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025633,"byte_end":17025666,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ # mod rt {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025667,"byte_end":17025681,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/ use std::{future::Future, net::SocketAddr, pin::Pin, task::{self, Poll}};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025682,"byte_end":17025759,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ use hyper::{service::Service, Uri};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025760,"byte_end":17025799,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025800,"byte_end":17025830,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025831,"byte_end":17025834,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025835,"byte_end":17025855,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/ struct LocalConnector;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025856,"byte_end":17025882,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025883,"byte_end":17025886,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ impl Service<Uri> for LocalConnector {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025887,"byte_end":17025929,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     type Response = TcpStream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025930,"byte_end":17025964,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17025965,"byte_end":17026001,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/     // We can't \"name\" an `async` generated future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026002,"byte_end":17026057,"line_start":41,"line_end":41,"column_start":1,"column_end":56}},{"value":"/     type Future = Pin<Box<","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026058,"byte_end":17026088,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/         dyn Future<Output = Result<Self::Response, Self::Error>> + Send","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026089,"byte_end":17026164,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/     >>;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026165,"byte_end":17026176,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026177,"byte_end":17026180,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, _: &mut task::Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026181,"byte_end":17026275,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/         // This connector is always ready, but others might not be.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026276,"byte_end":17026347,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026348,"byte_end":17026379,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026380,"byte_end":17026389,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026390,"byte_end":17026393,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, _: Uri) -> Self::Future {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026394,"byte_end":17026446,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/         Box::pin(TcpStream::connect(SocketAddr::from(([127, 0, 0, 1], 1337))))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026447,"byte_end":17026529,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026530,"byte_end":17026539,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026540,"byte_end":17026545,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026546,"byte_end":17026553,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026554,"byte_end":17026561,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026562,"byte_end":17026565,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It's worth noting that for `TcpStream`s, the [`HttpConnector`][] is a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026566,"byte_end":17026639,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ better starting place to extend from.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026640,"byte_end":17026681,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026682,"byte_end":17026685,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Using either of the above connector examples, it can be used with the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026686,"byte_end":17026759,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ `Client` like this:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026760,"byte_end":17026783,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026784,"byte_end":17026787,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026788,"byte_end":17026795,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026796,"byte_end":17026829,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ # fn rt () {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026830,"byte_end":17026846,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/ # let connector = hyper::client::HttpConnector::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026847,"byte_end":17026905,"line_start":67,"line_end":67,"column_start":1,"column_end":59}},{"value":"/ // let connector = ...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026906,"byte_end":17026932,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026933,"byte_end":17026936,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let client = hyper::Client::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026937,"byte_end":17026978,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/     .build::<_, hyper::Body>(connector);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17026979,"byte_end":17027023,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027024,"byte_end":17027031,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027032,"byte_end":17027039,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027040,"byte_end":17027043,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027044,"byte_end":17027047,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`HttpConnector`]: HttpConnector","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027048,"byte_end":17027084,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/ [`Service`]: crate::service::Service","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027085,"byte_end":17027125,"line_start":77,"line_end":77,"column_start":1,"column_end":41}},{"value":"/ [`Uri`]: ::http::Uri","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027126,"byte_end":17027150,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027151,"byte_end":17027190,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027191,"byte_end":17027232,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/ [`Connection`]: Connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027233,"byte_end":17027263,"line_start":81,"line_end":81,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":3868},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns","qualname":"::client::connect::dns","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3879},{"krate":0,"index":3882},{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3891},{"krate":0,"index":3894},{"krate":0,"index":3897},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3917},{"krate":0,"index":3920},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4256},{"krate":0,"index":4257},{"krate":0,"index":4260},{"krate":0,"index":4262},{"krate":0,"index":3929},{"krate":0,"index":3931},{"krate":0,"index":3933},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3940},{"krate":0,"index":4264},{"krate":0,"index":4267},{"krate":0,"index":3943},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3948},{"krate":0,"index":3956},{"krate":0,"index":3958},{"krate":0,"index":3962},{"krate":0,"index":3964},{"krate":0,"index":3966},{"krate":0,"index":3969},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":4019}],"decl_id":null,"docs":" DNS Resolution used by the `HttpConnector`.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/cfg.rs","byte_start":3214,"byte_end":3227,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ DNS Resolution used by the `HttpConnector`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036432,"byte_end":17036479,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036480,"byte_end":17036483,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036484,"byte_end":17036509,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036510,"byte_end":17036513,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - A [`GaiResolver`](GaiResolver) that is the default resolver for the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036514,"byte_end":17036587,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   `HttpConnector`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036588,"byte_end":17036610,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/ - The `Name` type used as an argument to custom resolvers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036611,"byte_end":17036673,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036674,"byte_end":17036677,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Resolvers are `Service`s","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036678,"byte_end":17036708,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036709,"byte_end":17036712,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A resolver is just a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036713,"byte_end":17036737,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ `Service<Name, Response = impl Iterator<Item = SocketAddr>>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036738,"byte_end":17036803,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036804,"byte_end":17036807,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A simple resolver that ignores the name and always returns a specific","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036808,"byte_end":17036881,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ address:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036882,"byte_end":17036894,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036895,"byte_end":17036898,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036899,"byte_end":17036917,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ use std::{convert::Infallible, iter, net::SocketAddr};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036918,"byte_end":17036976,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036977,"byte_end":17036980,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let resolver = tower::service_fn(|_name| async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17036981,"byte_end":17037033,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/     Ok::<_, Infallible>(iter::once(SocketAddr::from(([127, 0, 0, 1], 8080))))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037034,"byte_end":17037115,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037116,"byte_end":17037123,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037124,"byte_end":17037131,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4246},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037582,"byte_end":17037586,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Name","qualname":"::client::connect::dns::Name","value":"Name {  }","parent":null,"children":[{"krate":0,"index":4247}],"decl_id":null,"docs":" A domain name to resolve into IP addresses.\n","sig":null,"attributes":[{"value":"/ A domain name to resolve into IP addresses.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037485,"byte_end":17037532,"line_start":38,"line_end":38,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4260},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037705,"byte_end":17037716,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"GaiResolver","qualname":"::client::connect::dns::GaiResolver","value":"GaiResolver {  }","parent":null,"children":[{"krate":0,"index":4261}],"decl_id":null,"docs":" A resolver using blocking `getaddrinfo` calls in a threadpool.\n","sig":null,"attributes":[{"value":"/ A resolver using blocking `getaddrinfo` calls in a threadpool.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037610,"byte_end":17037676,"line_start":44,"line_end":44,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3929},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037809,"byte_end":17037817,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"GaiAddrs","qualname":"::client::connect::dns::GaiAddrs","value":"GaiAddrs {  }","parent":null,"children":[{"krate":0,"index":3930}],"decl_id":null,"docs":" An iterator of IP addresses returned from `getaddrinfo`.\n","sig":null,"attributes":[{"value":"/ An iterator of IP addresses returned from `getaddrinfo`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037737,"byte_end":17037797,"line_start":50,"line_end":50,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3931},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037916,"byte_end":17037925,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"GaiFuture","qualname":"::client::connect::dns::GaiFuture","value":"GaiFuture {  }","parent":null,"children":[{"krate":0,"index":3932}],"decl_id":null,"docs":" A future to resolve a name returned by `GaiResolver`.\n","sig":null,"attributes":[{"value":"/ A future to resolve a name returned by `GaiResolver`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037847,"byte_end":17037904,"line_start":55,"line_end":55,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038129,"byte_end":17038135,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Name>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" View the hostname as a string slice.\n","sig":null,"attributes":[{"value":"/ View the hostname as a string slice.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038077,"byte_end":17038117,"line_start":65,"line_end":65,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":4264},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038758,"byte_end":17038774,"line_start":94,"line_end":94,"column_start":12,"column_end":28},"name":"InvalidNameError","qualname":"::client::connect::dns::InvalidNameError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a given string was not a valid domain name.\n","sig":null,"attributes":[{"value":"/ Error indicating a given string was not a valid domain name.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038665,"byte_end":17038729,"line_start":92,"line_end":92,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3947},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039046,"byte_end":17039049,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<GaiResolver>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `GaiResolver`.\n","sig":null,"attributes":[{"value":"/ Construct a new `GaiResolver`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039000,"byte_end":17039034,"line_start":105,"line_end":105,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4006},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045276,"byte_end":17045283,"line_start":326,"line_end":326,"column_start":15,"column_end":22},"name":"Resolve","qualname":"::client::connect::dns::sealed::Resolve","value":"Resolve","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4007},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045299,"byte_end":17045304,"line_start":327,"line_end":327,"column_start":14,"column_end":19},"name":"Addrs","qualname":"::client::connect::dns::sealed::Resolve::Addrs","value":"type Addrs: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":4006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4008},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045348,"byte_end":17045353,"line_start":328,"line_end":328,"column_start":14,"column_end":19},"name":"Error","qualname":"::client::connect::dns::sealed::Resolve::Error","value":"type Error: Into<Box<dyn std::error::Error + Send + Sync>>;","parent":{"krate":0,"index":4006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4009},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045416,"byte_end":17045422,"line_start":329,"line_end":329,"column_start":14,"column_end":20},"name":"Future","qualname":"::client::connect::dns::sealed::Resolve::Future","value":"type Future: Future<Output = Result<Self::Addrs, Self::Error>>;","parent":{"krate":0,"index":4006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4010},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045487,"byte_end":17045497,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"::client::connect::dns::sealed::Resolve::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context)\n-> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":4006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4011},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045582,"byte_end":17045589,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"resolve","qualname":"::client::connect::dns::sealed::Resolve::resolve","value":"pub fn resolve(&mut Self, Name) -> Self::Future","parent":{"krate":0,"index":4006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4269},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049632,"byte_end":17049645,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"HttpConnector","qualname":"::client::connect::http::HttpConnector","value":"HttpConnector {  }","parent":null,"children":[{"krate":0,"index":4271},{"krate":0,"index":4272}],"decl_id":null,"docs":" A connector for the `http` scheme.","sig":null,"attributes":[{"value":"/ A connector for the `http` scheme.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049284,"byte_end":17049322,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049323,"byte_end":17049326,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Performs DNS resolution in a thread pool, and then connects over TCP.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049327,"byte_end":17049400,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049401,"byte_end":17049404,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049405,"byte_end":17049415,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049416,"byte_end":17049419,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Sets the [`HttpInfo`](HttpInfo) value on responses, which includes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049420,"byte_end":17049490,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ transport information such as the remote socket address used.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049491,"byte_end":17049556,"line_start":30,"line_end":30,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4276},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050524,"byte_end":17050532,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"HttpInfo","qualname":"::client::connect::http::HttpInfo","value":"HttpInfo {  }","parent":null,"children":[{"krate":0,"index":4277}],"decl_id":null,"docs":" Extra information about the transport when an HttpConnector is used.","sig":null,"attributes":[{"value":"/ Extra information about the transport when an HttpConnector is used.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049710,"byte_end":17049782,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049783,"byte_end":17049786,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049787,"byte_end":17049800,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049801,"byte_end":17049804,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049805,"byte_end":17049812,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # async fn doc() -> hyper::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049813,"byte_end":17049856,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/ use hyper::Uri;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049857,"byte_end":17049876,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ use hyper::client::{Client, connect::HttpInfo};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049877,"byte_end":17049928,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049929,"byte_end":17049932,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049933,"byte_end":17049964,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ let uri = Uri::from_static(\"http://example.com\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17049965,"byte_end":17050018,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050019,"byte_end":17050022,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let res = client.get(uri).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050023,"byte_end":17050060,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ res","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050061,"byte_end":17050068,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/     .extensions()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050069,"byte_end":17050090,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     .get::<HttpInfo>()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050091,"byte_end":17050117,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     .map(|info| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050118,"byte_end":17050139,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/         println!(\"remote addr = {}\", info.remote_addr());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050140,"byte_end":17050201,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050202,"byte_end":17050213,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050214,"byte_end":17050226,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050227,"byte_end":17050234,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050235,"byte_end":17050242,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050243,"byte_end":17050246,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050247,"byte_end":17050257,"line_start":61,"line_end":61,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050258,"byte_end":17050261,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ If a different connector is used besides [`HttpConnector`](HttpConnector),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050262,"byte_end":17050340,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ this value will not exist in the extensions. Consult that specific","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050341,"byte_end":17050411,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ connector to see what \"extra\" information it might provide to responses.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050412,"byte_end":17050488,"line_start":65,"line_end":65,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051062,"byte_end":17051065,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<HttpConnector>::new","value":"pub fn new() -> HttpConnector","parent":null,"children":[],"decl_id":null,"docs":" Construct a new HttpConnector.\n","sig":null,"attributes":[{"value":"/ Construct a new HttpConnector.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051016,"byte_end":17051050,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051728,"byte_end":17051745,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"new_with_resolver","qualname":"<HttpConnector<R>>::new_with_resolver","value":"pub fn new_with_resolver(R) -> HttpConnector<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new HttpConnector.","sig":null,"attributes":[{"value":"/ Construct a new HttpConnector.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051570,"byte_end":17051604,"line_start":107,"line_end":107,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051609,"byte_end":17051612,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Takes a [`Resolver`](crate::client::connect::dns#resolvers-are-services) to handle DNS lookups.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051617,"byte_end":17051716,"line_start":109,"line_end":109,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052445,"byte_end":17052457,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"enforce_http","qualname":"<HttpConnector<R>>::enforce_http","value":"pub fn enforce_http(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Option to enforce all `Uri`s have the `http` scheme.","sig":null,"attributes":[{"value":"/ Option to enforce all `Uri`s have the `http` scheme.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052327,"byte_end":17052383,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052388,"byte_end":17052391,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Enabled by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052396,"byte_end":17052419,"line_start":130,"line_end":130,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052424,"byte_end":17052433,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052747,"byte_end":17052760,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<HttpConnector<R>>::set_keepalive","value":"pub fn set_keepalive(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_KEEPALIVE` set with the supplied duration.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052555,"byte_end":17052631,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052636,"byte_end":17052639,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If `None`, the option will not be set.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052644,"byte_end":17052686,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052691,"byte_end":17052694,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052699,"byte_end":17052721,"line_start":140,"line_end":140,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052726,"byte_end":17052735,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4129},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053001,"byte_end":17053012,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<HttpConnector<R>>::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets have `SO_NODELAY` set to the supplied value `nodelay`.","sig":null,"attributes":[{"value":"/ Set that all sockets have `SO_NODELAY` set to the supplied value `nodelay`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052860,"byte_end":17052939,"line_start":146,"line_end":146,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052944,"byte_end":17052947,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052952,"byte_end":17052975,"line_start":148,"line_end":148,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17052980,"byte_end":17052989,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053180,"byte_end":17053200,"line_start":156,"line_end":156,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<HttpConnector<R>>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&mut Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the SO_SNDBUF option on the socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of the SO_SNDBUF option on the socket.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053097,"byte_end":17053154,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053159,"byte_end":17053168,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053380,"byte_end":17053400,"line_start":162,"line_end":162,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<HttpConnector<R>>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&mut Self, Option<usize>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the SO_RCVBUF option on the socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of the SO_RCVBUF option on the socket.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053297,"byte_end":17053354,"line_start":160,"line_end":160,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053359,"byte_end":17053368,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053695,"byte_end":17053712,"line_start":172,"line_end":172,"column_start":12,"column_end":29},"name":"set_local_address","qualname":"<HttpConnector<R>>::set_local_address","value":"pub fn set_local_address(&mut Self, Option<IpAddr>)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets are bound to the configured address before connection.","sig":null,"attributes":[{"value":"/ Set that all sockets are bound to the configured address before connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053497,"byte_end":17053576,"line_start":166,"line_end":166,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053581,"byte_end":17053584,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `None`, the sockets will not be bound.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053589,"byte_end":17053634,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053639,"byte_end":17053642,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053647,"byte_end":17053669,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17053674,"byte_end":17053683,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054214,"byte_end":17054233,"line_start":188,"line_end":188,"column_start":12,"column_end":31},"name":"set_local_addresses","qualname":"<HttpConnector<R>>::set_local_addresses","value":"pub fn set_local_addresses(&mut Self, Ipv4Addr, Ipv6Addr)","parent":null,"children":[],"decl_id":null,"docs":" Set that all sockets are bound to the configured IPv4 or IPv6 address (depending on host's\n preferences) before connection.\n","sig":null,"attributes":[{"value":"/ Set that all sockets are bound to the configured IPv4 or IPv6 address (depending on host's","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054054,"byte_end":17054148,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"/ preferences) before connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054153,"byte_end":17054188,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054193,"byte_end":17054202,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054646,"byte_end":17054665,"line_start":202,"line_end":202,"column_start":12,"column_end":31},"name":"set_connect_timeout","qualname":"<HttpConnector<R>>::set_connect_timeout","value":"pub fn set_connect_timeout(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set the connect timeout.","sig":null,"attributes":[{"value":"/ Set the connect timeout.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054438,"byte_end":17054466,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054471,"byte_end":17054474,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If a domain resolves to multiple IP addresses, the timeout will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054479,"byte_end":17054549,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ evenly divided across them.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054554,"byte_end":17054585,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054590,"byte_end":17054593,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Default is `None`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054598,"byte_end":17054620,"line_start":200,"line_end":200,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054625,"byte_end":17054634,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055299,"byte_end":17055325,"line_start":219,"line_end":219,"column_start":12,"column_end":38},"name":"set_happy_eyeballs_timeout","qualname":"<HttpConnector<R>>::set_happy_eyeballs_timeout","value":"pub fn set_happy_eyeballs_timeout(&mut Self, Option<Duration>)","parent":null,"children":[],"decl_id":null,"docs":" Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555] algorithm.","sig":null,"attributes":[{"value":"/ Set timeout for [RFC 6555 (Happy Eyeballs)][RFC 6555] algorithm.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054762,"byte_end":17054830,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054835,"byte_end":17054838,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If hostname resolves to both IPv4 and IPv6 addresses and connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054843,"byte_end":17054914,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ cannot be established using preferred address family before timeout","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054919,"byte_end":17054990,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ elapses, then connector will in parallel attempt connection using other","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17054995,"byte_end":17055070,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ address family.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055075,"byte_end":17055094,"line_start":211,"line_end":211,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055099,"byte_end":17055102,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ If `None`, parallel connection attempts are disabled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055107,"byte_end":17055164,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055169,"byte_end":17055172,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Default is 300 milliseconds.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055177,"byte_end":17055209,"line_start":215,"line_end":215,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055214,"byte_end":17055217,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [RFC 6555]: https://tools.ietf.org/html/rfc6555","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055222,"byte_end":17055273,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055278,"byte_end":17055287,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4136},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055577,"byte_end":17055594,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"set_reuse_address","qualname":"<HttpConnector<R>>::set_reuse_address","value":"pub fn set_reuse_address(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set that all socket have `SO_REUSEADDR` set to the supplied value `reuse_address`.","sig":null,"attributes":[{"value":"/ Set that all socket have `SO_REUSEADDR` set to the supplied value `reuse_address`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055429,"byte_end":17055515,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055520,"byte_end":17055523,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055528,"byte_end":17055551,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17055556,"byte_end":17055565,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17059732,"byte_end":17059743,"line_start":373,"line_end":373,"column_start":12,"column_end":23},"name":"remote_addr","qualname":"<HttpInfo>::remote_addr","value":"pub fn remote_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the remote address of the transport used.\n","sig":null,"attributes":[{"value":"/ Get the remote address of the transport used.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17059671,"byte_end":17059720,"line_start":372,"line_end":372,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":8124},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17060212,"byte_end":17060226,"line_start":386,"line_end":386,"column_start":16,"column_end":30},"name":"HttpConnecting","qualname":"::client::connect::http::HttpConnecting","value":"HttpConnecting {  }","parent":null,"children":[{"krate":0,"index":8126},{"krate":0,"index":8127}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4170},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17060730,"byte_end":17060742,"line_start":405,"line_end":405,"column_start":12,"column_end":24},"name":"ConnectError","qualname":"::client::connect::http::ConnectError","value":"ConnectError {  }","parent":null,"children":[{"krate":0,"index":4171},{"krate":0,"index":4172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3768},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027590,"byte_end":17027600,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"Connection","qualname":"::client::connect::Connection","value":"Connection","parent":null,"children":[{"krate":0,"index":3769}],"decl_id":null,"docs":" Describes a type returned by a connector.\n","sig":null,"attributes":[{"value":"/ Describes a type returned by a connector.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027534,"byte_end":17027579,"line_start":101,"line_end":101,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027661,"byte_end":17027670,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"connected","qualname":"::client::connect::Connection::connected","value":"pub fn connected(&Self) -> Connected","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":" Return metadata describing the connection.\n","sig":null,"attributes":[{"value":"/ Return metadata describing the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027607,"byte_end":17027653,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":4298},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027896,"byte_end":17027905,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"Connected","qualname":"::client::connect::Connected","value":"Connected {  }","parent":null,"children":[{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301}],"decl_id":null,"docs":" Extra information about the connected transport.","sig":null,"attributes":[{"value":"/ Extra information about the connected transport.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027695,"byte_end":17027747,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027748,"byte_end":17027751,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This can be used to inform recipients about things like if ALPN","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027752,"byte_end":17027819,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/ was used, or if connected to an HTTP proxy.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027820,"byte_end":17027867,"line_start":110,"line_end":110,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028225,"byte_end":17028228,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Connected>::new","value":"pub fn new() -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Create new `Connected` type with empty metadata.\n","sig":null,"attributes":[{"value":"/ Create new `Connected` type with empty metadata.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028161,"byte_end":17028213,"line_start":127,"line_end":127,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028856,"byte_end":17028861,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"proxy","qualname":"<Connected>::proxy","value":"pub fn proxy(Self, bool) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set whether the connected transport is to an HTTP proxy.","sig":null,"attributes":[{"value":"/ Set whether the connected transport is to an HTTP proxy.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028373,"byte_end":17028433,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028438,"byte_end":17028441,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This setting will affect if HTTP/1 requests written on the transport","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028446,"byte_end":17028518,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ will have the request-target in absolute-form or origin-form:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028523,"byte_end":17028588,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028593,"byte_end":17028596,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ - When `proxy(false)`:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028601,"byte_end":17028627,"line_start":141,"line_end":141,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028632,"byte_end":17028635,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```http","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028640,"byte_end":17028651,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/ GET /guide HTTP/1.1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028656,"byte_end":17028679,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028684,"byte_end":17028691,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028696,"byte_end":17028699,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - When `proxy(true)`:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028704,"byte_end":17028729,"line_start":147,"line_end":147,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028734,"byte_end":17028737,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```http","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028742,"byte_end":17028753,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/ GET http://hyper.rs/guide HTTP/1.1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028758,"byte_end":17028796,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028801,"byte_end":17028808,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028813,"byte_end":17028816,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028821,"byte_end":17028844,"line_start":153,"line_end":153,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3776},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029041,"byte_end":17029051,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"is_proxied","qualname":"<Connected>::is_proxied","value":"pub fn is_proxied(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the connected transport is to an HTTP proxy.\n","sig":null,"attributes":[{"value":"/ Determines if the connected transport is to an HTTP proxy.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028967,"byte_end":17029029,"line_start":159,"line_end":159,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3777},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029201,"byte_end":17029206,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"extra","qualname":"<Connected>::extra","value":"pub fn extra<T: Clone + Send + Sync + 'static>(Self, T) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set extra connection information to be set in the extensions of every `Response`.\n","sig":null,"attributes":[{"value":"/ Set extra connection information to be set in the extensions of every `Response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029104,"byte_end":17029189,"line_start":164,"line_end":164,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029594,"byte_end":17029604,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"get_extras","qualname":"<Connected>::get_extras","value":"pub fn get_extras(&Self, &mut Extensions)","parent":null,"children":[],"decl_id":null,"docs":" Copies the extra connection information into an `Extensions` map.\n","sig":null,"attributes":[{"value":"/ Copies the extra connection information into an `Extensions` map.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029513,"byte_end":17029582,"line_start":174,"line_end":174,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029830,"byte_end":17029843,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"negotiated_h2","qualname":"<Connected>::negotiated_h2","value":"pub fn negotiated_h2(Self) -> Connected","parent":null,"children":[],"decl_id":null,"docs":" Set that the connected transport negotiated HTTP/2 as its next protocol.\n","sig":null,"attributes":[{"value":"/ Set that the connected transport negotiated HTTP/2 as its next protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029742,"byte_end":17029818,"line_start":181,"line_end":181,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030016,"byte_end":17030032,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"is_negotiated_h2","qualname":"<Connected>::is_negotiated_h2","value":"pub fn is_negotiated_h2(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the connected transport negotiated HTTP/2 as its next protocol.\n","sig":null,"attributes":[{"value":"/ Determines if the connected transport negotiated HTTP/2 as its next protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17029923,"byte_end":17030004,"line_start":187,"line_end":187,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":3832},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032761,"byte_end":17032768,"line_start":292,"line_end":292,"column_start":15,"column_end":22},"name":"Connect","qualname":"::client::connect::sealed::Connect","value":"Connect: Sealed + Sized","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834}],"decl_id":null,"docs":" Connect to a destination, returning an IO transport.","sig":null,"attributes":[{"value":"/ Connect to a destination, returning an IO transport.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032158,"byte_end":17032214,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032219,"byte_end":17032222,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ A connector receives a [`Uri`](::http::Uri) and returns a `Future` of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032227,"byte_end":17032304,"line_start":282,"line_end":282,"column_start":5,"column_end":82}},{"value":"/ ready connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032309,"byte_end":17032330,"line_start":283,"line_end":283,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032335,"byte_end":17032338,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Trait Alias","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032343,"byte_end":17032360,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032365,"byte_end":17032368,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This is really just an *alias* for the `tower::Service` trait, with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032373,"byte_end":17032444,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ additional bounds set for convenience *inside* hyper. You don't actually","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032449,"byte_end":17032525,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/ implement this trait, but `tower::Service<Uri>` instead.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032530,"byte_end":17032590,"line_start":289,"line_end":289,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":3833},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032823,"byte_end":17032827,"line_start":294,"line_end":294,"column_start":14,"column_end":18},"name":"_Svc","qualname":"::client::connect::sealed::Connect::_Svc","value":"type _Svc: ConnectSvc;","parent":{"krate":0,"index":3832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032875,"byte_end":17032882,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"connect","qualname":"::client::connect::sealed::Connect::connect","value":"pub fn connect(Self, Internal, Uri) -> <Self::_Svc as ConnectSvc>::Future","parent":{"krate":0,"index":3832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3835},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032984,"byte_end":17032994,"line_start":299,"line_end":299,"column_start":15,"column_end":25},"name":"ConnectSvc","qualname":"::client::connect::sealed::ConnectSvc","value":"ConnectSvc","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3836},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033010,"byte_end":17033020,"line_start":300,"line_end":300,"column_start":14,"column_end":24},"name":"Connection","qualname":"::client::connect::sealed::ConnectSvc::Connection","value":"type Connection: AsyncRead + AsyncWrite + Connection + Unpin + Send + 'static;","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3837},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033097,"byte_end":17033102,"line_start":301,"line_end":301,"column_start":14,"column_end":19},"name":"Error","qualname":"::client::connect::sealed::ConnectSvc::Error","value":"type Error: Into<Box<dyn StdError + Send + Sync>>;","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3838},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033156,"byte_end":17033162,"line_start":302,"line_end":302,"column_start":14,"column_end":20},"name":"Future","qualname":"::client::connect::sealed::ConnectSvc::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>> + Unpin + Send + 'static;","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033257,"byte_end":17033264,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"connect","qualname":"::client::connect::sealed::ConnectSvc::connect","value":"pub fn connect(Self, Internal, Uri) -> Self::Future","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3855},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17034599,"byte_end":17034605,"line_start":346,"line_end":346,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::client::connect::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3856},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17034668,"byte_end":17034676,"line_start":348,"line_end":348,"column_start":16,"column_end":24},"name":"Internal","qualname":"::client::connect::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17034613,"byte_end":17034652,"line_start":347,"line_end":347,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4482},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17081959,"byte_end":17081965,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Client","qualname":"::client::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488}],"decl_id":null,"docs":" A Client to make outgoing HTTP requests.","sig":null,"attributes":[{"value":"/ A Client to make outgoing HTTP requests.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17081688,"byte_end":17081732,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17081733,"byte_end":17081736,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `Client` is cheap to clone and cloning is the recommended way to share a `Client`. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17081737,"byte_end":17081827,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/ underlying connection pool will be reused.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17081828,"byte_end":17081874,"line_start":27,"line_end":27,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4489},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082385,"byte_end":17082399,"line_start":47,"line_end":47,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::client::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4490}],"decl_id":null,"docs":" A `Future` that will resolve to an HTTP Response.","sig":null,"attributes":[{"value":"/ A `Future` that will resolve to an HTTP Response.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082204,"byte_end":17082257,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082258,"byte_end":17082261,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This is returned by `Client::request` (and `Client::get`).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082262,"byte_end":17082324,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082325,"byte_end":17082373,"line_start":46,"line_end":46,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082915,"byte_end":17082918,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Client<HttpConnector, Body>>::new","value":"pub fn new() -> Client<HttpConnector, Body>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Client with the default [config](Builder).","sig":null,"attributes":[{"value":"/ Create a new Client with the default [config](Builder).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082589,"byte_end":17082648,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082653,"byte_end":17082656,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082661,"byte_end":17082671,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082676,"byte_end":17082679,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The default connector does **not** handle TLS. Speaking to `https`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082684,"byte_end":17082754,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ destinations will require [configuring a connector that implements","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082759,"byte_end":17082829,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ TLS](https://hyper.rs/guides/client/configuration).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082834,"byte_end":17082889,"line_start":61,"line_end":61,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082894,"byte_end":17082903,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4496},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083709,"byte_end":17083716,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"builder","qualname":"<Client<(), Body>>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a builder to configure a new `Client`.","sig":null,"attributes":[{"value":"/ Create a builder to configure a new `Client`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083183,"byte_end":17083232,"line_start":76,"line_end":76,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083237,"byte_end":17083240,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083245,"byte_end":17083258,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083263,"byte_end":17083266,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083271,"byte_end":17083278,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083283,"byte_end":17083317,"line_start":81,"line_end":81,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083322,"byte_end":17083339,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083344,"byte_end":17083372,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use hyper::Client;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083377,"byte_end":17083399,"line_start":84,"line_end":84,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083404,"byte_end":17083407,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let client = Client::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083412,"byte_end":17083446,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/     .pool_idle_timeout(Duration::from_secs(30))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083451,"byte_end":17083502,"line_start":87,"line_end":87,"column_start":5,"column_end":56}},{"value":"/     .http2_only(true)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083507,"byte_end":17083532,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/     .build_http();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083537,"byte_end":17083559,"line_start":89,"line_end":89,"column_start":5,"column_end":27}},{"value":"/ # let infer: Client<_, hyper::Body> = client;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083564,"byte_end":17083613,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/ # drop(infer);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083618,"byte_end":17083636,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083641,"byte_end":17083648,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083653,"byte_end":17083671,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083676,"byte_end":17083683,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083688,"byte_end":17083697,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084556,"byte_end":17084559,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"get","qualname":"<Client<C, B>>::get","value":"pub fn get(&Self, Uri) -> ResponseFuture where B: Default","parent":null,"children":[],"decl_id":null,"docs":" Send a `GET` request to the supplied `Uri`.","sig":null,"attributes":[{"value":"/ Send a `GET` request to the supplied `Uri`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083958,"byte_end":17084005,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084010,"byte_end":17084013,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084018,"byte_end":17084028,"line_start":110,"line_end":110,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084033,"byte_end":17084036,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This requires that the `HttpBody` type have a `Default` implementation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084041,"byte_end":17084116,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ It *should* return an \"empty\" version of itself, such that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084121,"byte_end":17084183,"line_start":113,"line_end":113,"column_start":5,"column_end":67}},{"value":"/ `HttpBody::is_end_stream` is `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084188,"byte_end":17084228,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084233,"byte_end":17084236,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084241,"byte_end":17084254,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084259,"byte_end":17084262,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084267,"byte_end":17084274,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084279,"byte_end":17084313,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084318,"byte_end":17084335,"line_start":120,"line_end":120,"column_start":5,"column_end":22}},{"value":"/ use hyper::{Client, Uri};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084340,"byte_end":17084369,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084374,"byte_end":17084377,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084382,"byte_end":17084413,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084418,"byte_end":17084421,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let future = client.get(Uri::from_static(\"http://httpbin.org/ip\"));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084426,"byte_end":17084497,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084502,"byte_end":17084509,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084514,"byte_end":17084532,"line_start":127,"line_end":127,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084537,"byte_end":17084544,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085480,"byte_end":17085487,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"request","qualname":"<Client<C, B>>::request","value":"pub fn request(&Self, Request<B>) -> ResponseFuture","parent":null,"children":[],"decl_id":null,"docs":" Send a constructed `Request` using this `Client`.","sig":null,"attributes":[{"value":"/ Send a constructed `Request` using this `Client`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084912,"byte_end":17084965,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084970,"byte_end":17084973,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084978,"byte_end":17084991,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17084996,"byte_end":17084999,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085004,"byte_end":17085011,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085016,"byte_end":17085050,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ # fn run () {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085055,"byte_end":17085072,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/ use hyper::{Body, Method, Client, Request};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085077,"byte_end":17085124,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085129,"byte_end":17085132,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let client = Client::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085137,"byte_end":17085168,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085173,"byte_end":17085176,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let req = Request::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085181,"byte_end":17085213,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/     .method(Method::POST)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085218,"byte_end":17085247,"line_start":155,"line_end":155,"column_start":5,"column_end":34}},{"value":"/     .uri(\"http://httpbin.org/post\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085252,"byte_end":17085291,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/     .body(Body::from(\"Hallo!\"))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085296,"byte_end":17085331,"line_start":157,"line_end":157,"column_start":5,"column_end":40}},{"value":"/     .expect(\"request builder\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085336,"byte_end":17085371,"line_start":158,"line_end":158,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085376,"byte_end":17085379,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let future = client.request(req);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085384,"byte_end":17085421,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085426,"byte_end":17085433,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085438,"byte_end":17085456,"line_start":162,"line_end":162,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17085461,"byte_end":17085468,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5301},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110967,"byte_end":17110974,"line_start":894,"line_end":894,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::client::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304}],"decl_id":null,"docs":" A builder to configure a new [`Client`](Client).","sig":null,"attributes":[{"value":"/ A builder to configure a new [`Client`](Client).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110434,"byte_end":17110486,"line_start":873,"line_end":873,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110487,"byte_end":17110490,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110491,"byte_end":17110504,"line_start":875,"line_end":875,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110505,"byte_end":17110508,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110509,"byte_end":17110516,"line_start":877,"line_end":877,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature  = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110517,"byte_end":17110551,"line_start":878,"line_end":878,"column_start":1,"column_end":35}},{"value":"/ # fn run () {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110552,"byte_end":17110569,"line_start":879,"line_end":879,"column_start":1,"column_end":18}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110570,"byte_end":17110598,"line_start":880,"line_end":880,"column_start":1,"column_end":29}},{"value":"/ use hyper::Client;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110599,"byte_end":17110621,"line_start":881,"line_end":881,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110622,"byte_end":17110625,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ let client = Client::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110626,"byte_end":17110660,"line_start":883,"line_end":883,"column_start":1,"column_end":35}},{"value":"/     .pool_idle_timeout(Duration::from_secs(30))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110661,"byte_end":17110712,"line_start":884,"line_end":884,"column_start":1,"column_end":52}},{"value":"/     .http2_only(true)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110713,"byte_end":17110738,"line_start":885,"line_end":885,"column_start":1,"column_end":26}},{"value":"/     .build_http();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110739,"byte_end":17110761,"line_start":886,"line_end":886,"column_start":1,"column_end":23}},{"value":"/ # let infer: Client<_, hyper::Body> = client;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110762,"byte_end":17110811,"line_start":887,"line_end":887,"column_start":1,"column_end":50}},{"value":"/ # drop(infer);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110812,"byte_end":17110830,"line_start":888,"line_end":888,"column_start":1,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110831,"byte_end":17110838,"line_start":889,"line_end":889,"column_start":1,"column_end":8}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110839,"byte_end":17110857,"line_start":890,"line_end":890,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17110858,"byte_end":17110865,"line_start":891,"line_end":891,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4622},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17111706,"byte_end":17111716,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"keep_alive","qualname":"<Builder>::keep_alive","value":"pub fn keep_alive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note =\n             \"name is confusing, to disable the connection pool, call pool_max_idle_per_host(0)\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17111575,"byte_end":17111694,"line_start":919,"line_end":921,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":4623},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112148,"byte_end":17112166,"line_start":937,"line_end":937,"column_start":12,"column_end":30},"name":"keep_alive_timeout","qualname":"<Builder>::keep_alive_timeout","value":"pub fn keep_alive_timeout<D>(&mut Self, D) -> &mut Self where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `pool_idle_timeout`\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112082,"byte_end":17112136,"line_start":936,"line_end":936,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112461,"byte_end":17112478,"line_start":949,"line_end":949,"column_start":12,"column_end":29},"name":"pool_idle_timeout","qualname":"<Builder>::pool_idle_timeout","value":"pub fn pool_idle_timeout<D>(&mut Self, D) -> &mut Self where\nD: Into<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Set an optional timeout for idle sockets being kept-alive.","sig":null,"attributes":[{"value":"/ Set an optional timeout for idle sockets being kept-alive.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112300,"byte_end":17112362,"line_start":944,"line_end":944,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112367,"byte_end":17112370,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ Pass `None` to disable timeout.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112375,"byte_end":17112410,"line_start":946,"line_end":946,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112415,"byte_end":17112418,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Default is 90 seconds.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112423,"byte_end":17112449,"line_start":948,"line_end":948,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4627},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112731,"byte_end":17112748,"line_start":959,"line_end":959,"column_start":12,"column_end":29},"name":"max_idle_per_host","qualname":"<Builder>::max_idle_per_host","value":"pub fn max_idle_per_host(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `pool_max_idle_per_host`\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112660,"byte_end":17112719,"line_start":958,"line_end":958,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4628},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113001,"byte_end":17113023,"line_start":967,"line_end":967,"column_start":12,"column_end":34},"name":"pool_max_idle_per_host","qualname":"<Builder>::pool_max_idle_per_host","value":"pub fn pool_max_idle_per_host(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum idle connection per host allowed in the pool.","sig":null,"attributes":[{"value":"/ Sets the maximum idle connection per host allowed in the pool.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112871,"byte_end":17112937,"line_start":964,"line_end":964,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112942,"byte_end":17112945,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Default is `usize::MAX` (no limit).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17112950,"byte_end":17112989,"line_start":966,"line_end":966,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113378,"byte_end":17113403,"line_start":979,"line_end":979,"column_start":12,"column_end":37},"name":"http1_read_buf_exact_size","qualname":"<Builder>::http1_read_buf_exact_size","value":"pub fn http1_read_buf_exact_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the exact size of the read buffer to *always* use.","sig":null,"attributes":[{"value":"/ Sets the exact size of the read buffer to *always* use.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113169,"byte_end":17113228,"line_start":974,"line_end":974,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113233,"byte_end":17113236,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_max_buf_size` option.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113241,"byte_end":17113314,"line_start":976,"line_end":976,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113319,"byte_end":17113322,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Default is an adaptive read buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113327,"byte_end":17113366,"line_start":978,"line_end":978,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113943,"byte_end":17113961,"line_start":995,"line_end":995,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder>::http1_max_buf_size","value":"pub fn http1_max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113528,"byte_end":17113579,"line_start":984,"line_end":984,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113584,"byte_end":17113587,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113592,"byte_end":17113614,"line_start":986,"line_end":986,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113619,"byte_end":17113622,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_read_exact_buf_size` option.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113627,"byte_end":17113707,"line_start":988,"line_end":988,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113712,"byte_end":17113715,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113720,"byte_end":17113732,"line_start":990,"line_end":990,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113737,"byte_end":17113740,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113745,"byte_end":17113848,"line_start":992,"line_end":992,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17113853,"byte_end":17113878,"line_start":993,"line_end":993,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4631},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115063,"byte_end":17115112,"line_start":1019,"line_end":1019,"column_start":12,"column_end":61},"name":"http1_allow_spaces_after_header_name_in_responses","qualname":"<Builder>::http1_allow_spaces_after_header_name_in_responses","value":"pub fn http1_allow_spaces_after_header_name_in_responses(&mut Self, bool)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept spaces between header names\n and the colon that follow them in responses.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept spaces between header names","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114075,"byte_end":17114149,"line_start":1000,"line_end":1000,"column_start":5,"column_end":79}},{"value":"/ and the colon that follow them in responses.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114154,"byte_end":17114202,"line_start":1001,"line_end":1001,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114207,"byte_end":17114210,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114215,"byte_end":17114291,"line_start":1003,"line_end":1003,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114296,"byte_end":17114316,"line_start":1004,"line_end":1004,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114321,"byte_end":17114324,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ > No whitespace is allowed between the header field-name and colon. In","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114329,"byte_end":17114403,"line_start":1006,"line_end":1006,"column_start":5,"column_end":79}},{"value":"/ > the past, differences in the handling of such whitespace have led to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114408,"byte_end":17114482,"line_start":1007,"line_end":1007,"column_start":5,"column_end":79}},{"value":"/ > security vulnerabilities in request routing and response handling. A","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114487,"byte_end":17114561,"line_start":1008,"line_end":1008,"column_start":5,"column_end":79}},{"value":"/ > server MUST reject any received request message that contains","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114566,"byte_end":17114633,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ > whitespace between a header field-name and colon with a response code","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114638,"byte_end":17114713,"line_start":1010,"line_end":1010,"column_start":5,"column_end":80}},{"value":"/ > of 400 (Bad Request). A proxy MUST remove any such whitespace from a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114718,"byte_end":17114792,"line_start":1011,"line_end":1011,"column_start":5,"column_end":79}},{"value":"/ > response message before forwarding the message downstream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114797,"byte_end":17114861,"line_start":1012,"line_end":1012,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114866,"byte_end":17114869,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114874,"byte_end":17114924,"line_start":1014,"line_end":1014,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114929,"byte_end":17114932,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114937,"byte_end":17114958,"line_start":1016,"line_end":1016,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114963,"byte_end":17114966,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17114971,"byte_end":17115051,"line_start":1018,"line_end":1018,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4632},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115867,"byte_end":17115879,"line_start":1037,"line_end":1037,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder>::http1_writev","value":"pub fn http1_writev(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115269,"byte_end":17115338,"line_start":1025,"line_end":1025,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115343,"byte_end":17115386,"line_start":1026,"line_end":1026,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115391,"byte_end":17115394,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115399,"byte_end":17115469,"line_start":1028,"line_end":1028,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115474,"byte_end":17115539,"line_start":1029,"line_end":1029,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115544,"byte_end":17115611,"line_start":1030,"line_end":1030,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115616,"byte_end":17115619,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115624,"byte_end":17115688,"line_start":1032,"line_end":1032,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115693,"byte_end":17115757,"line_start":1033,"line_end":1033,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115762,"byte_end":17115765,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115770,"byte_end":17115835,"line_start":1035,"line_end":1035,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115840,"byte_end":17115855,"line_start":1036,"line_end":1036,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116207,"byte_end":17116231,"line_start":1048,"line_end":1048,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17115997,"byte_end":17116072,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116077,"byte_end":17116098,"line_start":1043,"line_end":1043,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116103,"byte_end":17116106,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116111,"byte_end":17116161,"line_start":1045,"line_end":1045,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116166,"byte_end":17116169,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116174,"byte_end":17116195,"line_start":1047,"line_end":1047,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4634},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116955,"byte_end":17116981,"line_start":1066,"line_end":1066,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116350,"byte_end":17116410,"line_start":1053,"line_end":1053,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116415,"byte_end":17116418,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116423,"byte_end":17116498,"line_start":1055,"line_end":1055,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Response`. It will also look for and use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116503,"byte_end":17116578,"line_start":1056,"line_end":1056,"column_start":5,"column_end":80}},{"value":"/ such an extension in any provided `Request`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116583,"byte_end":17116631,"line_start":1057,"line_end":1057,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116636,"byte_end":17116639,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116644,"byte_end":17116713,"line_start":1059,"line_end":1059,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116718,"byte_end":17116792,"line_start":1060,"line_end":1060,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116797,"byte_end":17116846,"line_start":1061,"line_end":1061,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116851,"byte_end":17116854,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116859,"byte_end":17116909,"line_start":1063,"line_end":1063,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116914,"byte_end":17116917,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17116922,"byte_end":17116943,"line_start":1065,"line_end":1065,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117203,"byte_end":17117219,"line_start":1074,"line_end":1074,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<Builder>::http09_responses","value":"pub fn http09_responses(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/0.9 responses should be tolerated.","sig":null,"attributes":[{"value":"/ Set whether HTTP/0.9 responses should be tolerated.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117102,"byte_end":17117157,"line_start":1071,"line_end":1071,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117162,"byte_end":17117165,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117170,"byte_end":17117191,"line_start":1073,"line_end":1073,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4636},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117853,"byte_end":17117863,"line_start":1091,"line_end":1091,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder>::http2_only","value":"pub fn http2_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the connection **must** use HTTP/2.","sig":null,"attributes":[{"value":"/ Set whether the connection **must** use HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117330,"byte_end":17117381,"line_start":1079,"line_end":1079,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117386,"byte_end":17117389,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ The destination must either allow HTTP2 Prior Knowledge, or the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117394,"byte_end":17117461,"line_start":1081,"line_end":1081,"column_start":5,"column_end":72}},{"value":"/ `Connect` should be configured to do use ALPN to upgrade to `h2`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117466,"byte_end":17117534,"line_start":1082,"line_end":1082,"column_start":5,"column_end":73}},{"value":"/ as part of the connection process. This will not make the `Client`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117539,"byte_end":17117609,"line_start":1083,"line_end":1083,"column_start":5,"column_end":75}},{"value":"/ utilize ALPN by itself.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117614,"byte_end":17117641,"line_start":1084,"line_end":1084,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117646,"byte_end":17117649,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to true prevents HTTP/1 from being allowed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117654,"byte_end":17117724,"line_start":1086,"line_end":1086,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117729,"byte_end":17117732,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117737,"byte_end":17117758,"line_start":1088,"line_end":1088,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17117763,"byte_end":17117788,"line_start":1089,"line_end":1089,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118389,"byte_end":17118421,"line_start":1106,"line_end":1106,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                   impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118000,"byte_end":17118068,"line_start":1096,"line_end":1096,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118073,"byte_end":17118103,"line_start":1097,"line_end":1097,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118108,"byte_end":17118111,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118116,"byte_end":17118151,"line_start":1099,"line_end":1099,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118156,"byte_end":17118159,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118164,"byte_end":17118205,"line_start":1101,"line_end":1101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118210,"byte_end":17118213,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118218,"byte_end":17118294,"line_start":1103,"line_end":1103,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118299,"byte_end":17118324,"line_start":1104,"line_end":1104,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118837,"byte_end":17118873,"line_start":1119,"line_end":1119,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118584,"byte_end":17118640,"line_start":1112,"line_end":1112,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118645,"byte_end":17118648,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118653,"byte_end":17118688,"line_start":1114,"line_end":1114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118693,"byte_end":17118696,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118701,"byte_end":17118742,"line_start":1116,"line_end":1116,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17118747,"byte_end":17118772,"line_start":1117,"line_end":1117,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119364,"byte_end":17119385,"line_start":1135,"line_end":1135,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder>::http2_adaptive_window","value":"pub fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119063,"byte_end":17119112,"line_start":1128,"line_end":1128,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119117,"byte_end":17119120,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119125,"byte_end":17119174,"line_start":1130,"line_end":1130,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119179,"byte_end":17119221,"line_start":1131,"line_end":1131,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119226,"byte_end":17119269,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119274,"byte_end":17119299,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119755,"byte_end":17119775,"line_start":1147,"line_end":1147,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119509,"byte_end":17119558,"line_start":1140,"line_end":1140,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119563,"byte_end":17119566,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119571,"byte_end":17119606,"line_start":1142,"line_end":1142,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119611,"byte_end":17119614,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119619,"byte_end":17119660,"line_start":1144,"line_end":1144,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17119665,"byte_end":17119690,"line_start":1145,"line_end":1145,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122442,"byte_end":17122476,"line_start":1221,"line_end":1221,"column_start":12,"column_end":46},"name":"http2_max_concurrent_reset_streams","qualname":"<Builder>::http2_max_concurrent_reset_streams","value":"pub fn http2_max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of HTTP2 concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of HTTP2 concurrent locally reset streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17121936,"byte_end":17122006,"line_start":1211,"line_end":1211,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122011,"byte_end":17122014,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ See the documentation of [`h2::client::Builder::max_concurrent_reset_streams`] for more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122019,"byte_end":17122110,"line_start":1213,"line_end":1213,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122115,"byte_end":17122127,"line_start":1214,"line_end":1214,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122132,"byte_end":17122135,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ The default value is determined by the `h2` crate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122140,"byte_end":17122194,"line_start":1216,"line_end":1216,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122199,"byte_end":17122202,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ [`h2::client::Builder::max_concurrent_reset_streams`]: https://docs.rs/h2/client/struct.Builder.html#method.max_concurrent_reset_streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122207,"byte_end":17122347,"line_start":1218,"line_end":1218,"column_start":5,"column_end":145}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122352,"byte_end":17122377,"line_start":1219,"line_end":1219,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122906,"byte_end":17122929,"line_start":1235,"line_end":1235,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder>::http2_max_send_buf_size","value":"pub fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122606,"byte_end":17122667,"line_start":1226,"line_end":1226,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122672,"byte_end":17122675,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Default is currently 1MB, but may change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122680,"byte_end":17122725,"line_start":1228,"line_end":1228,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122730,"byte_end":17122733,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122738,"byte_end":17122750,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122755,"byte_end":17122758,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122763,"byte_end":17122811,"line_start":1232,"line_end":1232,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17122816,"byte_end":17122841,"line_start":1233,"line_end":1233,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123529,"byte_end":17123552,"line_start":1252,"line_end":1252,"column_start":12,"column_end":35},"name":"retry_canceled_requests","qualname":"<Builder>::retry_canceled_requests","value":"pub fn retry_canceled_requests(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to retry requests that get disrupted before ever starting\n to write.","sig":null,"attributes":[{"value":"/ Set whether to retry requests that get disrupted before ever starting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123048,"byte_end":17123121,"line_start":1240,"line_end":1240,"column_start":5,"column_end":78}},{"value":"/ to write.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123126,"byte_end":17123139,"line_start":1241,"line_end":1241,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123144,"byte_end":17123147,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This means a request that is queued, and gets given an idle, reused","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123152,"byte_end":17123223,"line_start":1243,"line_end":1243,"column_start":5,"column_end":76}},{"value":"/ connection, and then encounters an error immediately as the idle","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123228,"byte_end":17123296,"line_start":1244,"line_end":1244,"column_start":5,"column_end":73}},{"value":"/ connection was found to be unusable.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123301,"byte_end":17123341,"line_start":1245,"line_end":1245,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123346,"byte_end":17123349,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ When this is set to `false`, the related `ResponseFuture` would instead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123354,"byte_end":17123429,"line_start":1247,"line_end":1247,"column_start":5,"column_end":80}},{"value":"/ resolve to an `Error::Cancel`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123434,"byte_end":17123468,"line_start":1248,"line_end":1248,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123473,"byte_end":17123476,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123481,"byte_end":17123503,"line_start":1250,"line_end":1250,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123508,"byte_end":17123517,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4647},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123955,"byte_end":17123963,"line_start":1264,"line_end":1264,"column_start":12,"column_end":20},"name":"set_host","qualname":"<Builder>::set_host","value":"pub fn set_host(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to automatically add the `Host` header to requests.","sig":null,"attributes":[{"value":"/ Set whether to automatically add the `Host` header to requests.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123672,"byte_end":17123739,"line_start":1257,"line_end":1257,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123744,"byte_end":17123747,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ If true, and a request does not include a `Host` header, one will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123752,"byte_end":17123824,"line_start":1259,"line_end":1259,"column_start":5,"column_end":77}},{"value":"/ added automatically, derived from the authority of the `Uri`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123829,"byte_end":17123894,"line_start":1260,"line_end":1260,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123899,"byte_end":17123902,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123907,"byte_end":17123929,"line_start":1262,"line_end":1262,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17123934,"byte_end":17123943,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17124145,"byte_end":17124153,"line_start":1270,"line_end":1270,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder>::executor","value":"pub fn executor<E>(&mut Self, E) -> &mut Self where\nE: Executor<BoxSendFuture> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide an executor to execute background `Connection` tasks.\n","sig":null,"attributes":[{"value":"/ Provide an executor to execute background `Connection` tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17124068,"byte_end":17124133,"line_start":1269,"line_end":1269,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4650},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17124449,"byte_end":17124459,"line_start":1280,"line_end":1280,"column_start":12,"column_end":22},"name":"build_http","qualname":"<Builder>::build_http","value":"pub fn build_http<B>(&Self) -> Client<HttpConnector, B> where B: HttpBody +\nSend, B::Data: Send","parent":null,"children":[],"decl_id":null,"docs":" Builder a client with this configuration and the default `HttpConnector`.\n","sig":null,"attributes":[{"value":"/ Builder a client with this configuration and the default `HttpConnector`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17124332,"byte_end":17124409,"line_start":1278,"line_end":1278,"column_start":5,"column_end":82}},{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17124414,"byte_end":17124437,"line_start":1279,"line_end":1279,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4652},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17124873,"byte_end":17124878,"line_start":1293,"line_end":1293,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build<C, B>(&Self, C) -> Client<C, B> where C: Connect + Clone,\nB: HttpBody + Send, B::Data: Send","parent":null,"children":[],"decl_id":null,"docs":" Combine the configuration of this builder with a connector to create a `Client`.\n","sig":null,"attributes":[{"value":"/ Combine the configuration of this builder with a connector to create a `Client`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17124777,"byte_end":17124861,"line_start":1292,"line_end":1292,"column_start":5,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":4657},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conn","qualname":"::client::conn","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","parent":null,"children":[{"krate":0,"index":4658},{"krate":0,"index":4661},{"krate":0,"index":4664},{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4674},{"krate":0,"index":4677},{"krate":0,"index":4680},{"krate":0,"index":4683},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4690},{"krate":0,"index":4693},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4700},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4714},{"krate":0,"index":4717},{"krate":0,"index":4720},{"krate":0,"index":4723},{"krate":0,"index":4726},{"krate":0,"index":4729},{"krate":0,"index":4732},{"krate":0,"index":4735},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4742},{"krate":0,"index":4745},{"krate":0,"index":4748},{"krate":0,"index":4751},{"krate":0,"index":7618},{"krate":0,"index":7625},{"krate":0,"index":7633},{"krate":0,"index":4753},{"krate":0,"index":4757},{"krate":0,"index":4760},{"krate":0,"index":5307},{"krate":0,"index":5318},{"krate":0,"index":5320},{"krate":0,"index":5322},{"krate":0,"index":5327},{"krate":0,"index":5329},{"krate":0,"index":4764},{"krate":0,"index":4766},{"krate":0,"index":5331},{"krate":0,"index":5336},{"krate":0,"index":4773},{"krate":0,"index":4776},{"krate":0,"index":4786},{"krate":0,"index":4792},{"krate":0,"index":4799},{"krate":0,"index":4802},{"krate":0,"index":4806},{"krate":0,"index":4811},{"krate":0,"index":4814},{"krate":0,"index":4817},{"krate":0,"index":4826},{"krate":0,"index":4831},{"krate":0,"index":4835},{"krate":0,"index":4864},{"krate":0,"index":4868},{"krate":0,"index":4870},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4886}],"decl_id":null,"docs":" Lower-level client connection API.","sig":null,"attributes":[{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/cfg.rs","byte_start":3214,"byte_end":3227,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ Lower-level client connection API.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17128766,"byte_end":17128804,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17128805,"byte_end":17128808,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types in this module are to provide a lower-level API based around a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17128809,"byte_end":17128885,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ single connection. Connecting to a host, pooling connections, and the like","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17128886,"byte_end":17128964,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ are not handled at this level. This module provides the building blocks to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17128965,"byte_end":17129043,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ customize those things externally.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129044,"byte_end":17129082,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129083,"byte_end":17129086,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If don't have need to manage connections yourself, consider using the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129087,"byte_end":17129160,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ higher-level [Client](super) API.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129161,"byte_end":17129198,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129199,"byte_end":17129202,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129203,"byte_end":17129217,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ A simple example that uses the `SendRequest` struct to talk HTTP over a Tokio TCP stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129218,"byte_end":17129310,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129311,"byte_end":17129324,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(all(feature = \"client\", feature = \"http1\", feature = \"runtime\"))]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129325,"byte_end":17129402,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ # mod rt {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129403,"byte_end":17129417,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129418,"byte_end":17129444,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use http::{Request, StatusCode};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129445,"byte_end":17129481,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use hyper::{client::conn, Body};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129482,"byte_end":17129518,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129519,"byte_end":17129549,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129550,"byte_end":17129553,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129554,"byte_end":17129572,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129573,"byte_end":17129636,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/     let target_stream = TcpStream::connect(\"example.com:80\").await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129637,"byte_end":17129709,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129710,"byte_end":17129713,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let (mut request_sender, connection) = conn::handshake(target_stream).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129714,"byte_end":17129799,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129800,"byte_end":17129803,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // spawn a task to poll the connection and drive the HTTP state","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129804,"byte_end":17129875,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129876,"byte_end":17129909,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         if let Err(e) = connection.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129910,"byte_end":17129956,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/             eprintln!(\"Error in connection: {}\", e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17129957,"byte_end":17130013,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130014,"byte_end":17130027,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130028,"byte_end":17130039,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130040,"byte_end":17130043,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     let request = Request::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130044,"byte_end":17130084,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/         // We need to manually add the host header because SendRequest does not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130085,"byte_end":17130168,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/         .header(\"Host\", \"example.com\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130169,"byte_end":17130211,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/         .method(\"GET\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130212,"byte_end":17130238,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/         .body(Body::from(\"\"))?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130239,"byte_end":17130274,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/     let response = request_sender.send_request(request).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130275,"byte_end":17130342,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/     assert!(response.status() == StatusCode::OK);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130343,"byte_end":17130396,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130397,"byte_end":17130400,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // To send via the same connection again, it may not work as it may not be ready,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130401,"byte_end":17130490,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/     // so we have to wait until the request_sender becomes ready.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130491,"byte_end":17130560,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/     request_sender.ready().await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130561,"byte_end":17130599,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/     let request = Request::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130600,"byte_end":17130640,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/         .header(\"Host\", \"example.com\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130641,"byte_end":17130683,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/         .method(\"GET\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130684,"byte_end":17130710,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/         .body(Body::from(\"\"))?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130711,"byte_end":17130746,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/     let response = request_sender.send_request(request).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130747,"byte_end":17130814,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/     assert!(response.status() == StatusCode::OK);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130815,"byte_end":17130868,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130869,"byte_end":17130883,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130884,"byte_end":17130889,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130890,"byte_end":17130893,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130894,"byte_end":17130901,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17130902,"byte_end":17130909,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4753},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132618,"byte_end":17132627,"line_start":121,"line_end":121,"column_start":14,"column_end":23},"name":"handshake","qualname":"::client::conn::handshake","value":"pub async fn handshake<T>(T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a handshake future over some IO.","sig":null,"attributes":[{"value":"/ Returns a handshake future over some IO.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132441,"byte_end":17132485,"line_start":117,"line_end":117,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132486,"byte_end":17132489,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This is a shortcut for `Builder::new().handshake(io)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132490,"byte_end":17132548,"line_start":119,"line_end":119,"column_start":1,"column_end":59}},{"value":"/ See [`client::conn`](crate::client::conn) for more.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132549,"byte_end":17132604,"line_start":120,"line_end":120,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4757},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132885,"byte_end":17132896,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"SendRequest","qualname":"::client::conn::SendRequest","value":"SendRequest {  }","parent":null,"children":[{"krate":0,"index":4759}],"decl_id":null,"docs":" The sender side of an established connection.\n","sig":null,"attributes":[{"value":"/ The sender side of an established connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132824,"byte_end":17132873,"line_start":130,"line_end":130,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4760},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133245,"byte_end":17133255,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"Connection","qualname":"::client::conn::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":4763}],"decl_id":null,"docs":" A future that processes all HTTP state for the IO object.","sig":null,"attributes":[{"value":"/ A future that processes all HTTP state for the IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17132965,"byte_end":17133026,"line_start":135,"line_end":135,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133027,"byte_end":17133030,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In most cases, this should just be spawned into an executor, so that it","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133031,"byte_end":17133106,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/ can process incoming and outgoing messages, notice hangups, and the like.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133107,"byte_end":17133184,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133185,"byte_end":17133233,"line_start":139,"line_end":139,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5307},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133549,"byte_end":17133556,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::conn::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317}],"decl_id":null,"docs":" A builder to configure an HTTP connection.","sig":null,"attributes":[{"value":"/ A builder to configure an HTTP connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133386,"byte_end":17133432,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133433,"byte_end":17133436,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ After setting options, the builder is used to create a handshake future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17133437,"byte_end":17133513,"line_start":150,"line_end":150,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":4764},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134252,"byte_end":17134266,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::conn::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":4765}],"decl_id":null,"docs":" A future returned by `SendRequest::send_request`.","sig":null,"attributes":[{"value":"/ A future returned by `SendRequest::send_request`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134095,"byte_end":17134148,"line_start":176,"line_end":176,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134149,"byte_end":17134152,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Yields a `Response` if successful.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134153,"byte_end":17134191,"line_start":178,"line_end":178,"column_start":1,"column_end":39}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134192,"byte_end":17134240,"line_start":179,"line_end":179,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5331},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134674,"byte_end":17134679,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"Parts","qualname":"::client::conn::Parts","value":"Parts { io, read_buf }","parent":null,"children":[{"krate":0,"index":5333},{"krate":0,"index":5334},{"krate":0,"index":5335}],"decl_id":null,"docs":" Deconstructed parts of a `Connection`.","sig":null,"attributes":[{"value":"/ Deconstructed parts of a `Connection`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134468,"byte_end":17134510,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134511,"byte_end":17134514,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ This allows taking apart a `Connection` at a later time, in order to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134515,"byte_end":17134587,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/ reclaim the IO object, and additional related pieces.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134588,"byte_end":17134645,"line_start":193,"line_end":193,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5333},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134747,"byte_end":17134749,"line_start":197,"line_end":197,"column_start":9,"column_end":11},"name":"io","qualname":"::client::conn::Parts::io","value":"T","parent":{"krate":0,"index":5331},"children":[],"decl_id":null,"docs":" The original IO object used in the handshake.\n","sig":null,"attributes":[{"value":"/ The original IO object used in the handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134689,"byte_end":17134738,"line_start":196,"line_end":196,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5334},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135169,"byte_end":17135177,"line_start":206,"line_end":206,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::client::conn::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":5331},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134758,"byte_end":17134826,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134831,"byte_end":17134834,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ For instance, if the `Connection` is used for an HTTP upgrade request,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134839,"byte_end":17134913,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ it is possible the server sent back the first bytes of the new protocol","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134918,"byte_end":17134993,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ along with the response upgrade.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17134998,"byte_end":17135034,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135039,"byte_end":17135042,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135047,"byte_end":17135120,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135125,"byte_end":17135160,"line_start":205,"line_end":205,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4778},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135768,"byte_end":17135778,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<SendRequest<B>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut task::Context) -> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to determine whether this sender can be used yet for a request.","sig":null,"attributes":[{"value":"/ Polls to determine whether this sender can be used yet for a request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135604,"byte_end":17135677,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135682,"byte_end":17135685,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If the associated connection is closed, this returns an Error.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135690,"byte_end":17135756,"line_start":225,"line_end":225,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17138007,"byte_end":17138019,"line_start":300,"line_end":300,"column_start":12,"column_end":24},"name":"send_request","qualname":"<SendRequest<B>>::send_request","value":"pub fn send_request(&mut Self, Request<B>) -> ResponseFuture","parent":null,"children":[],"decl_id":null,"docs":" Sends a `Request` on the associated connection.","sig":null,"attributes":[{"value":"/ Sends a `Request` on the associated connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136580,"byte_end":17136631,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136636,"byte_end":17136639,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Returns a future that if successful, yields the `Response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136644,"byte_end":17136707,"line_start":261,"line_end":261,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136712,"byte_end":17136715,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136720,"byte_end":17136730,"line_start":263,"line_end":263,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136735,"byte_end":17136738,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ There are some key differences in what automatic things the `Client`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136743,"byte_end":17136815,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ does for you that will not be done here:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136820,"byte_end":17136864,"line_start":266,"line_end":266,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136869,"byte_end":17136872,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ - `Client` requires absolute-form `Uri`s, since the scheme and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136877,"byte_end":17136943,"line_start":268,"line_end":268,"column_start":5,"column_end":71}},{"value":"/   authority are needed to connect. They aren't required here.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136948,"byte_end":17137013,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/ - Since the `Client` requires absolute-form `Uri`s, it can add","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137018,"byte_end":17137084,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/   the `Host` header based on it. You must add a `Host` header yourself","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137089,"byte_end":17137163,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/   before calling this method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137168,"byte_end":17137201,"line_start":272,"line_end":272,"column_start":5,"column_end":38}},{"value":"/ - Since absolute-form `Uri`s are not required, if received, they will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137206,"byte_end":17137279,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/   be serialized as-is.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137284,"byte_end":17137310,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137315,"byte_end":17137318,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137323,"byte_end":17137336,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137341,"byte_end":17137344,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137349,"byte_end":17137356,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # use http::header::HOST;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137361,"byte_end":17137390,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ # use hyper::client::conn::SendRequest;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137395,"byte_end":17137438,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/ # use hyper::Body;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137443,"byte_end":17137465,"line_start":281,"line_end":281,"column_start":5,"column_end":27}},{"value":"/ use hyper::Request;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137470,"byte_end":17137493,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137498,"byte_end":17137501,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # async fn doc(mut tx: SendRequest<Body>) -> hyper::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137506,"byte_end":17137574,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ // build a Request","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137579,"byte_end":17137601,"line_start":285,"line_end":285,"column_start":5,"column_end":27}},{"value":"/ let req = Request::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137606,"byte_end":17137638,"line_start":286,"line_end":286,"column_start":5,"column_end":37}},{"value":"/     .uri(\"/foo/bar\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137643,"byte_end":17137667,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/     .header(HOST, \"hyper.rs\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137672,"byte_end":17137705,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/     .body(Body::empty())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137710,"byte_end":17137738,"line_start":289,"line_end":289,"column_start":5,"column_end":33}},{"value":"/     .unwrap();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137743,"byte_end":17137761,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137766,"byte_end":17137769,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ // send it and await a Response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137774,"byte_end":17137809,"line_start":292,"line_end":292,"column_start":5,"column_end":40}},{"value":"/ let res = tx.send_request(req).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137814,"byte_end":17137856,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/ // assert the Response","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137861,"byte_end":17137887,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/ assert!(res.status().is_success());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137892,"byte_end":17137931,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137936,"byte_end":17137948,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137953,"byte_end":17137960,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137965,"byte_end":17137983,"line_start":298,"line_end":298,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17137988,"byte_end":17137995,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142088,"byte_end":17142098,"line_start":436,"line_end":436,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Connection<T, B>>::into_parts","value":"pub fn into_parts(Self) -> Parts<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141935,"byte_end":17141994,"line_start":433,"line_end":433,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141999,"byte_end":17142002,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Only works for HTTP/1 connections. HTTP/2 connections will panic.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142007,"byte_end":17142076,"line_start":435,"line_end":435,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4821},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17143329,"byte_end":17143350,"line_start":467,"line_end":467,"column_start":12,"column_end":33},"name":"poll_without_shutdown","qualname":"<Connection<T, B>>::poll_without_shutdown","value":"pub fn poll_without_shutdown(&mut Self, &mut task::Context)\n-> Poll<crate::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Poll the connection for completion, but without calling `shutdown`\n on the underlying IO.","sig":null,"attributes":[{"value":"/ Poll the connection for completion, but without calling `shutdown`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142673,"byte_end":17142743,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/ on the underlying IO.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142748,"byte_end":17142773,"line_start":457,"line_end":457,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142778,"byte_end":17142781,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow running a connection while doing an HTTP","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142786,"byte_end":17142854,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/ upgrade. Once the upgrade is completed, the connection would be \"done\",","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142859,"byte_end":17142934,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ but it is not desired to actually shutdown the IO object. Instead you","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17142939,"byte_end":17143012,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ would take it back using `into_parts`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17143017,"byte_end":17143059,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17143064,"byte_end":17143067,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Use [`poll_fn`](https://docs.rs/futures/0.1.25/futures/future/fn.poll_fn.html)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17143072,"byte_end":17143154,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ and [`try_ready!`](https://docs.rs/futures/0.1.25/futures/macro.try_ready.html)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17143159,"byte_end":17143242,"line_start":465,"line_end":465,"column_start":5,"column_end":88}},{"value":"/ to work with this function; or use the `without_shutdown` wrapper.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17143247,"byte_end":17143317,"line_start":466,"line_end":466,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17144146,"byte_end":17144162,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"without_shutdown","qualname":"<Connection<T, B>>::without_shutdown","value":"pub fn without_shutdown(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Prevent shutdown of the underlying IO object at the end of service the request,\n instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.\n","sig":null,"attributes":[{"value":"/ Prevent shutdown of the underlying IO object at the end of service the request,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17143957,"byte_end":17144040,"line_start":481,"line_end":481,"column_start":5,"column_end":88}},{"value":"/ instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17144045,"byte_end":17144134,"line_start":482,"line_end":482,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":4836},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17145820,"byte_end":17145823,"line_start":535,"line_end":535,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection builder.\n","sig":null,"attributes":[{"value":"/ Creates a new connection builder.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17145757,"byte_end":17145794,"line_start":533,"line_end":533,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17145799,"byte_end":17145808,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4837},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17146561,"byte_end":17146569,"line_start":557,"line_end":557,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder>::executor","value":"pub fn executor<E>(&mut Self, E) -> &mut Builder where\nE: Executor<BoxSendFuture> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Provide an executor to execute background HTTP2 tasks.\n","sig":null,"attributes":[{"value":"/ Provide an executor to execute background HTTP2 tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17146491,"byte_end":17146549,"line_start":556,"line_end":556,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4839},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17146862,"byte_end":17146878,"line_start":568,"line_end":568,"column_start":12,"column_end":28},"name":"http09_responses","qualname":"<Builder>::http09_responses","value":"pub fn http09_responses(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/0.9 responses should be tolerated.","sig":null,"attributes":[{"value":"/ Set whether HTTP/0.9 responses should be tolerated.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17146761,"byte_end":17146816,"line_start":565,"line_end":565,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17146821,"byte_end":17146824,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17146829,"byte_end":17146850,"line_start":567,"line_end":567,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147973,"byte_end":17148022,"line_start":592,"line_end":592,"column_start":12,"column_end":61},"name":"http1_allow_spaces_after_header_name_in_responses","qualname":"<Builder>::http1_allow_spaces_after_header_name_in_responses","value":"pub fn http1_allow_spaces_after_header_name_in_responses(&mut Self, bool)\n-> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will accept spaces between header names\n and the colon that follow them in responses.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will accept spaces between header names","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17146985,"byte_end":17147059,"line_start":573,"line_end":573,"column_start":5,"column_end":79}},{"value":"/ and the colon that follow them in responses.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147064,"byte_end":17147112,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147117,"byte_end":17147120,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ You probably don't need this, here is what [RFC 7230 Section 3.2.4.] has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147125,"byte_end":17147201,"line_start":576,"line_end":576,"column_start":5,"column_end":81}},{"value":"/ to say about it:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147206,"byte_end":17147226,"line_start":577,"line_end":577,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147231,"byte_end":17147234,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ > No whitespace is allowed between the header field-name and colon. In","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147239,"byte_end":17147313,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/ > the past, differences in the handling of such whitespace have led to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147318,"byte_end":17147392,"line_start":580,"line_end":580,"column_start":5,"column_end":79}},{"value":"/ > security vulnerabilities in request routing and response handling. A","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147397,"byte_end":17147471,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/ > server MUST reject any received request message that contains","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147476,"byte_end":17147543,"line_start":582,"line_end":582,"column_start":5,"column_end":72}},{"value":"/ > whitespace between a header field-name and colon with a response code","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147548,"byte_end":17147623,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ > of 400 (Bad Request). A proxy MUST remove any such whitespace from a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147628,"byte_end":17147702,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/ > response message before forwarding the message downstream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147707,"byte_end":17147771,"line_start":585,"line_end":585,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147776,"byte_end":17147779,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147784,"byte_end":17147834,"line_start":587,"line_end":587,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147839,"byte_end":17147842,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147847,"byte_end":17147868,"line_start":589,"line_end":589,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147873,"byte_end":17147876,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ [RFC 7230 Section 3.2.4.]: https://tools.ietf.org/html/rfc7230#section-3.2.4","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17147881,"byte_end":17147961,"line_start":591,"line_end":591,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148809,"byte_end":17148821,"line_start":613,"line_end":613,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder>::http1_writev","value":"pub fn http1_writev(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148211,"byte_end":17148280,"line_start":601,"line_end":601,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148285,"byte_end":17148328,"line_start":602,"line_end":602,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148333,"byte_end":17148336,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148341,"byte_end":17148411,"line_start":604,"line_end":604,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148416,"byte_end":17148481,"line_start":605,"line_end":605,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148486,"byte_end":17148553,"line_start":606,"line_end":606,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148558,"byte_end":17148561,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148566,"byte_end":17148630,"line_start":608,"line_end":608,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148635,"byte_end":17148699,"line_start":609,"line_end":609,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148704,"byte_end":17148707,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148712,"byte_end":17148777,"line_start":611,"line_end":611,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148782,"byte_end":17148797,"line_start":612,"line_end":612,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4842},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149140,"byte_end":17149164,"line_start":624,"line_end":624,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder>::http1_title_case_headers","value":"pub fn http1_title_case_headers(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17148930,"byte_end":17149005,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149010,"byte_end":17149031,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149036,"byte_end":17149039,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149044,"byte_end":17149094,"line_start":621,"line_end":621,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149099,"byte_end":17149102,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149107,"byte_end":17149128,"line_start":623,"line_end":623,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149884,"byte_end":17149910,"line_start":642,"line_end":642,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149279,"byte_end":17149339,"line_start":629,"line_end":629,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149344,"byte_end":17149347,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149352,"byte_end":17149427,"line_start":631,"line_end":631,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Response`. It will also look for and use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149432,"byte_end":17149507,"line_start":632,"line_end":632,"column_start":5,"column_end":80}},{"value":"/ such an extension in any provided `Request`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149512,"byte_end":17149560,"line_start":633,"line_end":633,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149565,"byte_end":17149568,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149573,"byte_end":17149642,"line_start":635,"line_end":635,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149647,"byte_end":17149721,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149726,"byte_end":17149775,"line_start":637,"line_end":637,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149780,"byte_end":17149783,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149788,"byte_end":17149838,"line_start":639,"line_end":639,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149843,"byte_end":17149846,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17149851,"byte_end":17149872,"line_start":641,"line_end":641,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150236,"byte_end":17150261,"line_start":652,"line_end":652,"column_start":12,"column_end":37},"name":"http1_read_buf_exact_size","qualname":"<Builder>::http1_read_buf_exact_size","value":"pub fn http1_read_buf_exact_size(&mut Self, Option<usize>) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets the exact size of the read buffer to *always* use.","sig":null,"attributes":[{"value":"/ Sets the exact size of the read buffer to *always* use.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150027,"byte_end":17150086,"line_start":647,"line_end":647,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150091,"byte_end":17150094,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_max_buf_size` option.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150099,"byte_end":17150172,"line_start":649,"line_end":649,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150177,"byte_end":17150180,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ Default is an adaptive read buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150185,"byte_end":17150224,"line_start":651,"line_end":651,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4845},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150828,"byte_end":17150846,"line_start":669,"line_end":669,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder>::http1_max_buf_size","value":"pub fn http1_max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150413,"byte_end":17150464,"line_start":658,"line_end":658,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150469,"byte_end":17150472,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150477,"byte_end":17150499,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150504,"byte_end":17150507,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Note that setting this option unsets the `http1_read_exact_buf_size` option.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150512,"byte_end":17150592,"line_start":662,"line_end":662,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150597,"byte_end":17150600,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150605,"byte_end":17150617,"line_start":664,"line_end":664,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150622,"byte_end":17150625,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150630,"byte_end":17150733,"line_start":666,"line_end":666,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17150738,"byte_end":17150763,"line_start":667,"line_end":667,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151492,"byte_end":17151502,"line_start":691,"line_end":691,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder>::http2_only","value":"pub fn http2_only(&mut Self, bool) -> &mut Builder","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 is required.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151328,"byte_end":17151363,"line_start":686,"line_end":686,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151368,"byte_end":17151371,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151376,"byte_end":17151397,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151402,"byte_end":17151427,"line_start":689,"line_end":689,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152031,"byte_end":17152063,"line_start":708,"line_end":708,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                   impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151642,"byte_end":17151710,"line_start":698,"line_end":698,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151715,"byte_end":17151745,"line_start":699,"line_end":699,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151750,"byte_end":17151753,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151758,"byte_end":17151793,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151798,"byte_end":17151801,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151806,"byte_end":17151847,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151852,"byte_end":17151855,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151860,"byte_end":17151936,"line_start":705,"line_end":705,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17151941,"byte_end":17151966,"line_start":706,"line_end":706,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4849},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152557,"byte_end":17152593,"line_start":723,"line_end":723,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152304,"byte_end":17152360,"line_start":716,"line_end":716,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152365,"byte_end":17152368,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152373,"byte_end":17152408,"line_start":718,"line_end":718,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152413,"byte_end":17152416,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152421,"byte_end":17152462,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152467,"byte_end":17152492,"line_start":721,"line_end":721,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153156,"byte_end":17153177,"line_start":741,"line_end":741,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder>::http2_adaptive_window","value":"pub fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152855,"byte_end":17152904,"line_start":734,"line_end":734,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152909,"byte_end":17152912,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152917,"byte_end":17152966,"line_start":736,"line_end":736,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17152971,"byte_end":17153013,"line_start":737,"line_end":737,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153018,"byte_end":17153061,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153066,"byte_end":17153091,"line_start":739,"line_end":739,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153761,"byte_end":17153781,"line_start":759,"line_end":759,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153515,"byte_end":17153564,"line_start":752,"line_end":752,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153569,"byte_end":17153572,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153577,"byte_end":17153612,"line_start":754,"line_end":754,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153617,"byte_end":17153620,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153625,"byte_end":17153666,"line_start":756,"line_end":756,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17153671,"byte_end":17153696,"line_start":757,"line_end":757,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156479,"byte_end":17156513,"line_start":835,"line_end":835,"column_start":12,"column_end":46},"name":"http2_max_concurrent_reset_streams","qualname":"<Builder>::http2_max_concurrent_reset_streams","value":"pub fn http2_max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of HTTP2 concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of HTTP2 concurrent locally reset streams.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17155973,"byte_end":17156043,"line_start":825,"line_end":825,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156048,"byte_end":17156051,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ See the documentation of [`h2::client::Builder::max_concurrent_reset_streams`] for more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156056,"byte_end":17156147,"line_start":827,"line_end":827,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156152,"byte_end":17156164,"line_start":828,"line_end":828,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156169,"byte_end":17156172,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ The default value is determined by the `h2` crate.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156177,"byte_end":17156231,"line_start":830,"line_end":830,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156236,"byte_end":17156239,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ [`h2::client::Builder::max_concurrent_reset_streams`]: https://docs.rs/h2/client/struct.Builder.html#method.max_concurrent_reset_streams","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156244,"byte_end":17156384,"line_start":832,"line_end":832,"column_start":5,"column_end":145}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156389,"byte_end":17156414,"line_start":833,"line_end":833,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156942,"byte_end":17156965,"line_start":849,"line_end":849,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder>::http2_max_send_buf_size","value":"pub fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156642,"byte_end":17156703,"line_start":840,"line_end":840,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156708,"byte_end":17156711,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ Default is currently 1MB, but may change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156716,"byte_end":17156761,"line_start":842,"line_end":842,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156766,"byte_end":17156769,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156774,"byte_end":17156786,"line_start":844,"line_end":844,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156791,"byte_end":17156794,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156799,"byte_end":17156847,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17156852,"byte_end":17156877,"line_start":847,"line_end":847,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17157363,"byte_end":17157372,"line_start":860,"line_end":860,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"pub fn handshake<T, B>(&Self, T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin + Send + 'static, B: HttpBody + 'static, B::Data: Send,\nB::Error: Into<Box<dyn StdError + Send + Sync>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a connection with the configured options and IO.\n See [`client::conn`](crate::client::conn) for more.","sig":null,"attributes":[{"value":"/ Constructs a connection with the configured options and IO.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17157128,"byte_end":17157191,"line_start":855,"line_end":855,"column_start":5,"column_end":68}},{"value":"/ See [`client::conn`](crate::client::conn) for more.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17157196,"byte_end":17157251,"line_start":856,"line_end":856,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17157256,"byte_end":17157259,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ Note, if [`Connection`] is not `await`-ed, [`SendRequest`] will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17157264,"byte_end":17157331,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17157336,"byte_end":17157351,"line_start":859,"line_end":859,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":5215},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"service","qualname":"::client::service","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","parent":null,"children":[{"krate":0,"index":5216},{"krate":0,"index":5219},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5232},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5240},{"krate":0,"index":5243},{"krate":0,"index":5246},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5351},{"krate":0,"index":5358},{"krate":0,"index":5256},{"krate":0,"index":5261}],"decl_id":null,"docs":" Utilities used to interact with the Tower ecosystem.","sig":null,"attributes":[{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/cfg.rs","byte_start":3214,"byte_end":3227,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ Utilities used to interact with the Tower ecosystem.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17207728,"byte_end":17207784,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17207785,"byte_end":17207788,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides `Connect` which hook-ins into the Tower ecosystem.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17207789,"byte_end":17207864,"line_start":3,"line_end":3,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5351},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208349,"byte_end":17208356,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Connect","qualname":"::client::service::Connect","value":"Connect {  }","parent":null,"children":[{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357}],"decl_id":null,"docs":" Creates a connection via `SendRequest`.","sig":null,"attributes":[{"value":"/ Creates a connection via `SendRequest`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208127,"byte_end":17208170,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208171,"byte_end":17208174,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This accepts a `hyper::client::conn::Builder` and provides","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208175,"byte_end":17208237,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ a `MakeService` implementation to create connections from some","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208238,"byte_end":17208304,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ target `T`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208305,"byte_end":17208320,"line_start":22,"line_end":22,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5260},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208578,"byte_end":17208581,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Connect<C, B, T>>::new","value":"pub fn new(C, Builder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Connect` with some inner connector `C` and a connection\n builder.\n","sig":null,"attributes":[{"value":"/ Create a new `Connect` with some inner connector `C` and a connection","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208476,"byte_end":17208549,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208554,"byte_end":17208566,"line_start":32,"line_end":32,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":5363},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":5364},{"krate":0,"index":5416},{"krate":0,"index":5676},{"krate":0,"index":5754},{"krate":0,"index":5882},{"krate":0,"index":6150},{"krate":0,"index":6153}],"decl_id":null,"docs":" HTTP Server","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/cfg.rs","byte_start":3214,"byte_end":3227,"line_start":7,"line_end":7,"column_start":13,"column_end":26}},{"value":"/ HTTP Server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210356,"byte_end":17210371,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210372,"byte_end":17210375,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Server` is created to listen on a port, parse HTTP requests, and hand","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210376,"byte_end":17210452,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ them off to a `Service`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210453,"byte_end":17210481,"line_start":4,"line_end":4,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210482,"byte_end":17210485,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are two levels of APIs provide for constructing HTTP servers:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210486,"byte_end":17210557,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210558,"byte_end":17210561,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - The higher-level [`Server`](Server) type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210562,"byte_end":17210609,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/ - The lower-level [`conn`](conn) module.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210610,"byte_end":17210654,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210655,"byte_end":17210658,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210659,"byte_end":17210671,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210672,"byte_end":17210675,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The [`Server`](Server) is main way to start listening for HTTP requests.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210676,"byte_end":17210752,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ It wraps a listener with a [`MakeService`](crate::service), and then should","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210753,"byte_end":17210832,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ be executed to start serving requests.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210833,"byte_end":17210875,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210876,"byte_end":17210879,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`Server`](Server) accepts connections in both HTTP1 and HTTP2 by default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210880,"byte_end":17210958,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210959,"byte_end":17210962,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210963,"byte_end":17210978,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210979,"byte_end":17210982,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210983,"byte_end":17210996,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17210997,"byte_end":17211030,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211031,"byte_end":17211060,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211061,"byte_end":17211110,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211111,"byte_end":17211165,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211166,"byte_end":17211169,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ async fn handle(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211170,"byte_end":17211250,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211251,"byte_end":17211303,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211304,"byte_end":17211309,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211310,"byte_end":17211313,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211314,"byte_end":17211347,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211348,"byte_end":17211366,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211367,"byte_end":17211388,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     // Construct our SocketAddr to listen on...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211389,"byte_end":17211440,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211441,"byte_end":17211501,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211502,"byte_end":17211505,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // And a MakeService to handle each connection...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211506,"byte_end":17211563,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/     let make_service = make_service_fn(|_conn| async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211564,"byte_end":17211622,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/         Ok::<_, Infallible>(service_fn(handle))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211623,"byte_end":17211674,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211675,"byte_end":17211686,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211687,"byte_end":17211690,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/     // Then bind and serve...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211691,"byte_end":17211724,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211725,"byte_end":17211786,"line_start":43,"line_end":43,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211787,"byte_end":17211790,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     // And run forever...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211791,"byte_end":17211820,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211821,"byte_end":17211859,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211860,"byte_end":17211905,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211906,"byte_end":17211915,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211916,"byte_end":17211921,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211922,"byte_end":17211960,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211961,"byte_end":17211979,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211980,"byte_end":17211987,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211988,"byte_end":17211991,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If you don't need the connection and your service implements `Clone` you can use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17211992,"byte_end":17212076,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/ [`tower::make::Shared`] instead of `make_service_fn` which is a bit simpler:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212077,"byte_end":17212157,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212158,"byte_end":17212161,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212162,"byte_end":17212175,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ # use std::convert::Infallible;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212176,"byte_end":17212211,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ # use std::net::SocketAddr;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212212,"byte_end":17212243,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ # use hyper::{Body, Request, Response, Server};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212244,"byte_end":17212295,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/ # use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212296,"byte_end":17212352,"line_start":61,"line_end":61,"column_start":1,"column_end":57}},{"value":"/ # use tower::make::Shared;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212353,"byte_end":17212383,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ # async fn handle(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212384,"byte_end":17212466,"line_start":63,"line_end":63,"column_start":1,"column_end":83}},{"value":"/ #     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212467,"byte_end":17212521,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212522,"byte_end":17212529,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212530,"byte_end":17212563,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212564,"byte_end":17212582,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212583,"byte_end":17212604,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     // Construct our SocketAddr to listen on...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212605,"byte_end":17212656,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212657,"byte_end":17212717,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212718,"byte_end":17212721,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // Shared is a MakeService that produces services by cloning an inner service...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212722,"byte_end":17212810,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/     let make_service = Shared::new(service_fn(handle));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212811,"byte_end":17212870,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212871,"byte_end":17212874,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     // Then bind and serve...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212875,"byte_end":17212908,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212909,"byte_end":17212970,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212971,"byte_end":17212974,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // And run forever...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17212975,"byte_end":17213004,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213005,"byte_end":17213043,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213044,"byte_end":17213089,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213090,"byte_end":17213099,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213100,"byte_end":17213105,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213106,"byte_end":17213144,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213145,"byte_end":17213163,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213164,"byte_end":17213171,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213172,"byte_end":17213175,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Passing data to your request handler can be done like so:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213176,"byte_end":17213237,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213238,"byte_end":17213241,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213242,"byte_end":17213255,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213256,"byte_end":17213289,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213290,"byte_end":17213319,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ use hyper::{Body, Request, Response, Server};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213320,"byte_end":17213369,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213370,"byte_end":17213424,"line_start":93,"line_end":93,"column_start":1,"column_end":55}},{"value":"/ use hyper::server::conn::AddrStream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213425,"byte_end":17213465,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213466,"byte_end":17213469,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213470,"byte_end":17213490,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"/ struct AppContext {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213491,"byte_end":17213514,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/     // Whatever data your application needs can go here","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213515,"byte_end":17213574,"line_start":98,"line_end":98,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213575,"byte_end":17213580,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213581,"byte_end":17213584,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ async fn handle(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213585,"byte_end":17213605,"line_start":101,"line_end":101,"column_start":1,"column_end":21}},{"value":"/     context: AppContext,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213606,"byte_end":17213634,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/     addr: SocketAddr,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213635,"byte_end":17213660,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/     req: Request<Body>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213661,"byte_end":17213687,"line_start":104,"line_end":104,"column_start":1,"column_end":27}},{"value":"/ ) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213688,"byte_end":17213733,"line_start":105,"line_end":105,"column_start":1,"column_end":46}},{"value":"/     Ok(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213734,"byte_end":17213786,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213787,"byte_end":17213792,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213793,"byte_end":17213796,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"runtime\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213797,"byte_end":17213830,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213831,"byte_end":17213849,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213850,"byte_end":17213871,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let context = AppContext {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213872,"byte_end":17213906,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213907,"byte_end":17213925,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213926,"byte_end":17213936,"line_start":114,"line_end":114,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213937,"byte_end":17213940,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     // A `MakeService` that produces a `Service` to handle each connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17213941,"byte_end":17214020,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/     let make_service = make_service_fn(move |conn: &AddrStream| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214021,"byte_end":17214090,"line_start":117,"line_end":117,"column_start":1,"column_end":70}},{"value":"/         // We have to clone the context to share it with each invocation of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214091,"byte_end":17214170,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/         // `make_service`. If your data doesn't implement `Clone` consider using","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214171,"byte_end":17214255,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/         // an `std::sync::Arc`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214256,"byte_end":17214291,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/         let context = context.clone();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214292,"byte_end":17214334,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214335,"byte_end":17214338,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/         // You can grab the address of the incoming connection like so.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214339,"byte_end":17214414,"line_start":123,"line_end":123,"column_start":1,"column_end":76}},{"value":"/         let addr = conn.remote_addr();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214415,"byte_end":17214457,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214458,"byte_end":17214461,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/         // Create a `Service` for responding to the request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214462,"byte_end":17214526,"line_start":126,"line_end":126,"column_start":1,"column_end":65}},{"value":"/         let service = service_fn(move |req| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214527,"byte_end":17214576,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/             handle(context.clone(), addr, req)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214577,"byte_end":17214627,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/         });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214628,"byte_end":17214643,"line_start":129,"line_end":129,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214644,"byte_end":17214647,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/         // Return the service to hyper.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214648,"byte_end":17214691,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/         async move { Ok::<_, Infallible>(service) }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214692,"byte_end":17214747,"line_start":132,"line_end":132,"column_start":1,"column_end":56}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214748,"byte_end":17214759,"line_start":133,"line_end":133,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214760,"byte_end":17214763,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/     // Run the server like above...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214764,"byte_end":17214803,"line_start":135,"line_end":135,"column_start":1,"column_end":40}},{"value":"/     let addr = SocketAddr::from(([127, 0, 0, 1], 3000));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214804,"byte_end":17214864,"line_start":136,"line_end":136,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214865,"byte_end":17214868,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     let server = Server::bind(&addr).serve(make_service);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214869,"byte_end":17214930,"line_start":138,"line_end":138,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214931,"byte_end":17214934,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     if let Err(e) = server.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214935,"byte_end":17214973,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/         eprintln!(\"server error: {}\", e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17214974,"byte_end":17215019,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215020,"byte_end":17215029,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215030,"byte_end":17215035,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # #[cfg(not(feature = \"runtime\"))]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215036,"byte_end":17215074,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215075,"byte_end":17215093,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215094,"byte_end":17215101,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215102,"byte_end":17215105,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [`tower::make::Shared`]: https://docs.rs/tower/latest/tower/make/struct.Shared.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215106,"byte_end":17215193,"line_start":148,"line_end":148,"column_start":1,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":5364},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"accept","qualname":"::server::accept","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","parent":null,"children":[{"krate":0,"index":5365},{"krate":0,"index":5368},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5376},{"krate":0,"index":5379},{"krate":0,"index":5382},{"krate":0,"index":5386},{"krate":0,"index":5404}],"decl_id":null,"docs":" The `Accept` trait and supporting types.","sig":null,"attributes":[{"value":"/ The `Accept` trait and supporting types.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215425,"byte_end":17215469,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215470,"byte_end":17215473,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215474,"byte_end":17215499,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215500,"byte_end":17215503,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Accept`](Accept) trait used to asynchronously accept incoming","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215504,"byte_end":17215577,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215578,"byte_end":17215596,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/ - Utilities like `poll_fn` to ease creating a custom `Accept`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215597,"byte_end":17215663,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":5382},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215897,"byte_end":17215903,"line_start":20,"line_end":20,"column_start":11,"column_end":17},"name":"Accept","qualname":"::server::accept::Accept","value":"Accept","parent":null,"children":[{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385}],"decl_id":null,"docs":" Asynchronously accept incoming connections.\n","sig":null,"attributes":[{"value":"/ Asynchronously accept incoming connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215839,"byte_end":17215886,"line_start":19,"line_end":19,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":5383},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215965,"byte_end":17215969,"line_start":22,"line_end":22,"column_start":10,"column_end":14},"name":"Conn","qualname":"::server::accept::Accept::Conn","value":"type Conn;","parent":{"krate":0,"index":5382},"children":[],"decl_id":null,"docs":" The connection type that can be accepted.\n","sig":null,"attributes":[{"value":"/ The connection type that can be accepted.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215910,"byte_end":17215955,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":5384},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216047,"byte_end":17216052,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::server::accept::Accept::Error","value":"type Error;","parent":{"krate":0,"index":5382},"children":[],"decl_id":null,"docs":" The error type that can occur when accepting a connection.\n","sig":null,"attributes":[{"value":"/ The error type that can occur when accepting a connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17215975,"byte_end":17216037,"line_start":23,"line_end":23,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5385},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216106,"byte_end":17216117,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"poll_accept","qualname":"::server::accept::Accept::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut task::Context)\n-> Poll<Option<Result<Self::Conn, Self::Error>>>","parent":{"krate":0,"index":5382},"children":[],"decl_id":null,"docs":" Poll to accept the next connection.\n","sig":null,"attributes":[{"value":"/ Poll to accept the next connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216059,"byte_end":17216098,"line_start":26,"line_end":26,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":5386},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216713,"byte_end":17216720,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::server::accept::poll_fn","value":"pub fn poll_fn<F, IO, E>(F) -> /*impl Trait*/ where\nF: FnMut(&mut task::Context) -> Poll<Option<Result<IO, E>>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Accept` with a polling function.","sig":null,"attributes":[{"value":"/ Create an `Accept` with a polling function.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216244,"byte_end":17216291,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216292,"byte_end":17216295,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216296,"byte_end":17216309,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216310,"byte_end":17216313,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216314,"byte_end":17216321,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use std::task::Poll;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216322,"byte_end":17216346,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ use hyper::server::{accept, Server};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216347,"byte_end":17216387,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216388,"byte_end":17216391,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # let mock_conn = ();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216392,"byte_end":17216417,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ // If we created some mocked connection...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216418,"byte_end":17216464,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/ let mut conn = Some(mock_conn);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216465,"byte_end":17216500,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216501,"byte_end":17216504,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // And accept just the mocked conn once...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216505,"byte_end":17216551,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ let once = accept::poll_fn(move |cx| {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216552,"byte_end":17216594,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/     Poll::Ready(conn.take().map(Ok::<_, ()>))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216595,"byte_end":17216644,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216645,"byte_end":17216652,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216653,"byte_end":17216656,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let builder = Server::builder(once);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216657,"byte_end":17216697,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216698,"byte_end":17216705,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5404},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217566,"byte_end":17217577,"line_start":85,"line_end":85,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::server::accept::from_stream","value":"pub fn from_stream<S, IO, E>(S) -> /*impl Trait*/ where S: Stream<Item =\nResult<IO, E>>","parent":null,"children":[],"decl_id":null,"docs":" Adapt a `Stream` of incoming connections into an `Accept`.","sig":null,"attributes":[{"value":"/ Adapt a `Stream` of incoming connections into an `Accept`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217363,"byte_end":17217425,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217426,"byte_end":17217429,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Optional","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217430,"byte_end":17217444,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217445,"byte_end":17217448,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function requires enabling the `stream` feature in your","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217449,"byte_end":17217513,"line_start":82,"line_end":82,"column_start":1,"column_end":65}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217514,"byte_end":17217531,"line_start":83,"line_end":83,"column_start":1,"column_end":18}},{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217532,"byte_end":17217558,"line_start":84,"line_end":84,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":5416},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"conn","qualname":"::server::conn","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":5420},{"krate":0,"index":5423},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5888},{"krate":0,"index":5891},{"krate":0,"index":5894},{"krate":0,"index":5897},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5904},{"krate":0,"index":5907},{"krate":0,"index":5910},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5917},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5924},{"krate":0,"index":5927},{"krate":0,"index":5930},{"krate":0,"index":5933},{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5940},{"krate":0,"index":5943},{"krate":0,"index":5946},{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5953},{"krate":0,"index":5956},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5963},{"krate":0,"index":5966},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5440},{"krate":0,"index":5969},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":5987},{"krate":0,"index":5994},{"krate":0,"index":5996},{"krate":0,"index":5998},{"krate":0,"index":5999},{"krate":0,"index":7003},{"krate":0,"index":7010},{"krate":0,"index":7015},{"krate":0,"index":6941},{"krate":0,"index":6948},{"krate":0,"index":6953},{"krate":0,"index":6887},{"krate":0,"index":6892},{"krate":0,"index":6897},{"krate":0,"index":6834},{"krate":0,"index":6840},{"krate":0,"index":5443},{"krate":0,"index":5447},{"krate":0,"index":6784},{"krate":0,"index":6793},{"krate":0,"index":6803},{"krate":0,"index":6001},{"krate":0,"index":6009},{"krate":0,"index":6012},{"krate":0,"index":5452},{"krate":0,"index":5455},{"krate":0,"index":6015},{"krate":0,"index":6022},{"krate":0,"index":5457},{"krate":0,"index":5459},{"krate":0,"index":5496},{"krate":0,"index":5512},{"krate":0,"index":5519},{"krate":0,"index":5523},{"krate":0,"index":5525},{"krate":0,"index":5531},{"krate":0,"index":5539},{"krate":0,"index":5548},{"krate":0,"index":5552},{"krate":0,"index":5557},{"krate":0,"index":5566},{"krate":0,"index":5573},{"krate":0,"index":5656}],"decl_id":null,"docs":" Lower-level Server connection API.","sig":null,"attributes":[{"value":"/ Lower-level Server connection API.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218192,"byte_end":17218230,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218231,"byte_end":17218234,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types in this module are to provide a lower-level API based around a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218235,"byte_end":17218311,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ single connection. Accepting a connection and binding it with a service","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218312,"byte_end":17218387,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ are not handled at this level. This module provides the building blocks to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218388,"byte_end":17218466,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ customize those things externally.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218467,"byte_end":17218505,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218506,"byte_end":17218509,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you don't have need to manage connections yourself, consider using the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218510,"byte_end":17218587,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ higher-level [Server](super) API.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218588,"byte_end":17218625,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218626,"byte_end":17218629,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218630,"byte_end":17218644,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ A simple example that uses the `Http` struct to talk HTTP over a Tokio TCP stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218645,"byte_end":17218730,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218731,"byte_end":17218744,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(all(feature = \"http1\", feature = \"runtime\"))]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218745,"byte_end":17218802,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ # mod rt {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218803,"byte_end":17218817,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ use http::{Request, Response, StatusCode};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218818,"byte_end":17218864,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ use hyper::{server::conn::Http, service::service_fn, Body};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218865,"byte_end":17218928,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ use std::{net::SocketAddr, convert::Infallible};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218929,"byte_end":17218981,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17218982,"byte_end":17219014,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219015,"byte_end":17219018,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219019,"byte_end":17219037,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + Send + Sync>> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219038,"byte_end":17219115,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/     let addr: SocketAddr = ([127, 0, 0, 1], 8080).into();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219116,"byte_end":17219177,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219178,"byte_end":17219181,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let mut tcp_listener = TcpListener::bind(addr).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219182,"byte_end":17219244,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/     loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219245,"byte_end":17219259,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/         let (tcp_stream, _) = tcp_listener.accept().await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219260,"byte_end":17219323,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/         tokio::task::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219324,"byte_end":17219367,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/             if let Err(http_err) = Http::new()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219368,"byte_end":17219418,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/                     .http1_only(true)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219419,"byte_end":17219460,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/                     .http1_keep_alive(true)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219461,"byte_end":17219508,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/                     .serve_connection(tcp_stream, service_fn(hello))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219509,"byte_end":17219581,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/                     .await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219582,"byte_end":17219614,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/                 eprintln!(\"Error while serving HTTP connection: {}\", http_err);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219615,"byte_end":17219698,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/             }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219699,"byte_end":17219716,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219717,"byte_end":17219732,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219733,"byte_end":17219742,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219743,"byte_end":17219748,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219749,"byte_end":17219752,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ async fn hello(_req: Request<Body>) -> Result<Response<Body>, Infallible> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219753,"byte_end":17219832,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/    Ok(Response::new(Body::from(\"Hello World!\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219833,"byte_end":17219885,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219886,"byte_end":17219891,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219892,"byte_end":17219899,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17219900,"byte_end":17219907,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5969},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221584,"byte_end":17221588,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"Http","qualname":"::server::conn::Http","value":"Http {  }","parent":null,"children":[{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5976},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5979},{"krate":0,"index":5980}],"decl_id":null,"docs":" A lower-level configuration of the HTTP protocol.","sig":null,"attributes":[{"value":"/ A lower-level configuration of the HTTP protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221169,"byte_end":17221222,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221223,"byte_end":17221226,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This structure is used to configure options for an HTTP server connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221227,"byte_end":17221305,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221306,"byte_end":17221309,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ If you don't have need to manage connections yourself, consider using the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221310,"byte_end":17221387,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ higher-level [Server](super) API.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221388,"byte_end":17221425,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17221450,"byte_end":17221499,"line_start":97,"line_end":97,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6941},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17223374,"byte_end":17223384,"line_start":154,"line_end":154,"column_start":16,"column_end":26},"name":"Connecting","qualname":"::server::conn::Connecting","value":"Connecting {  }","parent":null,"children":[{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947}],"decl_id":null,"docs":" A future building a new `Service` to a `Connection`.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6834},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17224208,"byte_end":17224218,"line_start":182,"line_end":182,"column_start":16,"column_end":26},"name":"Connection","qualname":"::server::conn::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":6838},{"krate":0,"index":6839}],"decl_id":null,"docs":" A future binding a connection with a Service.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6015},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226284,"byte_end":17226289,"line_start":259,"line_end":259,"column_start":12,"column_end":17},"name":"Parts","qualname":"::server::conn::Parts","value":"Parts { io, read_buf, service }","parent":null,"children":[{"krate":0,"index":6018},{"krate":0,"index":6019},{"krate":0,"index":6020},{"krate":0,"index":6021}],"decl_id":null,"docs":" Deconstructed parts of a `Connection`.","sig":null,"attributes":[{"value":"/ Deconstructed parts of a `Connection`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17225955,"byte_end":17225997,"line_start":252,"line_end":252,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17225998,"byte_end":17226001,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ This allows taking apart a `Connection` at a later time, in order to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226002,"byte_end":17226074,"line_start":254,"line_end":254,"column_start":1,"column_end":73}},{"value":"/ reclaim the IO object, and additional related pieces.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226075,"byte_end":17226132,"line_start":255,"line_end":255,"column_start":1,"column_end":58}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226150,"byte_end":17226199,"line_start":257,"line_end":257,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6018},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226360,"byte_end":17226362,"line_start":261,"line_end":261,"column_start":9,"column_end":11},"name":"io","qualname":"::server::conn::Parts::io","value":"T","parent":{"krate":0,"index":6015},"children":[],"decl_id":null,"docs":" The original IO object used in the handshake.\n","sig":null,"attributes":[{"value":"/ The original IO object used in the handshake.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226302,"byte_end":17226351,"line_start":260,"line_end":260,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6019},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226753,"byte_end":17226761,"line_start":270,"line_end":270,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::server::conn::Parts::read_buf","value":"bytes::Bytes","parent":{"krate":0,"index":6015},"children":[],"decl_id":null,"docs":" A buffer of bytes that have been read but not processed as HTTP.","sig":null,"attributes":[{"value":"/ A buffer of bytes that have been read but not processed as HTTP.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226371,"byte_end":17226439,"line_start":262,"line_end":262,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226444,"byte_end":17226447,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ If the client sent additional bytes after its last request, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226452,"byte_end":17226519,"line_start":264,"line_end":264,"column_start":5,"column_end":72}},{"value":"/ this connection \"ended\" with an upgrade, the read buffer will contain","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226524,"byte_end":17226597,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ those bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226602,"byte_end":17226618,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226623,"byte_end":17226626,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ You will want to check for any existing bytes if you plan to continue","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226631,"byte_end":17226704,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ communicating on the IO object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226709,"byte_end":17226744,"line_start":269,"line_end":269,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6020},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226831,"byte_end":17226838,"line_start":272,"line_end":272,"column_start":9,"column_end":16},"name":"service","qualname":"::server::conn::Parts::service","value":"S","parent":{"krate":0,"index":6015},"children":[],"decl_id":null,"docs":" The `Service` used to serve this connection.\n","sig":null,"attributes":[{"value":"/ The `Service` used to serve this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226774,"byte_end":17226822,"line_start":271,"line_end":271,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5458},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227078,"byte_end":17227081,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<Http>::new","value":"pub fn new() -> Http","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of the HTTP protocol, ready to spawn a server or\n start accepting connections.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the HTTP protocol, ready to spawn a server or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226954,"byte_end":17227029,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ start accepting connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227034,"byte_end":17227066,"line_start":281,"line_end":281,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5461},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227878,"byte_end":17227888,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<Http<E>>::http1_only","value":"pub fn http1_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP1 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP1 is required.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227715,"byte_end":17227750,"line_start":303,"line_end":303,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227755,"byte_end":17227758,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Default is false","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227763,"byte_end":17227783,"line_start":305,"line_end":305,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227788,"byte_end":17227813,"line_start":306,"line_end":306,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5462},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228609,"byte_end":17228625,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"http1_half_close","qualname":"<Http<E>>::http1_half_close","value":"pub fn http1_half_close(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should support half-closures.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should support half-closures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228162,"byte_end":17228226,"line_start":320,"line_end":320,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228231,"byte_end":17228234,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Clients can chose to shutdown their write-side while waiting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228239,"byte_end":17228303,"line_start":322,"line_end":322,"column_start":5,"column_end":69}},{"value":"/ for the server to respond. Setting this to `true` will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228308,"byte_end":17228366,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/ prevent closing the connection immediately if `read`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228371,"byte_end":17228427,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/ detects an EOF in the middle of a request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228432,"byte_end":17228478,"line_start":325,"line_end":325,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228483,"byte_end":17228486,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228491,"byte_end":17228514,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228519,"byte_end":17228544,"line_start":328,"line_end":328,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5463},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228891,"byte_end":17228907,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"http1_keep_alive","qualname":"<Http<E>>::http1_keep_alive","value":"pub fn http1_keep_alive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables HTTP/1 keep-alive.","sig":null,"attributes":[{"value":"/ Enables or disables HTTP/1 keep-alive.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228721,"byte_end":17228763,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228768,"byte_end":17228771,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Default is true.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228776,"byte_end":17228796,"line_start":337,"line_end":337,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17228801,"byte_end":17228826,"line_start":338,"line_end":338,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5464},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229296,"byte_end":17229320,"line_start":353,"line_end":353,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Http<E>>::http1_title_case_headers","value":"pub fn http1_title_case_headers(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229003,"byte_end":17229078,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229083,"byte_end":17229104,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229109,"byte_end":17229112,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229117,"byte_end":17229167,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229172,"byte_end":17229175,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229180,"byte_end":17229201,"line_start":350,"line_end":350,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229206,"byte_end":17229231,"line_start":351,"line_end":351,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5465},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230120,"byte_end":17230146,"line_start":373,"line_end":373,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Http<E>>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229432,"byte_end":17229492,"line_start":358,"line_end":358,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229497,"byte_end":17229500,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229505,"byte_end":17229580,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Request`. It will also look for and use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229585,"byte_end":17229659,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ such an extension in any provided `Response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229664,"byte_end":17229713,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229718,"byte_end":17229721,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229726,"byte_end":17229795,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229800,"byte_end":17229874,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229879,"byte_end":17229928,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229933,"byte_end":17229936,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229941,"byte_end":17229991,"line_start":368,"line_end":368,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17229996,"byte_end":17229999,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230004,"byte_end":17230025,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230030,"byte_end":17230055,"line_start":371,"line_end":371,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5466},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231447,"byte_end":17231459,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Http<E>>::http1_writev","value":"pub fn http1_writev(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230752,"byte_end":17230821,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230826,"byte_end":17230869,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230874,"byte_end":17230877,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230882,"byte_end":17230952,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17230957,"byte_end":17231022,"line_start":393,"line_end":393,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231027,"byte_end":17231094,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231099,"byte_end":17231102,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231107,"byte_end":17231171,"line_start":396,"line_end":396,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231176,"byte_end":17231240,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231245,"byte_end":17231248,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231253,"byte_end":17231318,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231323,"byte_end":17231338,"line_start":400,"line_end":400,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231343,"byte_end":17231352,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231357,"byte_end":17231382,"line_start":402,"line_end":402,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5467},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231720,"byte_end":17231730,"line_start":414,"line_end":414,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Http<E>>::http2_only","value":"pub fn http2_only(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP2 is required.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231557,"byte_end":17231592,"line_start":409,"line_end":409,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231597,"byte_end":17231600,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Default is false","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231605,"byte_end":17231625,"line_start":411,"line_end":411,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17231630,"byte_end":17231655,"line_start":412,"line_end":412,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5468},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232393,"byte_end":17232425,"line_start":436,"line_end":436,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Http<E>>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                   impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232004,"byte_end":17232072,"line_start":426,"line_end":426,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232077,"byte_end":17232107,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232112,"byte_end":17232115,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232120,"byte_end":17232155,"line_start":429,"line_end":429,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232160,"byte_end":17232163,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232168,"byte_end":17232209,"line_start":431,"line_end":431,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232214,"byte_end":17232217,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232222,"byte_end":17232298,"line_start":433,"line_end":433,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232303,"byte_end":17232328,"line_start":434,"line_end":434,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5470},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232920,"byte_end":17232956,"line_start":451,"line_end":451,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Http<E>>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232666,"byte_end":17232723,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232728,"byte_end":17232731,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232736,"byte_end":17232771,"line_start":446,"line_end":446,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232776,"byte_end":17232779,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232784,"byte_end":17232825,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17232830,"byte_end":17232855,"line_start":449,"line_end":449,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5472},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233519,"byte_end":17233540,"line_start":469,"line_end":469,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Http<E>>::http2_adaptive_window","value":"pub fn http2_adaptive_window(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233218,"byte_end":17233267,"line_start":462,"line_end":462,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233272,"byte_end":17233275,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233280,"byte_end":17233329,"line_start":464,"line_end":464,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233334,"byte_end":17233376,"line_start":465,"line_end":465,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233381,"byte_end":17233424,"line_start":466,"line_end":466,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233429,"byte_end":17233454,"line_start":467,"line_end":467,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5476},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234124,"byte_end":17234144,"line_start":487,"line_end":487,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Http<E>>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                       impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233878,"byte_end":17233927,"line_start":480,"line_end":480,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233932,"byte_end":17233935,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233940,"byte_end":17233975,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233980,"byte_end":17233983,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17233988,"byte_end":17234029,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234034,"byte_end":17234059,"line_start":485,"line_end":485,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5478},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234686,"byte_end":17234714,"line_start":502,"line_end":502,"column_start":12,"column_end":40},"name":"http2_max_concurrent_streams","qualname":"<Http<E>>::http2_max_concurrent_streams","value":"pub fn http2_max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(&mut Self,\n                                                                               impl Into<Option<u32>>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234320,"byte_end":17234391,"line_start":494,"line_end":494,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234396,"byte_end":17234412,"line_start":495,"line_end":495,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234417,"byte_end":17234420,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`std::u32::MAX`). Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234425,"byte_end":17234499,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234504,"byte_end":17234507,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234512,"byte_end":17234591,"line_start":499,"line_end":499,"column_start":5,"column_end":84}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17234596,"byte_end":17234621,"line_start":500,"line_end":500,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5480},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236436,"byte_end":17236459,"line_start":555,"line_end":555,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Http<E>>::http2_max_send_buf_size","value":"pub fn http2_max_send_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236133,"byte_end":17236194,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236199,"byte_end":17236202,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Default is currently ~400KB, but may change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236207,"byte_end":17236255,"line_start":548,"line_end":548,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236260,"byte_end":17236263,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236268,"byte_end":17236280,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236285,"byte_end":17236288,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236293,"byte_end":17236341,"line_start":552,"line_end":552,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236346,"byte_end":17236371,"line_start":553,"line_end":553,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5481},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236944,"byte_end":17236956,"line_start":570,"line_end":570,"column_start":12,"column_end":24},"name":"max_buf_size","qualname":"<Http<E>>::max_buf_size","value":"pub fn max_buf_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size for the connection.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size for the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236622,"byte_end":17236673,"line_start":561,"line_end":561,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236678,"byte_end":17236681,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Default is ~400kb.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236686,"byte_end":17236708,"line_start":563,"line_end":563,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236713,"byte_end":17236716,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236721,"byte_end":17236733,"line_start":565,"line_end":565,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236738,"byte_end":17236741,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The minimum value allowed is 8192. This method panics if the passed `max` is less than the minimum.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236746,"byte_end":17236849,"line_start":567,"line_end":567,"column_start":5,"column_end":108}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17236854,"byte_end":17236879,"line_start":568,"line_end":568,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5482},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237378,"byte_end":17237392,"line_start":584,"line_end":584,"column_start":12,"column_end":26},"name":"pipeline_flush","qualname":"<Http<E>>::pipeline_flush","value":"pub fn pipeline_flush(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Aggregates flushes to better support pipelined responses.","sig":null,"attributes":[{"value":"/ Aggregates flushes to better support pipelined responses.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237226,"byte_end":17237287,"line_start":579,"line_end":579,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237292,"byte_end":17237295,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Experimental, may have bugs.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237300,"byte_end":17237332,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237337,"byte_end":17237340,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237345,"byte_end":17237366,"line_start":583,"line_end":583,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5483},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237630,"byte_end":17237643,"line_start":592,"line_end":592,"column_start":12,"column_end":25},"name":"with_executor","qualname":"<Http<E>>::with_executor","value":"pub fn with_executor<E2>(Self, E2) -> Http<E2>","parent":null,"children":[],"decl_id":null,"docs":" Set the executor used to spawn background tasks.","sig":null,"attributes":[{"value":"/ Set the executor used to spawn background tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237497,"byte_end":17237549,"line_start":589,"line_end":589,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237554,"byte_end":17237557,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Default uses implicit default (like `tokio::spawn`).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17237562,"byte_end":17237618,"line_start":591,"line_end":591,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5485},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239361,"byte_end":17239377,"line_start":638,"line_end":638,"column_start":12,"column_end":28},"name":"serve_connection","qualname":"<Http<E>>::serve_connection","value":"pub fn serve_connection<S, I, Bd>(&Self, I, S) -> Connection<I, S, E> where\nS: HttpService<Body, ResBody = Bd>,\nS::Error: Into<Box<dyn StdError + Send + Sync>>, Bd: HttpBody + 'static,\nBd::Error: Into<Box<dyn StdError + Send + Sync>>, I: AsyncRead + AsyncWrite +\nUnpin, E: ConnStreamExec<S::Future, Bd>","parent":null,"children":[],"decl_id":null,"docs":" Bind a connection together with a [`Service`](crate::service::Service).","sig":null,"attributes":[{"value":"/ Bind a connection together with a [`Service`](crate::service::Service).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238326,"byte_end":17238401,"line_start":610,"line_end":610,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238406,"byte_end":17238409,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This returns a Future that must be polled in order for HTTP to be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238414,"byte_end":17238483,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ driven on the connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238488,"byte_end":17238517,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238522,"byte_end":17238525,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238530,"byte_end":17238543,"line_start":615,"line_end":615,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238548,"byte_end":17238551,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238556,"byte_end":17238563,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # use hyper::{Body, Request, Response};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238568,"byte_end":17238611,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/ # use hyper::service::Service;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238616,"byte_end":17238650,"line_start":619,"line_end":619,"column_start":5,"column_end":39}},{"value":"/ # use hyper::server::conn::Http;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238655,"byte_end":17238691,"line_start":620,"line_end":620,"column_start":5,"column_end":41}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238696,"byte_end":17238741,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/ # async fn run<I, S>(some_io: I, some_service: S)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238746,"byte_end":17238799,"line_start":622,"line_end":622,"column_start":5,"column_end":58}},{"value":"/ # where","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238804,"byte_end":17238815,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ #     I: AsyncRead + AsyncWrite + Unpin + Send + 'static,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238820,"byte_end":17238881,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ #     S: Service<hyper::Request<Body>, Response=hyper::Response<Body>> + Send + 'static,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238886,"byte_end":17238978,"line_start":625,"line_end":625,"column_start":5,"column_end":97}},{"value":"/ #     S::Error: Into<Box<dyn std::error::Error + Send + Sync>>,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17238983,"byte_end":17239050,"line_start":626,"line_end":626,"column_start":5,"column_end":72}},{"value":"/ #     S::Future: Send,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239055,"byte_end":17239081,"line_start":627,"line_end":627,"column_start":5,"column_end":31}},{"value":"/ # {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239086,"byte_end":17239093,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ let http = Http::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239098,"byte_end":17239125,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/ let conn = http.serve_connection(some_io, some_service);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239130,"byte_end":17239190,"line_start":630,"line_end":630,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239195,"byte_end":17239198,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ if let Err(e) = conn.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239203,"byte_end":17239235,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/     eprintln!(\"server connection error: {}\", e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239240,"byte_end":17239292,"line_start":633,"line_end":633,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239297,"byte_end":17239302,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239307,"byte_end":17239314,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239319,"byte_end":17239337,"line_start":636,"line_end":636,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17239342,"byte_end":17239349,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5501},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243618,"byte_end":17243635,"line_start":754,"line_end":754,"column_start":12,"column_end":29},"name":"graceful_shutdown","qualname":"<Connection<I, S, E>>::graceful_shutdown","value":"pub fn graceful_shutdown(Pin<&mut Self>)","parent":null,"children":[],"decl_id":null,"docs":" Start a graceful shutdown process for this connection.","sig":null,"attributes":[{"value":"/ Start a graceful shutdown process for this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243252,"byte_end":17243310,"line_start":744,"line_end":744,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243315,"byte_end":17243318,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This `Connection` should continue to be polled until shutdown","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243323,"byte_end":17243388,"line_start":746,"line_end":746,"column_start":5,"column_end":70}},{"value":"/ can finish.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243393,"byte_end":17243408,"line_start":747,"line_end":747,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243413,"byte_end":17243416,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243421,"byte_end":17243431,"line_start":749,"line_end":749,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243436,"byte_end":17243439,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This should only be called while the `Connection` future is still","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243444,"byte_end":17243513,"line_start":751,"line_end":751,"column_start":5,"column_end":74}},{"value":"/ pending. If called after `Connection::poll` has resolved, this does","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243518,"byte_end":17243589,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17243594,"byte_end":17243606,"line_start":753,"line_end":753,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5502},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244716,"byte_end":17244726,"line_start":782,"line_end":782,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Connection<I, S, E>>::into_parts","value":"pub fn into_parts(Self) -> Parts<I, S>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244257,"byte_end":17244316,"line_start":773,"line_end":773,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244321,"byte_end":17244324,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ If the IO object has been \"rewound\" the io will not contain those bytes rewound.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244329,"byte_end":17244413,"line_start":775,"line_end":775,"column_start":5,"column_end":89}},{"value":"/ This should only be called after `poll_without_shutdown` signals","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244418,"byte_end":17244486,"line_start":776,"line_end":776,"column_start":5,"column_end":73}},{"value":"/ that the connection is \"done\". Otherwise, it may not have finished","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244491,"byte_end":17244561,"line_start":777,"line_end":777,"column_start":5,"column_end":75}},{"value":"/ flushing all necessary HTTP bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244566,"byte_end":17244604,"line_start":778,"line_end":778,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244609,"byte_end":17244612,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244617,"byte_end":17244629,"line_start":780,"line_end":780,"column_start":5,"column_end":17}},{"value":"/ This method will panic if this connection is using an h2 protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244634,"byte_end":17244704,"line_start":781,"line_end":781,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5504},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245032,"byte_end":17245046,"line_start":790,"line_end":790,"column_start":12,"column_end":26},"name":"try_into_parts","qualname":"<Connection<I, S, E>>::try_into_parts","value":"pub fn try_into_parts(Self) -> Option<Parts<I, S>>","parent":null,"children":[],"decl_id":null,"docs":" Return the inner IO object, and additional information, if available.","sig":null,"attributes":[{"value":"/ Return the inner IO object, and additional information, if available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244854,"byte_end":17244927,"line_start":787,"line_end":787,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244932,"byte_end":17244935,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This method will return a `None` if this connection is using an h2 protocol.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17244940,"byte_end":17245020,"line_start":789,"line_end":789,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5505},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17246025,"byte_end":17246046,"line_start":816,"line_end":816,"column_start":12,"column_end":33},"name":"poll_without_shutdown","qualname":"<Connection<I, S, E>>::poll_without_shutdown","value":"pub fn poll_without_shutdown(&mut Self, &mut task::Context)\n-> Poll<crate::Result<()>> where S: Unpin, S::Future: Unpin, B: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Poll the connection for completion, but without calling `shutdown`\n on the underlying IO.","sig":null,"attributes":[{"value":"/ Poll the connection for completion, but without calling `shutdown`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245627,"byte_end":17245697,"line_start":809,"line_end":809,"column_start":5,"column_end":75}},{"value":"/ on the underlying IO.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245702,"byte_end":17245727,"line_start":810,"line_end":810,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245732,"byte_end":17245735,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow running a connection while doing an HTTP","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245740,"byte_end":17245808,"line_start":812,"line_end":812,"column_start":5,"column_end":73}},{"value":"/ upgrade. Once the upgrade is completed, the connection would be \"done\",","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245813,"byte_end":17245888,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ but it is not desired to actually shutdown the IO object. Instead you","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245893,"byte_end":17245966,"line_start":814,"line_end":814,"column_start":5,"column_end":78}},{"value":"/ would take it back using `into_parts`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17245971,"byte_end":17246013,"line_start":815,"line_end":815,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5507},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17247642,"byte_end":17247658,"line_start":857,"line_end":857,"column_start":12,"column_end":28},"name":"without_shutdown","qualname":"<Connection<I, S, E>>::without_shutdown","value":"pub fn without_shutdown(Self) -> /*impl Trait*/ where S: Unpin,\nS::Future: Unpin, B: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Prevent shutdown of the underlying IO object at the end of service the request,\n instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","sig":null,"attributes":[{"value":"/ Prevent shutdown of the underlying IO object at the end of service the request,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17247348,"byte_end":17247431,"line_start":851,"line_end":851,"column_start":5,"column_end":88}},{"value":"/ instead run `into_parts`. This is a convenience wrapper over `poll_without_shutdown`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17247436,"byte_end":17247525,"line_start":852,"line_end":852,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17247530,"byte_end":17247533,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17247538,"byte_end":17247549,"line_start":854,"line_end":854,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17247554,"byte_end":17247557,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This errors if the underlying connection protocol is not HTTP/1.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17247562,"byte_end":17247630,"line_start":856,"line_end":856,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5511},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17249153,"byte_end":17249166,"line_start":896,"line_end":896,"column_start":12,"column_end":25},"name":"with_upgrades","qualname":"<Connection<I, S, E>>::with_upgrades","value":"pub fn with_upgrades(Self) -> UpgradeableConnection<I, S, E> where I: Send","parent":null,"children":[],"decl_id":null,"docs":" Enable this connection to support higher-level HTTP upgrades.","sig":null,"attributes":[{"value":"/ Enable this connection to support higher-level HTTP upgrades.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17249007,"byte_end":17249072,"line_start":893,"line_end":893,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17249077,"byte_end":17249080,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ See [the `upgrade` module](crate::upgrade) for more.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17249085,"byte_end":17249141,"line_start":895,"line_end":895,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":5626},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17257869,"byte_end":17257876,"line_start":1166,"line_end":1166,"column_start":15,"column_end":22},"name":"Watcher","qualname":"::server::conn::spawn_all::Watcher","value":"Watcher<I, S: HttpService<Body>, E>: Clone","parent":null,"children":[{"krate":0,"index":5630},{"krate":0,"index":5631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5630},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17257927,"byte_end":17257933,"line_start":1167,"line_end":1167,"column_start":14,"column_end":20},"name":"Future","qualname":"::server::conn::spawn_all::Watcher::Future","value":"type Future: Future<Output = crate::Result<()>>;","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17257983,"byte_end":17257988,"line_start":1169,"line_end":1169,"column_start":12,"column_end":17},"name":"watch","qualname":"::server::conn::spawn_all::Watcher::watch","value":"pub fn watch(&Self, UpgradeableConnection<I, S, E>) -> Self::Future","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6026},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17258144,"byte_end":17258155,"line_start":1174,"line_end":1174,"column_start":16,"column_end":27},"name":"NoopWatcher","qualname":"::server::conn::spawn_all::NoopWatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17258062,"byte_end":17258101,"line_start":1172,"line_end":1172,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6667},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17259252,"byte_end":17259262,"line_start":1203,"line_end":1203,"column_start":20,"column_end":30},"name":"NewSvcTask","qualname":"::server::conn::spawn_all::NewSvcTask","value":"NewSvcTask {  }","parent":null,"children":[{"krate":0,"index":6673}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5658},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17262723,"byte_end":17262744,"line_start":1299,"line_end":1299,"column_start":16,"column_end":37},"name":"UpgradeableConnection","qualname":"::server::conn::upgrades::UpgradeableConnection","value":"UpgradeableConnection {  }","parent":null,"children":[{"krate":0,"index":5662}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17262615,"byte_end":17262663,"line_start":1297,"line_end":1297,"column_start":5,"column_end":53}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17262668,"byte_end":17262707,"line_start":1298,"line_end":1298,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17263386,"byte_end":17263403,"line_start":1319,"line_end":1319,"column_start":16,"column_end":33},"name":"graceful_shutdown","qualname":"<UpgradeableConnection<I, S, E>>::graceful_shutdown","value":"pub fn graceful_shutdown(Pin<&mut Self>)","parent":null,"children":[],"decl_id":null,"docs":" Start a graceful shutdown process for this connection.","sig":null,"attributes":[{"value":"/ Start a graceful shutdown process for this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17263202,"byte_end":17263260,"line_start":1315,"line_end":1315,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17263269,"byte_end":17263272,"line_start":1316,"line_end":1316,"column_start":9,"column_end":12}},{"value":"/ This `Connection` should continue to be polled until shutdown","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17263281,"byte_end":17263346,"line_start":1317,"line_end":1317,"column_start":9,"column_end":74}},{"value":"/ can finish.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17263355,"byte_end":17263370,"line_start":1318,"line_end":1318,"column_start":9,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6508},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17266894,"byte_end":17266900,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"name":"Server","qualname":"::server::server::Server","value":"Server {  }","parent":null,"children":[{"krate":0,"index":6512}],"decl_id":null,"docs":" A listening HTTP server that accepts connections in both HTTP1 and HTTP2 by default.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6101},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17267507,"byte_end":17267514,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"Builder","qualname":"::server::server::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":6104},{"krate":0,"index":6105}],"decl_id":null,"docs":" A builder for a [`Server`](Server).\n","sig":null,"attributes":[{"value":"/ A builder for a [`Server`](Server).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17267316,"byte_end":17267355,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"cfg(any(feature = \"http1\", feature = \"http2\"))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17267373,"byte_end":17267422,"line_start":54,"line_end":54,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5698},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17267833,"byte_end":17267840,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"builder","qualname":"<Server<I, ()>>::builder","value":"pub fn builder(I) -> Builder<I>","parent":null,"children":[],"decl_id":null,"docs":" Starts a [`Builder`](Builder) with the provided incoming stream.\n","sig":null,"attributes":[{"value":"/ Starts a [`Builder`](Builder) with the provided incoming stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17267753,"byte_end":17267821,"line_start":66,"line_end":66,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6111},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17268390,"byte_end":17268394,"line_start":85,"line_end":85,"column_start":16,"column_end":20},"name":"bind","qualname":"<Server<AddrIncoming, ()>>::bind","value":"pub fn bind(&SocketAddr) -> Builder<AddrIncoming>","parent":null,"children":[],"decl_id":null,"docs":" Binds to the provided address, and returns a [`Builder`](Builder).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6113},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17268740,"byte_end":17268748,"line_start":93,"line_end":93,"column_start":16,"column_end":24},"name":"try_bind","qualname":"<Server<AddrIncoming, ()>>::try_bind","value":"pub fn try_bind(&SocketAddr) -> crate::Result<Builder<AddrIncoming>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to bind to the provided address, and returns a [`Builder`](Builder).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6114},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17268968,"byte_end":17268976,"line_start":98,"line_end":98,"column_start":16,"column_end":24},"name":"from_tcp","qualname":"<Server<AddrIncoming, ()>>::from_tcp","value":"pub fn from_tcp(StdTcpListener) -> Result<Builder<AddrIncoming>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from a `std::net::TcpListener` instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6118},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17269352,"byte_end":17269362,"line_start":109,"line_end":109,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Server<AddrIncoming, S, E>>::local_addr","value":"pub fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this server is bound to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5706},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271360,"byte_end":17271382,"line_start":165,"line_end":165,"column_start":12,"column_end":34},"name":"with_graceful_shutdown","qualname":"<Server<I, S, E>>::with_graceful_shutdown","value":"pub fn with_graceful_shutdown<F>(Self, F) -> Graceful<I, S, F, E> where\nF: Future<Output = ()>","parent":null,"children":[],"decl_id":null,"docs":" Prepares a server to handle graceful shutdown when the provided future\n completes.","sig":null,"attributes":[{"value":"/ Prepares a server to handle graceful shutdown when the provided future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270077,"byte_end":17270151,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ completes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270156,"byte_end":17270170,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270175,"byte_end":17270178,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270183,"byte_end":17270196,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270201,"byte_end":17270204,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270209,"byte_end":17270216,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270221,"byte_end":17270239,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ # #[cfg(feature = \"tcp\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270244,"byte_end":17270273,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270278,"byte_end":17270300,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/ # use hyper::{Body, Response, Server, Error};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270305,"byte_end":17270354,"line_start":138,"line_end":138,"column_start":5,"column_end":54}},{"value":"/ # use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270359,"byte_end":17270415,"line_start":139,"line_end":139,"column_start":5,"column_end":61}},{"value":"/ # let make_service = make_service_fn(|_| async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270420,"byte_end":17270472,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/ #     Ok::<_, Error>(service_fn(|_req| async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270477,"byte_end":17270527,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/ #         Ok::<_, Error>(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270532,"byte_end":17270602,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ #     }))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270607,"byte_end":17270620,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270625,"byte_end":17270634,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ // Make a server from the previous examples...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270639,"byte_end":17270689,"line_start":145,"line_end":145,"column_start":5,"column_end":55}},{"value":"/ let server = Server::bind(&([127, 0, 0, 1], 3000).into())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270694,"byte_end":17270755,"line_start":146,"line_end":146,"column_start":5,"column_end":66}},{"value":"/     .serve(make_service);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270760,"byte_end":17270789,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270794,"byte_end":17270797,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // Prepare some signal for when the server should start shutting down...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270802,"byte_end":17270878,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ let (tx, rx) = tokio::sync::oneshot::channel::<()>();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270883,"byte_end":17270940,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ let graceful = server","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270945,"byte_end":17270970,"line_start":151,"line_end":151,"column_start":5,"column_end":30}},{"value":"/     .with_graceful_shutdown(async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17270975,"byte_end":17271014,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/         rx.await.ok();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271019,"byte_end":17271045,"line_start":153,"line_end":153,"column_start":5,"column_end":31}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271050,"byte_end":17271061,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271066,"byte_end":17271069,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ // Await the `server` receiving the signal...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271074,"byte_end":17271123,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/ if let Err(e) = graceful.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271128,"byte_end":17271164,"line_start":157,"line_end":157,"column_start":5,"column_end":41}},{"value":"/     eprintln!(\"server error: {}\", e);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271169,"byte_end":17271210,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271215,"byte_end":17271220,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271225,"byte_end":17271228,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // And later, trigger the signal by calling `tx.send(())`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271233,"byte_end":17271295,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/ let _ = tx.send(());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271300,"byte_end":17271324,"line_start":162,"line_end":162,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271329,"byte_end":17271336,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271341,"byte_end":17271348,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5724},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273041,"byte_end":17273044,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder<I, E>>::new","value":"pub fn new(I, Http_<E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a new builder, wrapping an incoming stream and low-level options.","sig":null,"attributes":[{"value":"/ Start a new builder, wrapping an incoming stream and low-level options.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17272867,"byte_end":17272942,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17272947,"byte_end":17272950,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For a more convenient constructor, see [`Server::bind`](Server::bind).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17272955,"byte_end":17273029,"line_start":210,"line_end":210,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5725},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273326,"byte_end":17273341,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"http1_keepalive","qualname":"<Builder<I, E>>::http1_keepalive","value":"pub fn http1_keepalive(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use keep-alive for HTTP/1 connections.","sig":null,"attributes":[{"value":"/ Sets whether to use keep-alive for HTTP/1 connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273138,"byte_end":17273196,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273201,"byte_end":17273204,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273209,"byte_end":17273231,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273236,"byte_end":17273261,"line_start":218,"line_end":218,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5726},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273889,"byte_end":17273905,"line_start":235,"line_end":235,"column_start":12,"column_end":28},"name":"http1_half_close","qualname":"<Builder<I, E>>::http1_half_close","value":"pub fn http1_half_close(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should support half-closures.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should support half-closures.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273442,"byte_end":17273506,"line_start":225,"line_end":225,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273511,"byte_end":17273514,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Clients can chose to shutdown their write-side while waiting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273519,"byte_end":17273583,"line_start":227,"line_end":227,"column_start":5,"column_end":69}},{"value":"/ for the server to respond. Setting this to `true` will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273588,"byte_end":17273646,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/ prevent closing the connection immediately if `read`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273651,"byte_end":17273707,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/ detects an EOF in the middle of a request.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273712,"byte_end":17273758,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273763,"byte_end":17273766,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273771,"byte_end":17273794,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17273799,"byte_end":17273824,"line_start":233,"line_end":233,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5727},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274169,"byte_end":17274187,"line_start":245,"line_end":245,"column_start":12,"column_end":30},"name":"http1_max_buf_size","qualname":"<Builder<I, E>>::http1_max_buf_size","value":"pub fn http1_max_buf_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum buffer size.","sig":null,"attributes":[{"value":"/ Set the maximum buffer size.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274006,"byte_end":17274038,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274043,"byte_end":17274046,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Default is ~ 400kb.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274051,"byte_end":17274074,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274079,"byte_end":17274104,"line_start":243,"line_end":243,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5728},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274538,"byte_end":17274558,"line_start":256,"line_end":256,"column_start":12,"column_end":32},"name":"http1_pipeline_flush","qualname":"<Builder<I, E>>::http1_pipeline_flush","value":"pub fn http1_pipeline_flush(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274501,"byte_end":17274526,"line_start":255,"line_end":255,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5729},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275285,"byte_end":17275297,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"http1_writev","qualname":"<Builder<I, E>>::http1_writev","value":"pub fn http1_writev(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections should try to use vectored writes,\n or always flatten into a single buffer.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections should try to use vectored writes,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274657,"byte_end":17274726,"line_start":261,"line_end":261,"column_start":5,"column_end":74}},{"value":"/ or always flatten into a single buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274731,"byte_end":17274774,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274779,"byte_end":17274782,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Note that setting this to false may mean more copies of body data,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274787,"byte_end":17274857,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ but may also improve performance when an IO transport doesn't","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274862,"byte_end":17274927,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/ support vectored writes well, such as most TLS implementations.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17274932,"byte_end":17274999,"line_start":266,"line_end":266,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275004,"byte_end":17275007,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Setting this to true will force hyper to use queued strategy","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275012,"byte_end":17275076,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/ which may eliminate unnecessary cloning on some TLS backends","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275081,"byte_end":17275145,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275150,"byte_end":17275153,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Default is `auto`. In this mode hyper will try to guess which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275158,"byte_end":17275223,"line_start":271,"line_end":271,"column_start":5,"column_end":70}},{"value":"/ mode to use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275228,"byte_end":17275243,"line_start":272,"line_end":272,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275248,"byte_end":17275273,"line_start":273,"line_end":273,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5730},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275695,"byte_end":17275719,"line_start":287,"line_end":287,"column_start":12,"column_end":36},"name":"http1_title_case_headers","qualname":"<Builder<I, E>>::http1_title_case_headers","value":"pub fn http1_title_case_headers(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether HTTP/1 connections will write header names as title case at\n the socket level.","sig":null,"attributes":[{"value":"/ Set whether HTTP/1 connections will write header names as title case at","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275402,"byte_end":17275477,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ the socket level.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275482,"byte_end":17275503,"line_start":280,"line_end":280,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275508,"byte_end":17275511,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275516,"byte_end":17275566,"line_start":282,"line_end":282,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275571,"byte_end":17275574,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275579,"byte_end":17275600,"line_start":284,"line_end":284,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275605,"byte_end":17275630,"line_start":285,"line_end":285,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5731},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276516,"byte_end":17276542,"line_start":307,"line_end":307,"column_start":12,"column_end":38},"name":"http1_preserve_header_case","qualname":"<Builder<I, E>>::http1_preserve_header_case","value":"pub fn http1_preserve_header_case(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to support preserving original header cases.","sig":null,"attributes":[{"value":"/ Set whether to support preserving original header cases.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275828,"byte_end":17275888,"line_start":292,"line_end":292,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275893,"byte_end":17275896,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Currently, this will record the original cases received, and store them","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275901,"byte_end":17275976,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ in a private extension on the `Request`. It will also look for and use","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17275981,"byte_end":17276055,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ such an extension in any provided `Response`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276060,"byte_end":17276109,"line_start":296,"line_end":296,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276114,"byte_end":17276117,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Since the relevant extension is still private, there is no way to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276122,"byte_end":17276191,"line_start":298,"line_end":298,"column_start":5,"column_end":74}},{"value":"/ interact with the original cases. The only effect this can have now is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276196,"byte_end":17276270,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/ to forward the cases in a proxy-like fashion.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276275,"byte_end":17276324,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276329,"byte_end":17276332,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Note that this setting does not affect HTTP/2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276337,"byte_end":17276387,"line_start":302,"line_end":302,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276392,"byte_end":17276395,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Default is false.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276400,"byte_end":17276421,"line_start":304,"line_end":304,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17276426,"byte_end":17276451,"line_start":305,"line_end":305,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5732},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277311,"byte_end":17277321,"line_start":328,"line_end":328,"column_start":12,"column_end":22},"name":"http1_only","qualname":"<Builder<I, E>>::http1_only","value":"pub fn http1_only(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP/1 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP/1 is required.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277144,"byte_end":17277180,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277185,"byte_end":17277188,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277193,"byte_end":17277216,"line_start":325,"line_end":325,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http1\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277221,"byte_end":17277246,"line_start":326,"line_end":326,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277583,"byte_end":17277593,"line_start":338,"line_end":338,"column_start":12,"column_end":22},"name":"http2_only","qualname":"<Builder<I, E>>::http2_only","value":"pub fn http2_only(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether HTTP/2 is required.","sig":null,"attributes":[{"value":"/ Sets whether HTTP/2 is required.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277416,"byte_end":17277452,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277457,"byte_end":17277460,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277465,"byte_end":17277488,"line_start":335,"line_end":335,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277493,"byte_end":17277518,"line_start":336,"line_end":336,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278077,"byte_end":17278109,"line_start":353,"line_end":353,"column_start":12,"column_end":44},"name":"http2_initial_stream_window_size","qualname":"<Builder<I, E>>::http2_initial_stream_window_size","value":"pub fn http2_initial_stream_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                   impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2\n stream-level flow control.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_INITIAL_WINDOW_SIZE`][spec] option for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277688,"byte_end":17277756,"line_start":343,"line_end":343,"column_start":5,"column_end":73}},{"value":"/ stream-level flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277761,"byte_end":17277791,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277796,"byte_end":17277799,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277804,"byte_end":17277839,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277844,"byte_end":17277847,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277852,"byte_end":17277893,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277898,"byte_end":17277901,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_INITIAL_WINDOW_SIZE","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277906,"byte_end":17277982,"line_start":350,"line_end":350,"column_start":5,"column_end":81}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17277987,"byte_end":17278012,"line_start":351,"line_end":351,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5736},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278502,"byte_end":17278538,"line_start":365,"line_end":365,"column_start":12,"column_end":48},"name":"http2_initial_connection_window_size","qualname":"<Builder<I, E>>::http2_initial_connection_window_size","value":"pub fn http2_initial_connection_window_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                                       impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max connection-level flow control for HTTP2","sig":null,"attributes":[{"value":"/ Sets the max connection-level flow control for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278249,"byte_end":17278305,"line_start":358,"line_end":358,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278310,"byte_end":17278313,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278318,"byte_end":17278353,"line_start":360,"line_end":360,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278358,"byte_end":17278361,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278366,"byte_end":17278407,"line_start":362,"line_end":362,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278412,"byte_end":17278437,"line_start":363,"line_end":363,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278996,"byte_end":17279017,"line_start":378,"line_end":378,"column_start":12,"column_end":33},"name":"http2_adaptive_window","qualname":"<Builder<I, E>>::http2_adaptive_window","value":"pub fn http2_adaptive_window(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to use an adaptive flow control.","sig":null,"attributes":[{"value":"/ Sets whether to use an adaptive flow control.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278695,"byte_end":17278744,"line_start":371,"line_end":371,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278749,"byte_end":17278752,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Enabling this will override the limits set in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278757,"byte_end":17278806,"line_start":373,"line_end":373,"column_start":5,"column_end":54}},{"value":"/ `http2_initial_stream_window_size` and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278811,"byte_end":17278853,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/ `http2_initial_connection_window_size`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278858,"byte_end":17278901,"line_start":375,"line_end":375,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17278906,"byte_end":17278931,"line_start":376,"line_end":376,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279377,"byte_end":17279397,"line_start":390,"line_end":390,"column_start":12,"column_end":32},"name":"http2_max_frame_size","qualname":"<Builder<I, E>>::http2_max_frame_size","value":"pub fn http2_max_frame_size<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                       impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum frame size to use for HTTP2.","sig":null,"attributes":[{"value":"/ Sets the maximum frame size to use for HTTP2.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279131,"byte_end":17279180,"line_start":383,"line_end":383,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279185,"byte_end":17279188,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279193,"byte_end":17279228,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279233,"byte_end":17279236,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If not set, hyper will use a default.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279241,"byte_end":17279282,"line_start":387,"line_end":387,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279287,"byte_end":17279312,"line_start":388,"line_end":388,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5741},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279884,"byte_end":17279912,"line_start":403,"line_end":403,"column_start":12,"column_end":40},"name":"http2_max_concurrent_streams","qualname":"<Builder<I, E>>::http2_max_concurrent_streams","value":"pub fn http2_max_concurrent_streams<impl Into<Option<u32>>: Into<Option<u32>>>(Self,\n                                                                               impl Into<Option<u32>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2\n connections.","sig":null,"attributes":[{"value":"/ Sets the [`SETTINGS_MAX_CONCURRENT_STREAMS`][spec] option for HTTP2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279518,"byte_end":17279589,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279594,"byte_end":17279610,"line_start":396,"line_end":396,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279615,"byte_end":17279618,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Default is no limit (`std::u32::MAX`). Passing `None` will do nothing.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279623,"byte_end":17279697,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279702,"byte_end":17279705,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://http2.github.io/http2-spec/#SETTINGS_MAX_CONCURRENT_STREAMS","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279710,"byte_end":17279789,"line_start":400,"line_end":400,"column_start":5,"column_end":84}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17279794,"byte_end":17279819,"line_start":401,"line_end":401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5743},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281583,"byte_end":17281606,"line_start":451,"line_end":451,"column_start":12,"column_end":35},"name":"http2_max_send_buf_size","qualname":"<Builder<I, E>>::http2_max_send_buf_size","value":"pub fn http2_max_send_buf_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum write buffer size for each HTTP/2 stream.","sig":null,"attributes":[{"value":"/ Set the maximum write buffer size for each HTTP/2 stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281280,"byte_end":17281341,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281346,"byte_end":17281349,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Default is currently ~400KB, but may change.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281354,"byte_end":17281402,"line_start":444,"line_end":444,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281407,"byte_end":17281410,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281415,"byte_end":17281427,"line_start":446,"line_end":446,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281432,"byte_end":17281435,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ The value must be no larger than `u32::MAX`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281440,"byte_end":17281488,"line_start":448,"line_end":448,"column_start":5,"column_end":53}},{"value":"cfg(feature = \"http2\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281493,"byte_end":17281518,"line_start":449,"line_end":449,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5744},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281824,"byte_end":17281832,"line_start":459,"line_end":459,"column_start":12,"column_end":20},"name":"executor","qualname":"<Builder<I, E>>::executor","value":"pub fn executor<E2>(Self, E2) -> Builder<I, E2>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `Executor` to deal with connection tasks.","sig":null,"attributes":[{"value":"/ Sets the `Executor` to deal with connection tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281715,"byte_end":17281769,"line_start":456,"line_end":456,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281774,"byte_end":17281777,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Default is `tokio::spawn`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17281782,"byte_end":17281812,"line_start":458,"line_end":458,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5746},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282957,"byte_end":17282962,"line_start":496,"line_end":496,"column_start":12,"column_end":17},"name":"serve","qualname":"<Builder<I, E>>::serve","value":"pub fn serve<S, B>(Self, S) -> Server<I, S, E> where I: Accept,\nI::Error: Into<Box<dyn StdError + Send + Sync>>, I::Conn: AsyncRead +\nAsyncWrite + Unpin + Send + 'static, S: MakeServiceRef<I::Conn, Body, ResBody\n= B>, S::Error: Into<Box<dyn StdError + Send + Sync>>, B: HttpBody + 'static,\nB::Error: Into<Box<dyn StdError + Send + Sync>>,\nE: NewSvcExec<I::Conn, S::Future, S::Service, E, NoopWatcher>,\nE: ConnStreamExec<<S::Service as HttpService<Body>>::Future, B>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Builder`, creating a [`Server`](Server).","sig":null,"attributes":[{"value":"/ Consume this `Builder`, creating a [`Server`](Server).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282014,"byte_end":17282072,"line_start":466,"line_end":466,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282077,"byte_end":17282080,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282085,"byte_end":17282098,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282103,"byte_end":17282106,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282111,"byte_end":17282118,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"tcp\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282123,"byte_end":17282152,"line_start":471,"line_end":471,"column_start":5,"column_end":34}},{"value":"/ # async fn run() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282157,"byte_end":17282179,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/ use hyper::{Body, Error, Response, Server};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282184,"byte_end":17282231,"line_start":473,"line_end":473,"column_start":5,"column_end":52}},{"value":"/ use hyper::service::{make_service_fn, service_fn};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282236,"byte_end":17282290,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282295,"byte_end":17282298,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ // Construct our SocketAddr to listen on...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282303,"byte_end":17282350,"line_start":476,"line_end":476,"column_start":5,"column_end":52}},{"value":"/ let addr = ([127, 0, 0, 1], 3000).into();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282355,"byte_end":17282400,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282405,"byte_end":17282408,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ // And a MakeService to handle each connection...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282413,"byte_end":17282466,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/ let make_svc = make_service_fn(|_| async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282471,"byte_end":17282517,"line_start":480,"line_end":480,"column_start":5,"column_end":51}},{"value":"/     Ok::<_, Error>(service_fn(|_req| async {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282522,"byte_end":17282570,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/         Ok::<_, Error>(Response::new(Body::from(\"Hello World\")))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282575,"byte_end":17282643,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/     }))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282648,"byte_end":17282659,"line_start":483,"line_end":483,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282664,"byte_end":17282671,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282676,"byte_end":17282679,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ // Then bind and serve...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282684,"byte_end":17282713,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/ let server = Server::bind(&addr)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282718,"byte_end":17282754,"line_start":487,"line_end":487,"column_start":5,"column_end":41}},{"value":"/     .serve(make_svc);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282759,"byte_end":17282784,"line_start":488,"line_end":488,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282789,"byte_end":17282792,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ // Run forever-ish...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282797,"byte_end":17282822,"line_start":490,"line_end":490,"column_start":5,"column_end":30}},{"value":"/ if let Err(err) = server.await {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282827,"byte_end":17282863,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/     eprintln!(\"server error: {}\", err);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282868,"byte_end":17282911,"line_start":492,"line_end":492,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282916,"byte_end":17282921,"line_start":493,"line_end":493,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282926,"byte_end":17282933,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17282938,"byte_end":17282945,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284041,"byte_end":17284054,"line_start":521,"line_end":521,"column_start":12,"column_end":25},"name":"tcp_keepalive","qualname":"<Builder<AddrIncoming, E>>::tcp_keepalive","value":"pub fn tcp_keepalive(Self, Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17283773,"byte_end":17283848,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17283853,"byte_end":17283856,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17283861,"byte_end":17283934,"line_start":518,"line_end":518,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17283939,"byte_end":17284013,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284018,"byte_end":17284029,"line_start":520,"line_end":520,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5752},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284255,"byte_end":17284266,"line_start":527,"line_end":527,"column_start":12,"column_end":23},"name":"tcp_nodelay","qualname":"<Builder<AddrIncoming, E>>::tcp_nodelay","value":"pub fn tcp_nodelay(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284176,"byte_end":17284243,"line_start":526,"line_end":526,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5753},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17285218,"byte_end":17285244,"line_start":547,"line_end":547,"column_start":12,"column_end":38},"name":"tcp_sleep_on_accept_errors","qualname":"<Builder<AddrIncoming, E>>::tcp_sleep_on_accept_errors","value":"pub fn tcp_sleep_on_accept_errors(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether to sleep on accept errors.","sig":null,"attributes":[{"value":"/ Set whether to sleep on accept errors.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284370,"byte_end":17284412,"line_start":532,"line_end":532,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284417,"byte_end":17284420,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ A possible scenario is that the process has hit the max open files","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284425,"byte_end":17284495,"line_start":534,"line_end":534,"column_start":5,"column_end":75}},{"value":"/ allowed, and so trying to accept a new connection will fail with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284500,"byte_end":17284568,"line_start":535,"line_end":535,"column_start":5,"column_end":73}},{"value":"/ EMFILE. In some cases, it's preferable to just wait for some time, if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284573,"byte_end":17284646,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ the application will likely close some files (or connections), and try","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284651,"byte_end":17284725,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ to accept the connection again. If this option is true, the error will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284730,"byte_end":17284804,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ be logged at the error level, since it is still a big deal, and then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284809,"byte_end":17284881,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ the listener will sleep for 1 second.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284886,"byte_end":17284927,"line_start":540,"line_end":540,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284932,"byte_end":17284935,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ In other cases, hitting the max open files should be treat similarly","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17284940,"byte_end":17285012,"line_start":542,"line_end":542,"column_start":5,"column_end":77}},{"value":"/ to being out-of-memory, and simply error (and shutdown). Setting this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17285017,"byte_end":17285090,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ option to false will allow that.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17285095,"byte_end":17285131,"line_start":544,"line_end":544,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17285136,"byte_end":17285139,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ For more details see [`AddrIncoming::set_sleep_on_errors`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17285144,"byte_end":17285206,"line_start":546,"line_end":546,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5806},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17285854,"byte_end":17285866,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"AddrIncoming","qualname":"::server::tcp::AddrIncoming","value":"AddrIncoming {  }","parent":null,"children":[{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812}],"decl_id":null,"docs":" A stream of connections from binding to an address.\n","sig":null,"attributes":[{"value":"/ A stream of connections from binding to an address.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17285738,"byte_end":17285793,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17285794,"byte_end":17285842,"line_start":17,"line_end":17,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5816},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17286758,"byte_end":17286762,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"bind","qualname":"<AddrIncoming>::bind","value":"pub fn bind(&SocketAddr) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AddrIncoming` binding to provided socket address.\n","sig":null,"attributes":[{"value":"/ Creates a new `AddrIncoming` binding to provided socket address.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17286678,"byte_end":17286746,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5817},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17286938,"byte_end":17286951,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<AddrIncoming>::from_listener","value":"pub fn from_listener(TcpListener) -> crate::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AddrIncoming` from an existing `tokio::net::TcpListener`.\n","sig":null,"attributes":[{"value":"/ Creates a new `AddrIncoming` from an existing `tokio::net::TcpListener`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17286850,"byte_end":17286926,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5818},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287361,"byte_end":17287371,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<AddrIncoming>::local_addr","value":"pub fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the local address bound to this listener.\n","sig":null,"attributes":[{"value":"/ Get the local address bound to this listener.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287300,"byte_end":17287349,"line_start":61,"line_end":61,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5819},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287692,"byte_end":17287705,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<AddrIncoming>::set_keepalive","value":"pub fn set_keepalive(&mut Self, Option<Duration>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether TCP keepalive messages are enabled on accepted connections.","sig":null,"attributes":[{"value":"/ Set whether TCP keepalive messages are enabled on accepted connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287424,"byte_end":17287499,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287504,"byte_end":17287507,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, keepalive is disabled, otherwise the duration","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287512,"byte_end":17287585,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ specified will be the time to remain idle before sending TCP keepalive","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287590,"byte_end":17287664,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ probes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287669,"byte_end":17287680,"line_start":70,"line_end":70,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5820},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287912,"byte_end":17287923,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<AddrIncoming>::set_nodelay","value":"pub fn set_nodelay(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the value of `TCP_NODELAY` option for accepted connections.\n","sig":null,"attributes":[{"value":"/ Set the value of `TCP_NODELAY` option for accepted connections.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17287833,"byte_end":17287900,"line_start":76,"line_end":76,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5821},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288841,"byte_end":17288860,"line_start":97,"line_end":97,"column_start":12,"column_end":31},"name":"set_sleep_on_errors","qualname":"<AddrIncoming>::set_sleep_on_errors","value":"pub fn set_sleep_on_errors(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether to sleep on accept errors.","sig":null,"attributes":[{"value":"/ Set whether to sleep on accept errors.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288025,"byte_end":17288067,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288072,"byte_end":17288075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ A possible scenario is that the process has hit the max open files","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288080,"byte_end":17288150,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ allowed, and so trying to accept a new connection will fail with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288155,"byte_end":17288223,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ `EMFILE`. In some cases, it's preferable to just wait for some time, if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288228,"byte_end":17288303,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ the application will likely close some files (or connections), and try","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288308,"byte_end":17288382,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ to accept the connection again. If this option is `true`, the error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288387,"byte_end":17288458,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ will be logged at the `error` level, since it is still a big deal,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288463,"byte_end":17288533,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ and then the listener will sleep for 1 second.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288538,"byte_end":17288588,"line_start":90,"line_end":90,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288593,"byte_end":17288596,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ In other cases, hitting the max open files should be treat similarly","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288601,"byte_end":17288673,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ to being out-of-memory, and simply error (and shutdown). Setting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288678,"byte_end":17288746,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ this option to `false` will allow that.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288751,"byte_end":17288794,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288799,"byte_end":17288802,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17288807,"byte_end":17288829,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6119},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17292953,"byte_end":17292963,"line_start":206,"line_end":206,"column_start":20,"column_end":30},"name":"AddrStream","qualname":"::server::tcp::addr_stream::AddrStream","value":"AddrStream {  }","parent":null,"children":[{"krate":0,"index":6120},{"krate":0,"index":6121}],"decl_id":null,"docs":" A transport returned yieled by `AddrIncoming`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5869},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293390,"byte_end":17293401,"line_start":223,"line_end":223,"column_start":16,"column_end":27},"name":"remote_addr","qualname":"<AddrStream>::remote_addr","value":"pub fn remote_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote (peer) address of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the remote (peer) address of this connection.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293299,"byte_end":17293356,"line_start":221,"line_end":221,"column_start":9,"column_end":66}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293365,"byte_end":17293374,"line_start":222,"line_end":222,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5870},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293571,"byte_end":17293581,"line_start":229,"line_end":229,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<AddrStream>::into_inner","value":"pub fn into_inner(Self) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Consumes the AddrStream and returns the underlying IO object\n","sig":null,"attributes":[{"value":"/ Consumes the AddrStream and returns the underlying IO object","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293473,"byte_end":17293537,"line_start":227,"line_end":227,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293546,"byte_end":17293555,"line_start":228,"line_end":228,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5871},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293840,"byte_end":17293849,"line_start":236,"line_end":236,"column_start":16,"column_end":25},"name":"poll_peek","qualname":"<AddrStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut task::Context, &mut tokio::io::ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data\n from the queue, registering the current task for wakeup if data is\n not yet available.\n","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293645,"byte_end":17293714,"line_start":233,"line_end":233,"column_start":9,"column_end":78}},{"value":"/ from the queue, registering the current task for wakeup if data is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293723,"byte_end":17293793,"line_start":234,"line_end":234,"column_start":9,"column_end":79}},{"value":"/ not yet available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293802,"byte_end":17293824,"line_start":235,"line_end":235,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6347},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17296367,"byte_end":17296375,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Graceful","qualname":"::server::shutdown::Graceful","value":"Graceful {  }","parent":null,"children":[{"krate":0,"index":6352}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13557204,"byte_end":13557213,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6262},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17299008,"byte_end":17299023,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"GracefulWatcher","qualname":"::server::shutdown::GracefulWatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17298940,"byte_end":17298979,"line_start":97,"line_end":97,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/buf.rs","byte_start":5350,"byte_end":5357,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/buf.rs","byte_start":5759,"byte_end":5766,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","byte_start":10267,"byte_end":10277,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","byte_start":11066,"byte_end":11076,"line_start":78,"line_end":78,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":12863,"byte_end":12869,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":13041,"byte_end":13049,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":13227,"byte_end":13232,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":13834,"byte_end":13842,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":19332,"byte_end":19336,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":19961,"byte_end":19965,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":20143,"byte_end":20147,"line_start":71,"line_end":71,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":20449,"byte_end":20453,"line_start":82,"line_end":82,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":20780,"byte_end":20781,"line_start":96,"line_end":96,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":21107,"byte_end":21108,"line_start":108,"line_end":108,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/io/rewind.rs","byte_start":22584,"byte_end":22590,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/io/rewind.rs","byte_start":23368,"byte_end":23374,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/io/rewind.rs","byte_start":24272,"byte_end":24278,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/lazy.rs","byte_start":27393,"byte_end":27397,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/lazy.rs","byte_start":27644,"byte_end":27648,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/never.rs","byte_start":28602,"byte_end":28607,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/never.rs","byte_start":28720,"byte_end":28725,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/sync_wrapper.rs","byte_start":30667,"byte_end":30678,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/sync_wrapper.rs","byte_start":32977,"byte_end":32988,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","byte_start":34322,"byte_end":34328,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","byte_start":34522,"byte_end":34528,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","byte_start":34597,"byte_end":34605,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42146,"byte_end":42150,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":49902,"byte_end":49906,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":50032,"byte_end":50036,"line_start":359,"line_end":359,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":52922,"byte_end":52926,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":53589,"byte_end":53593,"line_start":465,"line_end":465,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54001,"byte_end":54005,"line_start":478,"line_end":478,"column_start":94,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54242,"byte_end":54246,"line_start":487,"line_end":487,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54461,"byte_end":54465,"line_start":498,"line_end":498,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54593,"byte_end":54597,"line_start":505,"line_end":505,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54740,"byte_end":54744,"line_start":512,"line_end":512,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54960,"byte_end":54964,"line_start":522,"line_end":522,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55099,"byte_end":55103,"line_start":529,"line_end":529,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55255,"byte_end":55259,"line_start":536,"line_end":536,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55457,"byte_end":55463,"line_start":546,"line_end":546,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57991,"byte_end":57997,"line_start":619,"line_end":619,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":62794,"byte_end":62807,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":63158,"byte_end":63171,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":65212,"byte_end":65225,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":65577,"byte_end":65590,"line_start":93,"line_end":93,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73250,"byte_end":73255,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":85870,"byte_end":85875,"line_start":487,"line_end":487,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86167,"byte_end":86172,"line_start":498,"line_end":498,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86447,"byte_end":86452,"line_start":508,"line_end":508,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86684,"byte_end":86689,"line_start":518,"line_end":518,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86804,"byte_end":86809,"line_start":525,"line_end":525,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":87254,"byte_end":87259,"line_start":540,"line_end":540,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":87755,"byte_end":87760,"line_start":554,"line_end":554,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":87896,"byte_end":87901,"line_start":560,"line_end":560,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88031,"byte_end":88036,"line_start":566,"line_end":566,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88158,"byte_end":88163,"line_start":572,"line_end":572,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88349,"byte_end":88354,"line_start":581,"line_end":581,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88410,"byte_end":88418,"line_start":585,"line_end":585,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88554,"byte_end":88562,"line_start":591,"line_end":591,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/ext.rs","byte_start":90415,"byte_end":90428,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94976,"byte_end":94977,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":95514,"byte_end":95515,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96359,"byte_end":96360,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96433,"byte_end":96434,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":98072,"byte_end":98073,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":98840,"byte_end":98841,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":100317,"byte_end":100330,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":100787,"byte_end":100800,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":101141,"byte_end":101149,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/oneshot.rs","byte_start":102152,"byte_end":102159,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":104180,"byte_end":104189,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":104736,"byte_end":104745,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":104895,"byte_end":104904,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":105084,"byte_end":105093,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":109198,"byte_end":109206,"line_start":121,"line_end":121,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":110134,"byte_end":110142,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":110375,"byte_end":110383,"line_start":161,"line_end":161,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":111238,"byte_end":111246,"line_start":191,"line_end":191,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":111401,"byte_end":111410,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":111610,"byte_end":111619,"line_start":210,"line_end":210,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":112184,"byte_end":112193,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":112397,"byte_end":112404,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113133,"byte_end":113148,"line_start":258,"line_end":258,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113299,"byte_end":113314,"line_start":264,"line_end":264,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113544,"byte_end":113545,"line_start":274,"line_end":274,"column_start":58,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":114216,"byte_end":114223,"line_start":302,"line_end":302,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":114684,"byte_end":114692,"line_start":318,"line_end":318,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16751306,"byte_end":16751310,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16777987,"byte_end":16777991,"line_start":795,"line_end":795,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16778263,"byte_end":16778267,"line_start":805,"line_end":805,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16780162,"byte_end":16780167,"line_start":867,"line_end":867,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16780805,"byte_end":16780812,"line_start":890,"line_end":890,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781202,"byte_end":16781204,"line_start":901,"line_end":901,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781476,"byte_end":16781478,"line_start":917,"line_end":917,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781537,"byte_end":16781539,"line_start":923,"line_end":923,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781780,"byte_end":16781785,"line_start":941,"line_end":941,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16800622,"byte_end":16800629,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16803832,"byte_end":16803839,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16804309,"byte_end":16804321,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2395},{"krate":0,"index":2397},{"krate":0,"index":2399},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16812485,"byte_end":16812499,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16812655,"byte_end":16812669,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16825232,"byte_end":16825242,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16838673,"byte_end":16838683,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16839483,"byte_end":16839491,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16839735,"byte_end":16839743,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16839904,"byte_end":16839910,"line_start":455,"line_end":455,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3191},{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16840292,"byte_end":16840298,"line_start":472,"line_end":472,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16840338,"byte_end":16840344,"line_start":474,"line_end":474,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16842665,"byte_end":16842671,"line_start":542,"line_end":542,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16842898,"byte_end":16842904,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16851747,"byte_end":16851754,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16856861,"byte_end":16856871,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16858550,"byte_end":16858559,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16858896,"byte_end":16858905,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16859295,"byte_end":16859304,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16859555,"byte_end":16859564,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16859923,"byte_end":16859933,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16860079,"byte_end":16860089,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16860273,"byte_end":16860283,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2629}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16864072,"byte_end":16864080,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16864343,"byte_end":16864351,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16875608,"byte_end":16875616,"line_start":357,"line_end":357,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16875850,"byte_end":16875858,"line_start":364,"line_end":364,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16876561,"byte_end":16876573,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16878818,"byte_end":16878830,"line_start":462,"line_end":462,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16879034,"byte_end":16879040,"line_start":474,"line_end":474,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16879154,"byte_end":16879160,"line_start":481,"line_end":481,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2770},{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16879824,"byte_end":16879830,"line_start":506,"line_end":506,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16880083,"byte_end":16880089,"line_start":515,"line_end":515,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16880758,"byte_end":16880766,"line_start":543,"line_end":543,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16881051,"byte_end":16881059,"line_start":554,"line_end":554,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16882943,"byte_end":16882951,"line_start":614,"line_end":614,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16883205,"byte_end":16883213,"line_start":623,"line_end":623,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16898027,"byte_end":16898033,"line_start":119,"line_end":119,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16910811,"byte_end":16910817,"line_start":440,"line_end":440,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2953},{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16912048,"byte_end":16912063,"line_start":479,"line_end":479,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16913406,"byte_end":16913420,"line_start":525,"line_end":525,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16928373,"byte_end":16928379,"line_start":889,"line_end":889,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16936737,"byte_end":16936743,"line_start":1105,"line_end":1105,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16949218,"byte_end":16949227,"line_start":1427,"line_end":1427,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/mod.rs","byte_start":16749721,"byte_end":16749726,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16736106,"byte_end":16736112,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16736453,"byte_end":16736461,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16738479,"byte_end":16738485,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16741135,"byte_end":16741141,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16742033,"byte_end":16742036,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/client.rs","byte_start":16991296,"byte_end":16991302,"line_start":57,"line_end":57,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/client.rs","byte_start":16995916,"byte_end":16995926,"line_start":207,"line_end":207,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17005479,"byte_end":17005485,"line_start":52,"line_end":52,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17006622,"byte_end":17006628,"line_start":102,"line_end":102,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17008862,"byte_end":17008868,"line_start":170,"line_end":170,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17010535,"byte_end":17010542,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17017182,"byte_end":17017190,"line_start":393,"line_end":393,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3696}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17017899,"byte_end":17017907,"line_start":422,"line_end":422,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3702}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17022233,"byte_end":17022241,"line_start":516,"line_end":516,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3708},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16718922,"byte_end":16718938,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16719188,"byte_end":16719204,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16723812,"byte_end":16723822,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16724441,"byte_end":16724448,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16725534,"byte_end":16725544,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16726996,"byte_end":16727006,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16729308,"byte_end":16729326,"line_start":414,"line_end":414,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16730554,"byte_end":16730562,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16730586,"byte_end":16730594,"line_start":459,"line_end":459,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/mod.rs","byte_start":16715646,"byte_end":16715657,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037991,"byte_end":17037995,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3934},{"krate":0,"index":3935}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038201,"byte_end":17038205,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3937}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038341,"byte_end":17038345,"line_start":77,"line_end":77,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3939}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038478,"byte_end":17038482,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3941},{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038803,"byte_end":17038819,"line_start":96,"line_end":96,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038956,"byte_end":17038972,"line_start":102,"line_end":102,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038982,"byte_end":17038993,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3947}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039128,"byte_end":17039139,"line_start":111,"line_end":111,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039718,"byte_end":17039729,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3957}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039849,"byte_end":17039858,"line_start":138,"line_end":138,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3959},{"krate":0,"index":3960}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040486,"byte_end":17040495,"line_start":156,"line_end":156,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040611,"byte_end":17040620,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3965}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040703,"byte_end":17040711,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040845,"byte_end":17040853,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3970}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17041031,"byte_end":17041042,"line_start":186,"line_end":186,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3978},{"krate":0,"index":3980},{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17043017,"byte_end":17043028,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045661,"byte_end":17045662,"line_start":335,"line_end":335,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050996,"byte_end":17051009,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051547,"byte_end":17051560,"line_start":106,"line_end":106,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17056304,"byte_end":17056317,"line_start":247,"line_end":247,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4143}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17056484,"byte_end":17056497,"line_start":253,"line_end":253,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":4148},{"krate":0,"index":4149},{"krate":0,"index":4150}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17058225,"byte_end":17058238,"line_start":321,"line_end":321,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4156}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17059394,"byte_end":17059403,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17059656,"byte_end":17059664,"line_start":371,"line_end":371,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4163}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17060474,"byte_end":17060488,"line_start":396,"line_end":396,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4168},{"krate":0,"index":4169}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17060824,"byte_end":17060836,"line_start":410,"line_end":410,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4174},{"krate":0,"index":4177},{"krate":0,"index":4179}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17061480,"byte_end":17061492,"line_start":438,"line_end":438,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4185}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17061822,"byte_end":17061834,"line_start":451,"line_end":451,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4187}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17062072,"byte_end":17062084,"line_start":463,"line_end":463,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17062347,"byte_end":17062360,"line_start":475,"line_end":475,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17063756,"byte_end":17063775,"line_start":516,"line_end":516,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17064028,"byte_end":17064047,"line_start":527,"line_end":527,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4209}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17069075,"byte_end":17069088,"line_start":669,"line_end":669,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028145,"byte_end":17028154,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030457,"byte_end":17030462,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030567,"byte_end":17030572,"line_start":212,"line_end":212,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3786}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030669,"byte_end":17030674,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3788}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17031205,"byte_end":17031218,"line_start":235,"line_end":235,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3795}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17031514,"byte_end":17031524,"line_start":250,"line_end":250,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3803}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17031647,"byte_end":17031657,"line_start":256,"line_end":256,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3806},{"krate":0,"index":3807}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033357,"byte_end":17033358,"line_start":307,"line_end":307,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3843},{"krate":0,"index":3844}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033812,"byte_end":17033813,"line_start":321,"line_end":321,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17034336,"byte_end":17034337,"line_start":337,"line_end":337,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082555,"byte_end":17082561,"line_start":54,"line_end":54,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4492}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083044,"byte_end":17083050,"line_start":69,"line_end":69,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4494}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083160,"byte_end":17083166,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083779,"byte_end":17083785,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4514},{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17100571,"byte_end":17100577,"line_start":523,"line_end":523,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17101645,"byte_end":17101651,"line_start":563,"line_end":563,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4546}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17101938,"byte_end":17101944,"line_start":574,"line_end":574,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4550}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17102108,"byte_end":17102122,"line_start":582,"line_end":582,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4552},{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17102592,"byte_end":17102606,"line_start":600,"line_end":600,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4556}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17102731,"byte_end":17102745,"line_start":606,"line_end":606,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17103290,"byte_end":17103300,"line_start":629,"line_end":629,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17104303,"byte_end":17104313,"line_start":667,"line_end":667,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17104948,"byte_end":17104958,"line_start":686,"line_end":686,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17106277,"byte_end":17106288,"line_start":737,"line_end":737,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17111088,"byte_end":17111095,"line_start":900,"line_end":900,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4620}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17111542,"byte_end":17111549,"line_start":917,"line_end":917,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4625},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4639},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4650},{"krate":0,"index":4652}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17125261,"byte_end":17125268,"line_start":1308,"line_end":1308,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4656}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135583,"byte_end":17135594,"line_start":222,"line_end":222,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136526,"byte_end":17136537,"line_start":255,"line_end":255,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17139468,"byte_end":17139479,"line_start":340,"line_end":340,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4796},{"krate":0,"index":4797},{"krate":0,"index":4798}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17139868,"byte_end":17139879,"line_start":357,"line_end":357,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17140070,"byte_end":17140086,"line_start":366,"line_end":366,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4804},{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17140298,"byte_end":17140314,"line_start":377,"line_end":377,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4808}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141366,"byte_end":17141382,"line_start":409,"line_end":409,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4813}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141556,"byte_end":17141572,"line_start":416,"line_end":416,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4816}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141736,"byte_end":17141746,"line_start":426,"line_end":426,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4823}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17144500,"byte_end":17144510,"line_start":492,"line_end":492,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4829},{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17145484,"byte_end":17145494,"line_start":520,"line_end":520,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4834}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17145743,"byte_end":17145750,"line_start":532,"line_end":532,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4855},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17159882,"byte_end":17159896,"line_start":930,"line_end":930,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":4866}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17160667,"byte_end":17160681,"line_start":950,"line_end":950,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4869}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17160855,"byte_end":17160866,"line_start":958,"line_end":958,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4873},{"krate":0,"index":4874}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17161764,"byte_end":17161775,"line_start":988,"line_end":988,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17161836,"byte_end":17161846,"line_start":991,"line_end":991,"column_start":39,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17162029,"byte_end":17162039,"line_start":1000,"line_end":1000,"column_start":57,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17162207,"byte_end":17162214,"line_start":1009,"line_end":1009,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17162254,"byte_end":17162268,"line_start":1012,"line_end":1012,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17164153,"byte_end":17164159,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4933},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4938},{"krate":0,"index":4941},{"krate":0,"index":4944}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17165972,"byte_end":17165987,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4950}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17166535,"byte_end":17166550,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17166837,"byte_end":17166845,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4965},{"krate":0,"index":4967},{"krate":0,"index":4968}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17167685,"byte_end":17167693,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17167938,"byte_end":17167946,"line_start":189,"line_end":189,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4981}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17168358,"byte_end":17168366,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4998}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17178144,"byte_end":17178150,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5111}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17178251,"byte_end":17178255,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17179441,"byte_end":17179445,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17184337,"byte_end":17184347,"line_start":281,"line_end":281,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17185890,"byte_end":17185899,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5133},{"krate":0,"index":5134}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17189669,"byte_end":17189678,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5137}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17191207,"byte_end":17191211,"line_start":476,"line_end":476,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5141}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17191617,"byte_end":17191623,"line_start":493,"line_end":493,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17192002,"byte_end":17192008,"line_start":511,"line_end":511,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5156},{"krate":0,"index":5157}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17192125,"byte_end":17192131,"line_start":518,"line_end":518,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17192235,"byte_end":17192241,"line_start":524,"line_end":524,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193029,"byte_end":17193035,"line_start":546,"line_end":546,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5166}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193536,"byte_end":17193557,"line_start":568,"line_end":568,"column_start":19,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193584,"byte_end":17193605,"line_start":570,"line_end":570,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5178}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193755,"byte_end":17193763,"line_start":576,"line_end":576,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5181},{"krate":0,"index":5182}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17196641,"byte_end":17196649,"line_start":655,"line_end":655,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5188},{"krate":0,"index":5189}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17197325,"byte_end":17197333,"line_start":675,"line_end":675,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17197865,"byte_end":17197875,"line_start":693,"line_end":693,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5200}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17198152,"byte_end":17198162,"line_start":704,"line_end":704,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5203}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17198471,"byte_end":17198481,"line_start":717,"line_end":717,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5208},{"krate":0,"index":5209}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17200221,"byte_end":17200228,"line_start":774,"line_end":774,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208453,"byte_end":17208460,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208753,"byte_end":17208760,"line_start":42,"line_end":42,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5270}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216941,"byte_end":17216947,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216985,"byte_end":17216991,"line_start":61,"line_end":61,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217820,"byte_end":17217830,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17225701,"byte_end":17225709,"line_start":240,"line_end":240,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5454}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17225939,"byte_end":17225947,"line_start":250,"line_end":250,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226943,"byte_end":17226947,"line_start":279,"line_end":279,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5458}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227701,"byte_end":17227705,"line_start":302,"line_end":302,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5470},{"krate":0,"index":5472},{"krate":0,"index":5476},{"krate":0,"index":5478},{"krate":0,"index":5480},{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5485},{"krate":0,"index":5490}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17242972,"byte_end":17242982,"line_start":735,"line_end":735,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5504},{"krate":0,"index":5505},{"krate":0,"index":5507},{"krate":0,"index":5510},{"krate":0,"index":5511}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17249373,"byte_end":17249383,"line_start":905,"line_end":905,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5517},{"krate":0,"index":5518}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17251163,"byte_end":17251173,"line_start":952,"line_end":952,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5522}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17251435,"byte_end":17251449,"line_start":964,"line_end":964,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17251944,"byte_end":17251949,"line_start":984,"line_end":984,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5529},{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17252506,"byte_end":17252511,"line_start":1006,"line_end":1006,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5538}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17253789,"byte_end":17253799,"line_start":1045,"line_end":1045,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5546},{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17254541,"byte_end":17254549,"line_start":1067,"line_end":1067,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5551}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17254738,"byte_end":17254746,"line_start":1074,"line_end":1074,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5556}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17254922,"byte_end":17254930,"line_start":1081,"line_end":1081,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5564}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17256086,"byte_end":17256097,"line_start":1119,"line_end":1119,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5571},{"krate":0,"index":5572}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17258197,"byte_end":17258208,"line_start":1176,"line_end":1176,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5636},{"krate":0,"index":5637}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17259843,"byte_end":17259853,"line_start":1224,"line_end":1224,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5644}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17260173,"byte_end":17260183,"line_start":1235,"line_end":1235,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5653},{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17262875,"byte_end":17262896,"line_start":1306,"line_end":1306,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17263539,"byte_end":17263560,"line_start":1324,"line_end":1324,"column_start":33,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5674},{"krate":0,"index":5675}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17267733,"byte_end":17267739,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5698}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17268062,"byte_end":17268068,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6111},{"krate":0,"index":6113},{"krate":0,"index":6114}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17269240,"byte_end":17269246,"line_start":107,"line_end":107,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6118}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17269593,"byte_end":17269599,"line_start":117,"line_end":117,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271689,"byte_end":17271695,"line_start":175,"line_end":175,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5715},{"krate":0,"index":5716}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17272410,"byte_end":17272416,"line_start":194,"line_end":194,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5720}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17272847,"byte_end":17272854,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5724},{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5728},{"krate":0,"index":5729},{"krate":0,"index":5730},{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5736},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5741},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17283742,"byte_end":17283749,"line_start":515,"line_end":515,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17286059,"byte_end":17286071,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5814},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17291248,"byte_end":17291260,"line_start":156,"line_end":156,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5826}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17292184,"byte_end":17292196,"line_start":182,"line_end":182,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5829}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293089,"byte_end":17293099,"line_start":213,"line_end":213,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17294081,"byte_end":17294091,"line_start":245,"line_end":245,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5873}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17294372,"byte_end":17294382,"line_start":256,"line_end":256,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877},{"krate":0,"index":5878},{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17295703,"byte_end":17295713,"line_start":297,"line_end":297,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5881}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17296773,"byte_end":17296781,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6241}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17297115,"byte_end":17297123,"line_start":50,"line_end":50,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6250},{"krate":0,"index":6251}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17299068,"byte_end":17299083,"line_start":101,"line_end":101,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6256},{"krate":0,"index":6257}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2619,"byte_end":2623,"line_start":77,"line_end":77,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":437}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2676,"byte_end":2678,"line_start":82,"line_end":82,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":835}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2688,"byte_end":2695,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":839}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2705,"byte_end":2712,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1114}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":2856,"byte_end":2862,"line_start":97,"line_end":97,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3757}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024550,"byte_end":17024557,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3761}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17027408,"byte_end":17027411,"line_start":91,"line_end":91,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3868}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024766,"byte_end":17024770,"line_start":64,"line_end":64,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4657}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/mod.rs","byte_start":17024827,"byte_end":17024834,"line_start":67,"line_end":67,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5215}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/lib.rs","byte_start":3033,"byte_end":3039,"line_start":106,"line_end":106,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5363}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215203,"byte_end":17215209,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5364}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/mod.rs","byte_start":17215219,"byte_end":17215223,"line_start":151,"line_end":151,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5416}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/buf.rs","byte_start":5350,"byte_end":5357,"line_start":10,"line_end":10,"column_start":14,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/buf.rs","byte_start":5759,"byte_end":5766,"line_start":30,"line_end":30,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","byte_start":10267,"byte_end":10277,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/date.rs","byte_start":11066,"byte_end":11076,"line_start":78,"line_end":78,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":9294}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":12863,"byte_end":12869,"line_start":40,"line_end":40,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":13041,"byte_end":13049,"line_start":47,"line_end":47,"column_start":17,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":13227,"byte_end":13232,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/drain.rs","byte_start":13834,"byte_end":13842,"line_start":76,"line_end":76,"column_start":24,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18729,"byte_end":18734,"line_start":19,"line_end":19,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":218}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":18946,"byte_end":18951,"line_start":24,"line_end":24,"column_start":75,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":19332,"byte_end":19336,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":19961,"byte_end":19965,"line_start":64,"line_end":64,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":20143,"byte_end":20147,"line_start":71,"line_end":71,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":218}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":20449,"byte_end":20453,"line_start":82,"line_end":82,"column_start":51,"column_end":55},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":20780,"byte_end":20781,"line_start":96,"line_end":96,"column_start":40,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":218}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/exec.rs","byte_start":21107,"byte_end":21108,"line_start":108,"line_end":108,"column_start":51,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/io/rewind.rs","byte_start":22584,"byte_end":22590,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/io/rewind.rs","byte_start":23368,"byte_end":23374,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1302},"to":{"krate":28,"index":227}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/io/rewind.rs","byte_start":24272,"byte_end":24278,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1302},"to":{"krate":28,"index":306}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/lazy.rs","byte_start":26761,"byte_end":26767,"line_start":5,"line_end":5,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":12611},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/lazy.rs","byte_start":27393,"byte_end":27397,"line_start":38,"line_end":38,"column_start":24,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1309},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/lazy.rs","byte_start":27644,"byte_end":27648,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/never.rs","byte_start":28602,"byte_end":28607,"line_start":11,"line_end":11,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/never.rs","byte_start":28720,"byte_end":28725,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1403},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/sync_wrapper.rs","byte_start":30667,"byte_end":30678,"line_start":46,"line_end":46,"column_start":9,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/sync_wrapper.rs","byte_start":32977,"byte_end":32988,"line_start":110,"line_end":110,"column_start":31,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":359},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","byte_start":34322,"byte_end":34328,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","byte_start":34522,"byte_end":34528,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/common/watch.rs","byte_start":34597,"byte_end":34605,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":42146,"byte_end":42150,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":49902,"byte_end":49906,"line_start":351,"line_end":351,"column_start":18,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":50032,"byte_end":50036,"line_start":359,"line_end":359,"column_start":19,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":547},"to":{"krate":43,"index":406}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":52922,"byte_end":52926,"line_start":440,"line_end":440,"column_start":21,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":53589,"byte_end":53593,"line_start":465,"line_end":465,"column_start":17,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":547},"to":{"krate":37,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54001,"byte_end":54005,"line_start":478,"line_end":478,"column_start":94,"column_end":98},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54242,"byte_end":54246,"line_start":487,"line_end":487,"column_start":22,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54461,"byte_end":54465,"line_start":498,"line_end":498,"column_start":24,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54593,"byte_end":54597,"line_start":505,"line_end":505,"column_start":30,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54740,"byte_end":54744,"line_start":512,"line_end":512,"column_start":35,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":54960,"byte_end":54964,"line_start":522,"line_end":522,"column_start":23,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55099,"byte_end":55103,"line_start":529,"line_end":529,"column_start":29,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55255,"byte_end":55259,"line_start":536,"line_end":536,"column_start":34,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":55457,"byte_end":55463,"line_start":546,"line_end":546,"column_start":6,"column_end":12},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/body.rs","byte_start":57991,"byte_end":57997,"line_start":619,"line_end":619,"column_start":21,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":576},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":62794,"byte_end":62807,"line_start":7,"line_end":7,"column_start":28,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":63158,"byte_end":63171,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":65212,"byte_end":65225,"line_start":83,"line_end":83,"column_start":21,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/body/length.rs","byte_start":65577,"byte_end":65590,"line_start":93,"line_end":93,"column_start":23,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":73250,"byte_end":73255,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":85870,"byte_end":85875,"line_start":487,"line_end":487,"column_start":21,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86167,"byte_end":86172,"line_start":498,"line_end":498,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86447,"byte_end":86452,"line_start":508,"line_end":508,"column_start":19,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":719},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86684,"byte_end":86689,"line_start":518,"line_end":518,"column_start":22,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":86804,"byte_end":86809,"line_start":525,"line_end":525,"column_start":6,"column_end":11},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":87254,"byte_end":87259,"line_start":540,"line_end":540,"column_start":32,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1506},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":87755,"byte_end":87760,"line_start":554,"line_end":554,"column_start":44,"column_end":49},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1506},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":87896,"byte_end":87901,"line_start":560,"line_end":560,"column_start":48,"column_end":53},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1506},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88031,"byte_end":88036,"line_start":566,"line_end":566,"column_start":38,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1506},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88158,"byte_end":88163,"line_start":572,"line_end":572,"column_start":43,"column_end":48},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1506},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88285,"byte_end":88289,"line_start":579,"line_end":579,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":803}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88292,"byte_end":88296,"line_start":579,"line_end":579,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":803}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88349,"byte_end":88354,"line_start":581,"line_end":581,"column_start":25,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":803}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88410,"byte_end":88418,"line_start":585,"line_end":585,"column_start":23,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1564},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/error.rs","byte_start":88554,"byte_end":88562,"line_start":591,"line_end":591,"column_start":19,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1564},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/ext.rs","byte_start":90415,"byte_end":90428,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94188,"byte_end":94194,"line_start":8,"line_end":8,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":888},"to":{"krate":0,"index":867}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":94976,"byte_end":94977,"line_start":29,"line_end":29,"column_start":37,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":875},"to":{"krate":0,"index":867}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/http.rs","byte_start":95514,"byte_end":95515,"line_start":49,"line_end":49,"column_start":40,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":884},"to":{"krate":0,"index":888}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":95991,"byte_end":95997,"line_start":12,"line_end":12,"column_start":49,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":998},"to":{"krate":0,"index":924}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96359,"byte_end":96360,"line_start":21,"line_end":21,"column_start":53,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":932},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":96433,"byte_end":96434,"line_start":23,"line_end":23,"column_start":44,"column_end":45},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":924}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":97014,"byte_end":97020,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":998},"to":{"krate":0,"index":942}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":98072,"byte_end":98073,"line_start":66,"line_end":66,"column_start":69,"column_end":70},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":954},"to":{"krate":0,"index":942}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":98840,"byte_end":98841,"line_start":93,"line_end":93,"column_start":67,"column_end":68},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":972},"to":{"krate":0,"index":998}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":100317,"byte_end":100330,"line_start":152,"line_end":152,"column_start":62,"column_end":75},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1575},"to":{"krate":48,"index":13}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":100787,"byte_end":100800,"line_start":171,"line_end":171,"column_start":24,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1575},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/make.rs","byte_start":101141,"byte_end":101149,"line_start":186,"line_end":186,"column_start":23,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1001},"to":{"krate":0,"index":1000}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/oneshot.rs","byte_start":102152,"byte_end":102159,"line_start":44,"line_end":44,"column_start":25,"column_end":32},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1583},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":104180,"byte_end":104189,"line_start":45,"line_end":45,"column_start":9,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1065},"to":{"krate":48,"index":13}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":104736,"byte_end":104745,"line_start":66,"line_end":66,"column_start":27,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":104895,"byte_end":104904,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/service/util.rs","byte_start":105084,"byte_end":105093,"line_start":84,"line_end":84,"column_start":21,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1065},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":109198,"byte_end":109206,"line_start":121,"line_end":121,"column_start":6,"column_end":14},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":110134,"byte_end":110142,"line_start":151,"line_end":151,"column_start":20,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1165},"to":{"krate":28,"index":227}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":110375,"byte_end":110383,"line_start":161,"line_end":161,"column_start":21,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1165},"to":{"krate":28,"index":306}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":111238,"byte_end":111246,"line_start":191,"line_end":191,"column_start":21,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":111401,"byte_end":111410,"line_start":199,"line_end":199,"column_start":6,"column_end":15},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":111610,"byte_end":111619,"line_start":210,"line_end":210,"column_start":17,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":112184,"byte_end":112193,"line_start":225,"line_end":225,"column_start":21,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":112397,"byte_end":112404,"line_start":234,"line_end":234,"column_start":6,"column_end":13},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113133,"byte_end":113148,"line_start":258,"line_end":258,"column_start":23,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1740},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113299,"byte_end":113314,"line_start":264,"line_end":264,"column_start":19,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1740},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113364,"byte_end":113373,"line_start":268,"line_end":268,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":28,"index":227},"to":{"krate":0,"index":1204}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113376,"byte_end":113386,"line_start":268,"line_end":268,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":28,"index":306},"to":{"krate":0,"index":1204}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113389,"byte_end":113394,"line_start":268,"line_end":268,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":3045},"to":{"krate":0,"index":1204}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":113544,"byte_end":113545,"line_start":274,"line_end":274,"column_start":58,"column_end":59},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1207},"to":{"krate":0,"index":1204}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":114216,"byte_end":114223,"line_start":302,"line_end":302,"column_start":34,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":20,"index":1358},"to":{"krate":0,"index":1217}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/upgrade.rs","byte_start":114684,"byte_end":114692,"line_start":318,"line_end":318,"column_start":34,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":20,"index":1491},"to":{"krate":0,"index":1217}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16751306,"byte_end":16751310,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16777987,"byte_end":16777991,"line_start":795,"line_end":795,"column_start":35,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16778263,"byte_end":16778267,"line_start":805,"line_end":805,"column_start":32,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16780162,"byte_end":16780167,"line_start":867,"line_end":867,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16780805,"byte_end":16780812,"line_start":890,"line_end":890,"column_start":21,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2280},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781202,"byte_end":16781204,"line_start":901,"line_end":901,"column_start":39,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3060},"to":{"krate":2,"index":3154}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781476,"byte_end":16781478,"line_start":917,"line_end":917,"column_start":18,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3060},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781537,"byte_end":16781539,"line_start":923,"line_end":923,"column_start":6,"column_end":8},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/conn.rs","byte_start":16781780,"byte_end":16781785,"line_start":941,"line_end":941,"column_start":6,"column_end":11},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16800622,"byte_end":16800629,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16803832,"byte_end":16803839,"line_start":164,"line_end":164,"column_start":21,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3072},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16804309,"byte_end":16804321,"line_start":182,"line_end":182,"column_start":6,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16812485,"byte_end":16812499,"line_start":417,"line_end":417,"column_start":23,"column_end":37},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3133},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/decode.rs","byte_start":16812655,"byte_end":16812669,"line_start":423,"line_end":423,"column_start":19,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3133},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16825232,"byte_end":16825242,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16838673,"byte_end":16838683,"line_start":407,"line_end":407,"column_start":30,"column_end":40},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16839483,"byte_end":16839491,"line_start":434,"line_end":434,"column_start":13,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16839735,"byte_end":16839743,"line_start":444,"line_end":444,"column_start":22,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2536},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16839904,"byte_end":16839910,"line_start":455,"line_end":455,"column_start":16,"column_end":22},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16840292,"byte_end":16840298,"line_start":472,"line_end":472,"column_start":42,"column_end":48},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3140},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16840338,"byte_end":16840344,"line_start":474,"line_end":474,"column_start":30,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3140},"to":{"krate":0,"index":2496}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16842665,"byte_end":16842671,"line_start":542,"line_end":542,"column_start":13,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/dispatch.rs","byte_start":16842898,"byte_end":16842904,"line_start":552,"line_end":552,"column_start":26,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3147},"to":{"krate":0,"index":2496}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16851747,"byte_end":16851754,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16856861,"byte_end":16856871,"line_start":218,"line_end":218,"column_start":17,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3232},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16858550,"byte_end":16858559,"line_start":279,"line_end":279,"column_start":6,"column_end":15},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16858896,"byte_end":16858905,"line_start":292,"line_end":292,"column_start":14,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3275},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16859295,"byte_end":16859304,"line_start":310,"line_end":310,"column_start":21,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16859555,"byte_end":16859564,"line_start":319,"line_end":319,"column_start":21,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3275},"to":{"krate":2,"index":9294}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16859923,"byte_end":16859933,"line_start":330,"line_end":330,"column_start":26,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16860079,"byte_end":16860089,"line_start":338,"line_end":338,"column_start":32,"column_end":42},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/encode.rs","byte_start":16860273,"byte_end":16860283,"line_start":346,"line_end":346,"column_start":62,"column_end":72},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16864072,"byte_end":16864080,"line_start":48,"line_end":48,"column_start":27,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16864343,"byte_end":16864351,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16875608,"byte_end":16875616,"line_start":357,"line_end":357,"column_start":29,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16875850,"byte_end":16875858,"line_start":364,"line_end":364,"column_start":24,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2707},"to":{"krate":0,"index":2751}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16876561,"byte_end":16876573,"line_start":391,"line_end":391,"column_start":6,"column_end":18},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16878818,"byte_end":16878830,"line_start":462,"line_end":462,"column_start":18,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16879034,"byte_end":16879040,"line_start":474,"line_end":474,"column_start":22,"column_end":28},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16879154,"byte_end":16879160,"line_start":481,"line_end":481,"column_start":6,"column_end":12},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16879824,"byte_end":16879830,"line_start":506,"line_end":506,"column_start":37,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3297},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16880083,"byte_end":16880089,"line_start":515,"line_end":515,"column_start":30,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3297},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16880758,"byte_end":16880766,"line_start":543,"line_end":543,"column_start":14,"column_end":22},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16881051,"byte_end":16881059,"line_start":554,"line_end":554,"column_start":9,"column_end":17},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16882943,"byte_end":16882951,"line_start":614,"line_end":614,"column_start":29,"column_end":37},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2780},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/io.rs","byte_start":16883205,"byte_end":16883213,"line_start":623,"line_end":623,"column_start":22,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2780},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16898027,"byte_end":16898033,"line_start":119,"line_end":119,"column_start":27,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2926},"to":{"krate":0,"index":3001}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16910811,"byte_end":16910817,"line_start":440,"line_end":440,"column_start":6,"column_end":12},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16912048,"byte_end":16912063,"line_start":479,"line_end":479,"column_start":35,"column_end":50},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2947},"to":{"krate":0,"index":2969}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16913406,"byte_end":16913420,"line_start":525,"line_end":525,"column_start":35,"column_end":49},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2954},"to":{"krate":0,"index":2969}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16928373,"byte_end":16928379,"line_start":889,"line_end":889,"column_start":27,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2925},"to":{"krate":0,"index":3001}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16936737,"byte_end":16936743,"line_start":1105,"line_end":1105,"column_start":6,"column_end":12},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/role.rs","byte_start":16949218,"byte_end":16949227,"line_start":1427,"line_end":1427,"column_start":25,"column_end":34},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2992},"to":{"krate":2,"index":9294}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h1/mod.rs","byte_start":16749721,"byte_end":16749726,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16736106,"byte_end":16736112,"line_start":198,"line_end":198,"column_start":6,"column_end":12},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16736453,"byte_end":16736461,"line_start":214,"line_end":214,"column_start":6,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16738479,"byte_end":16738485,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16741135,"byte_end":16741141,"line_start":372,"line_end":372,"column_start":6,"column_end":12},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/ping.rs","byte_start":16742033,"byte_end":16742036,"line_start":407,"line_end":407,"column_start":6,"column_end":9},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/client.rs","byte_start":16991296,"byte_end":16991302,"line_start":57,"line_end":57,"column_start":18,"column_end":24},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3510},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/client.rs","byte_start":16995916,"byte_end":16995926,"line_start":207,"line_end":207,"column_start":20,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17005479,"byte_end":17005485,"line_start":52,"line_end":52,"column_start":18,"column_end":24},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17006622,"byte_end":17006628,"line_start":102,"line_end":102,"column_start":18,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17008862,"byte_end":17008868,"line_start":170,"line_end":170,"column_start":29,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8989},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17010535,"byte_end":17010542,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17017182,"byte_end":17017190,"line_start":393,"line_end":393,"column_start":12,"column_end":20},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17017899,"byte_end":17017907,"line_start":422,"line_end":422,"column_start":15,"column_end":23},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/server.rs","byte_start":17022233,"byte_end":17022241,"line_start":516,"line_end":516,"column_start":26,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8736},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16718922,"byte_end":16718938,"line_start":99,"line_end":99,"column_start":9,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16719188,"byte_end":16719204,"line_start":112,"line_end":112,"column_start":20,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":8369},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16723812,"byte_end":16723822,"line_start":224,"line_end":224,"column_start":32,"column_end":42},"kind":{"Impl":{"id":157}},"from":{"krate":49,"index":11547},"to":{"krate":0,"index":1967}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16724441,"byte_end":16724448,"line_start":249,"line_end":249,"column_start":22,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1976},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16725534,"byte_end":16725544,"line_start":296,"line_end":296,"column_start":23,"column_end":33},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1993},"to":{"krate":28,"index":227}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16726996,"byte_end":16727006,"line_start":336,"line_end":336,"column_start":24,"column_end":34},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1993},"to":{"krate":28,"index":306}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16729308,"byte_end":16729326,"line_start":414,"line_end":414,"column_start":9,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16730554,"byte_end":16730562,"line_start":457,"line_end":457,"column_start":25,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2021},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/h2/mod.rs","byte_start":16730586,"byte_end":16730594,"line_start":459,"line_end":459,"column_start":17,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2021},"to":{"krate":22,"index":42}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/proto/mod.rs","byte_start":16715646,"byte_end":16715657,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17037991,"byte_end":17037995,"line_start":60,"line_end":60,"column_start":6,"column_end":10},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038201,"byte_end":17038205,"line_start":71,"line_end":71,"column_start":21,"column_end":25},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4246},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038341,"byte_end":17038345,"line_start":77,"line_end":77,"column_start":23,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4246},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038478,"byte_end":17038482,"line_start":83,"line_end":83,"column_start":18,"column_end":22},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4246},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038803,"byte_end":17038819,"line_start":96,"line_end":96,"column_start":23,"column_end":39},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4264},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038956,"byte_end":17038972,"line_start":102,"line_end":102,"column_start":16,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4264},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17038982,"byte_end":17038993,"line_start":104,"line_end":104,"column_start":6,"column_end":17},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039128,"byte_end":17039139,"line_start":111,"line_end":111,"column_start":24,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4260},"to":{"krate":48,"index":13}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039718,"byte_end":17039729,"line_start":132,"line_end":132,"column_start":21,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17039849,"byte_end":17039858,"line_start":138,"line_end":138,"column_start":17,"column_end":26},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3931},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040486,"byte_end":17040495,"line_start":156,"line_end":156,"column_start":21,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3931},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040611,"byte_end":17040620,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3931},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040703,"byte_end":17040711,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3929},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17040845,"byte_end":17040853,"line_start":176,"line_end":176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3929},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17041031,"byte_end":17041042,"line_start":186,"line_end":186,"column_start":6,"column_end":17},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17043017,"byte_end":17043028,"line_start":248,"line_end":248,"column_start":19,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3971},"to":{"krate":2,"index":7600}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/dns.rs","byte_start":17045661,"byte_end":17045662,"line_start":335,"line_end":335,"column_start":25,"column_end":26},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4013},"to":{"krate":0,"index":4006}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17050996,"byte_end":17051009,"line_start":87,"line_end":87,"column_start":6,"column_end":19},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17051547,"byte_end":17051560,"line_start":106,"line_end":106,"column_start":9,"column_end":22},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17056304,"byte_end":17056317,"line_start":247,"line_end":247,"column_start":36,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4269},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17056484,"byte_end":17056497,"line_start":253,"line_end":253,"column_start":41,"column_end":54},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4269},"to":{"krate":48,"index":13}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17058225,"byte_end":17058238,"line_start":321,"line_end":321,"column_start":9,"column_end":22},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17059394,"byte_end":17059403,"line_start":360,"line_end":360,"column_start":21,"column_end":30},"kind":{"Impl":{"id":187}},"from":{"krate":28,"index":6100},"to":{"krate":0,"index":3768}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17059656,"byte_end":17059664,"line_start":371,"line_end":371,"column_start":6,"column_end":14},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17060474,"byte_end":17060488,"line_start":396,"line_end":396,"column_start":29,"column_end":43},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":8124},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17060824,"byte_end":17060836,"line_start":410,"line_end":410,"column_start":6,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17061480,"byte_end":17061492,"line_start":438,"line_end":438,"column_start":21,"column_end":33},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4170},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17061822,"byte_end":17061834,"line_start":451,"line_end":451,"column_start":23,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4170},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17062072,"byte_end":17062084,"line_start":463,"line_end":463,"column_start":19,"column_end":31},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4170},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17062347,"byte_end":17062360,"line_start":475,"line_end":475,"column_start":10,"column_end":23},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17063756,"byte_end":17063775,"line_start":516,"line_end":516,"column_start":6,"column_end":25},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17064028,"byte_end":17064047,"line_start":527,"line_end":527,"column_start":6,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/http.rs","byte_start":17069075,"byte_end":17069088,"line_start":669,"line_end":669,"column_start":6,"column_end":19},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17028145,"byte_end":17028154,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030457,"byte_end":17030462,"line_start":206,"line_end":206,"column_start":6,"column_end":11},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030567,"byte_end":17030572,"line_start":212,"line_end":212,"column_start":16,"column_end":21},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3770},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030669,"byte_end":17030674,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3770},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030808,"byte_end":17030812,"line_start":224,"line_end":224,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":3789}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17030815,"byte_end":17030819,"line_start":224,"line_end":224,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":3789}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17031205,"byte_end":17031218,"line_start":235,"line_end":235,"column_start":24,"column_end":37},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4317},"to":{"krate":0,"index":3789}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17031514,"byte_end":17031524,"line_start":250,"line_end":250,"column_start":26,"column_end":36},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3796},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17031647,"byte_end":17031657,"line_start":256,"line_end":256,"column_start":24,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3796},"to":{"krate":0,"index":3789}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032770,"byte_end":17032776,"line_start":292,"line_end":292,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":3855},"to":{"krate":0,"index":3832}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17032779,"byte_end":17032784,"line_start":292,"line_end":292,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":3832}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033357,"byte_end":17033358,"line_start":307,"line_end":307,"column_start":28,"column_end":29},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3841},"to":{"krate":0,"index":3832}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17033812,"byte_end":17033813,"line_start":321,"line_end":321,"column_start":31,"column_end":32},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3846},"to":{"krate":0,"index":3835}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/connect/mod.rs","byte_start":17034336,"byte_end":17034337,"line_start":337,"line_end":337,"column_start":27,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3853},"to":{"krate":0,"index":3855}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17082555,"byte_end":17082561,"line_start":54,"line_end":54,"column_start":6,"column_end":12},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083044,"byte_end":17083050,"line_start":69,"line_end":69,"column_start":18,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083160,"byte_end":17083166,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17083779,"byte_end":17083785,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17100571,"byte_end":17100577,"line_start":523,"line_end":523,"column_start":51,"column_end":57},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4482},"to":{"krate":48,"index":13}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17101645,"byte_end":17101651,"line_start":563,"line_end":563,"column_start":29,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17101938,"byte_end":17101944,"line_start":574,"line_end":574,"column_start":27,"column_end":33},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17102108,"byte_end":17102122,"line_start":582,"line_end":582,"column_start":6,"column_end":20},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17102592,"byte_end":17102606,"line_start":600,"line_end":600,"column_start":21,"column_end":35},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4489},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17102731,"byte_end":17102745,"line_start":606,"line_end":606,"column_start":17,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4489},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17103290,"byte_end":17103300,"line_start":629,"line_end":629,"column_start":9,"column_end":19},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17104303,"byte_end":17104313,"line_start":667,"line_end":667,"column_start":29,"column_end":39},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17104948,"byte_end":17104958,"line_start":686,"line_end":686,"column_start":22,"column_end":32},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4560},"to":{"krate":0,"index":5085}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17106277,"byte_end":17106288,"line_start":737,"line_end":737,"column_start":9,"column_end":20},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17111088,"byte_end":17111095,"line_start":900,"line_end":900,"column_start":18,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17111542,"byte_end":17111549,"line_start":917,"line_end":917,"column_start":6,"column_end":13},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/client.rs","byte_start":17125261,"byte_end":17125268,"line_start":1308,"line_end":1308,"column_start":21,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5301},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17135583,"byte_end":17135594,"line_start":222,"line_end":222,"column_start":9,"column_end":20},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17136526,"byte_end":17136537,"line_start":255,"line_end":255,"column_start":9,"column_end":20},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17139468,"byte_end":17139479,"line_start":340,"line_end":340,"column_start":33,"column_end":44},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4757},"to":{"krate":48,"index":13}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17139868,"byte_end":17139879,"line_start":357,"line_end":357,"column_start":24,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4757},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17140070,"byte_end":17140086,"line_start":366,"line_end":366,"column_start":9,"column_end":25},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17140298,"byte_end":17140314,"line_start":377,"line_end":377,"column_start":9,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141366,"byte_end":17141382,"line_start":409,"line_end":409,"column_start":24,"column_end":40},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4773},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141556,"byte_end":17141572,"line_start":416,"line_end":416,"column_start":19,"column_end":35},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4773},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17141736,"byte_end":17141746,"line_start":426,"line_end":426,"column_start":12,"column_end":22},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17144500,"byte_end":17144510,"line_start":492,"line_end":492,"column_start":23,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4760},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17145484,"byte_end":17145494,"line_start":520,"line_end":520,"column_start":27,"column_end":37},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4760},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17145743,"byte_end":17145750,"line_start":532,"line_end":532,"column_start":6,"column_end":13},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17159882,"byte_end":17159896,"line_start":930,"line_end":930,"column_start":17,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4764},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17160667,"byte_end":17160681,"line_start":950,"line_end":950,"column_start":21,"column_end":35},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4764},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17160855,"byte_end":17160866,"line_start":958,"line_end":958,"column_start":23,"column_end":34},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":7618},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17161670,"byte_end":17161674,"line_start":984,"line_end":984,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":4875}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17161700,"byte_end":17161704,"line_start":985,"line_end":985,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":4876}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17161707,"byte_end":17161711,"line_start":985,"line_end":985,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":4876}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17161764,"byte_end":17161775,"line_start":988,"line_end":988,"column_start":34,"column_end":45},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4757},"to":{"krate":0,"index":4876}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17161836,"byte_end":17161846,"line_start":991,"line_end":991,"column_start":39,"column_end":49},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4760},"to":{"krate":0,"index":4875}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17162029,"byte_end":17162039,"line_start":1000,"line_end":1000,"column_start":57,"column_end":67},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4760},"to":{"krate":0,"index":4876}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17162207,"byte_end":17162214,"line_start":1009,"line_end":1009,"column_start":25,"column_end":32},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5307},"to":{"krate":0,"index":4876}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/conn.rs","byte_start":17162254,"byte_end":17162268,"line_start":1012,"line_end":1012,"column_start":21,"column_end":35},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4764},"to":{"krate":0,"index":4875}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17164153,"byte_end":17164159,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17165972,"byte_end":17165987,"line_start":115,"line_end":115,"column_start":12,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17166535,"byte_end":17166550,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4925},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17166837,"byte_end":17166845,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17167685,"byte_end":17167693,"line_start":179,"line_end":179,"column_start":21,"column_end":29},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17167938,"byte_end":17167946,"line_start":189,"line_end":189,"column_start":21,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4973},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/dispatch.rs","byte_start":17168358,"byte_end":17168366,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17175412,"byte_end":17175417,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3045},"to":{"krate":0,"index":5085}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17175420,"byte_end":17175424,"line_start":30,"line_end":30,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3004},"to":{"krate":0,"index":5085}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17175427,"byte_end":17175432,"line_start":30,"line_end":30,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":5085}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17178144,"byte_end":17178150,"line_start":98,"line_end":98,"column_start":6,"column_end":12},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17178251,"byte_end":17178255,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17179441,"byte_end":17179445,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17184337,"byte_end":17184347,"line_start":281,"line_end":281,"column_start":28,"column_end":38},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17185890,"byte_end":17185899,"line_start":323,"line_end":323,"column_start":19,"column_end":28},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17189669,"byte_end":17189678,"line_start":429,"line_end":429,"column_start":9,"column_end":18},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17191207,"byte_end":17191211,"line_start":476,"line_end":476,"column_start":19,"column_end":23},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5082},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17191617,"byte_end":17191623,"line_start":493,"line_end":493,"column_start":19,"column_end":25},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17192002,"byte_end":17192008,"line_start":511,"line_end":511,"column_start":29,"column_end":35},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5142},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17192125,"byte_end":17192131,"line_start":518,"line_end":518,"column_start":32,"column_end":38},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5142},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17192235,"byte_end":17192241,"line_start":524,"line_end":524,"column_start":28,"column_end":34},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5142},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193029,"byte_end":17193035,"line_start":546,"line_end":546,"column_start":34,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5142},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193536,"byte_end":17193557,"line_start":568,"line_end":568,"column_start":19,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5347},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193584,"byte_end":17193605,"line_start":570,"line_end":570,"column_start":23,"column_end":44},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5347},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17193755,"byte_end":17193763,"line_start":576,"line_end":576,"column_start":19,"column_end":27},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17196641,"byte_end":17196649,"line_start":655,"line_end":655,"column_start":30,"column_end":38},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5171},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17197325,"byte_end":17197333,"line_start":675,"line_end":675,"column_start":18,"column_end":26},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5171},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17197865,"byte_end":17197875,"line_start":693,"line_end":693,"column_start":19,"column_end":29},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17198152,"byte_end":17198162,"line_start":704,"line_end":704,"column_start":28,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5194},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17198471,"byte_end":17198481,"line_start":717,"line_end":717,"column_start":6,"column_end":16},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/pool.rs","byte_start":17200221,"byte_end":17200228,"line_start":774,"line_end":774,"column_start":9,"column_end":16},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208453,"byte_end":17208460,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/client/service.rs","byte_start":17208753,"byte_end":17208760,"line_start":42,"line_end":42,"column_start":30,"column_end":37},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5351},"to":{"krate":48,"index":13}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216941,"byte_end":17216947,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5391},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17216985,"byte_end":17216991,"line_start":61,"line_end":61,"column_start":31,"column_end":37},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5391},"to":{"krate":0,"index":5382}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/accept.rs","byte_start":17217820,"byte_end":17217830,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":7065},"to":{"krate":0,"index":5382}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17225701,"byte_end":17225709,"line_start":240,"line_end":240,"column_start":9,"column_end":17},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17225939,"byte_end":17225947,"line_start":250,"line_end":250,"column_start":19,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6001},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17226943,"byte_end":17226947,"line_start":279,"line_end":279,"column_start":6,"column_end":10},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17227701,"byte_end":17227705,"line_start":302,"line_end":302,"column_start":9,"column_end":13},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17242972,"byte_end":17242982,"line_start":735,"line_end":735,"column_start":18,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17249373,"byte_end":17249383,"line_start":905,"line_end":905,"column_start":29,"column_end":39},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6834},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17251163,"byte_end":17251173,"line_start":952,"line_end":952,"column_start":27,"column_end":37},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6834},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17251435,"byte_end":17251449,"line_start":964,"line_end":964,"column_start":18,"column_end":32},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5987},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17251944,"byte_end":17251949,"line_start":984,"line_end":984,"column_start":15,"column_end":20},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":7003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17252506,"byte_end":17252511,"line_start":1006,"line_end":1006,"column_start":26,"column_end":31},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":7003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17253789,"byte_end":17253799,"line_start":1045,"line_end":1045,"column_start":36,"column_end":46},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6941},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17254541,"byte_end":17254549,"line_start":1067,"line_end":1067,"column_start":12,"column_end":20},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17254738,"byte_end":17254746,"line_start":1074,"line_end":1074,"column_start":15,"column_end":23},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17254922,"byte_end":17254930,"line_start":1081,"line_end":1081,"column_start":26,"column_end":34},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17256086,"byte_end":17256097,"line_start":1119,"line_end":1119,"column_start":29,"column_end":40},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6784},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17257906,"byte_end":17257911,"line_start":1166,"line_end":1166,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":5626}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17258197,"byte_end":17258208,"line_start":1176,"line_end":1176,"column_start":40,"column_end":51},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6026},"to":{"krate":0,"index":5626}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17259843,"byte_end":17259853,"line_start":1224,"line_end":1224,"column_start":62,"column_end":72},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17260173,"byte_end":17260183,"line_start":1235,"line_end":1235,"column_start":43,"column_end":53},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6667},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17262875,"byte_end":17262896,"line_start":1306,"line_end":1306,"column_start":22,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/conn.rs","byte_start":17263539,"byte_end":17263560,"line_start":1324,"line_end":1324,"column_start":33,"column_end":54},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5658},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17267733,"byte_end":17267739,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17268062,"byte_end":17268068,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17269240,"byte_end":17269246,"line_start":107,"line_end":107,"column_start":16,"column_end":22},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17269593,"byte_end":17269599,"line_start":117,"line_end":117,"column_start":26,"column_end":32},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17271689,"byte_end":17271695,"line_start":175,"line_end":175,"column_start":37,"column_end":43},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6508},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17272410,"byte_end":17272416,"line_start":194,"line_end":194,"column_start":51,"column_end":57},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6508},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17272847,"byte_end":17272854,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/server.rs","byte_start":17283742,"byte_end":17283749,"line_start":515,"line_end":515,"column_start":9,"column_end":16},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17286059,"byte_end":17286071,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17291248,"byte_end":17291260,"line_start":156,"line_end":156,"column_start":17,"column_end":29},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5806},"to":{"krate":0,"index":5382}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17292184,"byte_end":17292196,"line_start":182,"line_end":182,"column_start":21,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5806},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17293089,"byte_end":17293099,"line_start":213,"line_end":213,"column_start":10,"column_end":20},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17294081,"byte_end":17294091,"line_start":245,"line_end":245,"column_start":24,"column_end":34},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6119},"to":{"krate":28,"index":227}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17294372,"byte_end":17294382,"line_start":256,"line_end":256,"column_start":25,"column_end":35},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6119},"to":{"krate":28,"index":306}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/tcp.rs","byte_start":17295703,"byte_end":17295713,"line_start":297,"line_end":297,"column_start":22,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6119},"to":{"krate":1,"index":6599}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17296773,"byte_end":17296781,"line_start":37,"line_end":37,"column_start":18,"column_end":26},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17297115,"byte_end":17297123,"line_start":50,"line_end":50,"column_start":40,"column_end":48},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6347},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.14.16/src/server/shutdown.rs","byte_start":17299068,"byte_end":17299083,"line_start":101,"line_end":101,"column_start":36,"column_end":51},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6262},"to":{"krate":0,"index":5626}}]}