{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9","program":"/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","-C","metadata=66e8ad249d3d4471","-C","extra-filename=-66e8ad249d3d4471","--out-dir","/home/carter/Documents/magma/target/rls/debug/deps","-L","dependency=/home/carter/Documents/magma/target/rls/debug/deps","--extern","bytes=/home/carter/Documents/magma/target/rls/debug/deps/libbytes-0503ea3f6654f70c.rmeta","--extern","futures_core=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_core-47d67b3da90b0dab.rmeta","--extern","futures_sink=/home/carter/Documents/magma/target/rls/debug/deps/libfutures_sink-2f51accff500bcdd.rmeta","--extern","log=/home/carter/Documents/magma/target/rls/debug/deps/liblog-c78037e96bf7a644.rmeta","--extern","pin_project_lite=/home/carter/Documents/magma/target/rls/debug/deps/libpin_project_lite-b0bfa5eb334f8d78.rmeta","--extern","tokio=/home/carter/Documents/magma/target/rls/debug/deps/libtokio-b2223b5bfd67a9c5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/carter/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/carter/Documents/magma/target/rls/debug/deps/libtokio_util-66e8ad249d3d4471.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[15911388018115882298,0]},"crate_root":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src","external_crates":[{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":20,"id":{"name":"futures_core","disambiguator":[6467786051959710749,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[8307411743786656110,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[14502373230496154198,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":23,"id":{"name":"mio","disambiguator":[2328091442476404014,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":24,"id":{"name":"log","disambiguator":[16138615073828880648,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":26,"id":{"name":"libc","disambiguator":[4939918902751890021,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[17627374544393263653,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":28,"id":{"name":"bytes","disambiguator":[3369492189907758608,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":29,"id":{"name":"serde","disambiguator":[9837994145478425761,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":30,"id":{"name":"serde_derive","disambiguator":[7617876261426685084,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[15753602501778055535,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":32,"id":{"name":"memchr","disambiguator":[5547902202154193270,0]}},{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":33,"id":{"name":"num_cpus","disambiguator":[7421392767721256841,0]}}],"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969657,"byte_end":14969667,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":562},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969706,"byte_end":14969713,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969752,"byte_end":14969759,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1761},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969921,"byte_end":14969927,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969929,"byte_end":14969940,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1720},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969988,"byte_end":14969998,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1679},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970047,"byte_end":14970058,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970120,"byte_end":14970140,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970142,"byte_end":14970167,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1270},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970216,"byte_end":14970226,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970228,"byte_end":14970243,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970308,"byte_end":14970325,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1324},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970327,"byte_end":14970349,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":512}},{"kind":"Use","ref_id":{"krate":0,"index":1356},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15065088,"byte_end":15065096,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15065127,"byte_end":15065139,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1586},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15065170,"byte_end":15065182,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15065206,"byte_end":15065219,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15065221,"byte_end":15065235,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1332}},{"kind":"Use","ref_id":{"krate":0,"index":1486},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1561},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7088,"byte_end":7098,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7145,"byte_end":7158,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7201,"byte_end":7218,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":512},{"krate":0,"index":1332},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":512},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1189}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959385,"byte_end":14959438,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959439,"byte_end":14959442,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959443,"byte_end":14959518,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959519,"byte_end":14959584,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959585,"byte_end":14959588,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959589,"byte_end":14959669,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959670,"byte_end":14959745,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959746,"byte_end":14959794,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959795,"byte_end":14959798,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959799,"byte_end":14959822,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959823,"byte_end":14959826,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959827,"byte_end":14959906,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959907,"byte_end":14959986,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14959987,"byte_end":14960058,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960059,"byte_end":14960129,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960130,"byte_end":14960208,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960209,"byte_end":14960285,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960286,"byte_end":14960319,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960320,"byte_end":14960323,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960324,"byte_end":14960404,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960405,"byte_end":14960485,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960486,"byte_end":14960536,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960537,"byte_end":14960540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960541,"byte_end":14960592,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960593,"byte_end":14960642,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960643,"byte_end":14960694,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960695,"byte_end":14960698,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960699,"byte_end":14960764,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960765,"byte_end":14960768,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960769,"byte_end":14960846,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960847,"byte_end":14960888,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960889,"byte_end":14960892,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960893,"byte_end":14960973,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14960974,"byte_end":14961053,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961054,"byte_end":14961132,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961133,"byte_end":14961212,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961213,"byte_end":14961227,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961228,"byte_end":14961231,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961232,"byte_end":14961311,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961312,"byte_end":14961391,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961392,"byte_end":14961409,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961410,"byte_end":14961413,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961414,"byte_end":14961491,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961492,"byte_end":14961571,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961572,"byte_end":14961649,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961650,"byte_end":14961720,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961721,"byte_end":14961770,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961771,"byte_end":14961774,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961775,"byte_end":14961788,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961789,"byte_end":14961821,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961822,"byte_end":14961889,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14961890,"byte_end":14962004,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962005,"byte_end":14962042,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962043,"byte_end":14962104,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962105,"byte_end":14962154,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962155,"byte_end":14962158,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962159,"byte_end":14962200,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962201,"byte_end":14962211,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962212,"byte_end":14962296,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962297,"byte_end":14962353,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962354,"byte_end":14962357,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962358,"byte_end":14962379,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962380,"byte_end":14962447,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962448,"byte_end":14962476,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962477,"byte_end":14962490,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962491,"byte_end":14962509,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962510,"byte_end":14962519,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962520,"byte_end":14962523,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962524,"byte_end":14962583,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962584,"byte_end":14962608,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962609,"byte_end":14962618,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962619,"byte_end":14962624,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962625,"byte_end":14962633,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962634,"byte_end":14962641,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962642,"byte_end":14962716,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962717,"byte_end":14962720,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962721,"byte_end":14962743,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962744,"byte_end":14962747,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962748,"byte_end":14962825,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962826,"byte_end":14962902,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962903,"byte_end":14962982,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14962983,"byte_end":14963037,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963038,"byte_end":14963041,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963042,"byte_end":14963086,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963087,"byte_end":14963094,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963095,"byte_end":14963130,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963131,"byte_end":14963162,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963163,"byte_end":14963166,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963167,"byte_end":14963196,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963197,"byte_end":14963200,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963201,"byte_end":14963240,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963241,"byte_end":14963244,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963245,"byte_end":14963283,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963284,"byte_end":14963311,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963312,"byte_end":14963348,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963349,"byte_end":14963352,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963353,"byte_end":14963371,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963372,"byte_end":14963394,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963395,"byte_end":14963425,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963426,"byte_end":14963480,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963481,"byte_end":14963511,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963512,"byte_end":14963569,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963570,"byte_end":14963602,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963603,"byte_end":14963616,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963617,"byte_end":14963620,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963621,"byte_end":14963655,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963656,"byte_end":14963700,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963701,"byte_end":14963753,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963754,"byte_end":14963821,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963822,"byte_end":14963825,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963826,"byte_end":14963900,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963901,"byte_end":14963967,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963968,"byte_end":14963997,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14963998,"byte_end":14964045,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964046,"byte_end":14964098,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964099,"byte_end":14964170,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964171,"byte_end":14964190,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964191,"byte_end":14964204,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964205,"byte_end":14964208,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964209,"byte_end":14964248,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964249,"byte_end":14964304,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964305,"byte_end":14964323,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964324,"byte_end":14964400,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964401,"byte_end":14964467,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964468,"byte_end":14964520,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964521,"byte_end":14964524,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964525,"byte_end":14964605,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964606,"byte_end":14964631,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964632,"byte_end":14964664,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964665,"byte_end":14964678,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964679,"byte_end":14964682,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964683,"byte_end":14964755,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964756,"byte_end":14964782,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964783,"byte_end":14964834,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964835,"byte_end":14964871,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964872,"byte_end":14964875,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964876,"byte_end":14964954,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964955,"byte_end":14964998,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14964999,"byte_end":14965046,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965047,"byte_end":14965083,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965084,"byte_end":14965128,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965129,"byte_end":14965185,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965186,"byte_end":14965234,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965235,"byte_end":14965257,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965258,"byte_end":14965276,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965277,"byte_end":14965290,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965291,"byte_end":14965300,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965301,"byte_end":14965306,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965307,"byte_end":14965314,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965315,"byte_end":14965318,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965319,"byte_end":14965342,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965343,"byte_end":14965346,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965347,"byte_end":14965425,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965426,"byte_end":14965499,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965500,"byte_end":14965576,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965577,"byte_end":14965657,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965658,"byte_end":14965674,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965675,"byte_end":14965678,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965679,"byte_end":14965759,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965760,"byte_end":14965839,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965840,"byte_end":14965920,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965921,"byte_end":14965993,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965994,"byte_end":14965997,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14965998,"byte_end":14966075,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966076,"byte_end":14966154,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966155,"byte_end":14966228,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966229,"byte_end":14966295,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966296,"byte_end":14966299,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966300,"byte_end":14966313,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966314,"byte_end":14966347,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966348,"byte_end":14966382,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966383,"byte_end":14966420,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966421,"byte_end":14966488,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966489,"byte_end":14966524,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966525,"byte_end":14966586,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966587,"byte_end":14966633,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966634,"byte_end":14966695,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966696,"byte_end":14966699,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966700,"byte_end":14966728,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966729,"byte_end":14966732,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966733,"byte_end":14966774,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966775,"byte_end":14966785,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966786,"byte_end":14966810,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966811,"byte_end":14966885,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966886,"byte_end":14966928,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966929,"byte_end":14966943,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14966944,"byte_end":14967001,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967002,"byte_end":14967051,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967052,"byte_end":14967066,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967067,"byte_end":14967104,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967105,"byte_end":14967156,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967157,"byte_end":14967203,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967204,"byte_end":14967234,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967235,"byte_end":14967249,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967250,"byte_end":14967259,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967260,"byte_end":14967265,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967266,"byte_end":14967273,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967274,"byte_end":14967281,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967282,"byte_end":14967357,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967358,"byte_end":14967431,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967432,"byte_end":14967474,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967475,"byte_end":14967478,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967479,"byte_end":14967501,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967502,"byte_end":14967505,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967506,"byte_end":14967583,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967584,"byte_end":14967660,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967661,"byte_end":14967737,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967738,"byte_end":14967761,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967762,"byte_end":14967765,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967766,"byte_end":14967811,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967812,"byte_end":14967819,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967820,"byte_end":14967855,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967856,"byte_end":14967880,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967881,"byte_end":14967884,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967885,"byte_end":14967914,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967915,"byte_end":14967918,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967919,"byte_end":14967958,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967959,"byte_end":14967962,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14967963,"byte_end":14968009,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968010,"byte_end":14968046,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968047,"byte_end":14968050,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968051,"byte_end":14968142,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968143,"byte_end":14968217,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968218,"byte_end":14968240,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968241,"byte_end":14968274,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968275,"byte_end":14968322,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968323,"byte_end":14968375,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968376,"byte_end":14968451,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968452,"byte_end":14968471,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968472,"byte_end":14968485,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968486,"byte_end":14968489,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968490,"byte_end":14968542,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968543,"byte_end":14968620,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968621,"byte_end":14968685,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968686,"byte_end":14968689,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968690,"byte_end":14968733,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968734,"byte_end":14968774,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968775,"byte_end":14968778,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968779,"byte_end":14968836,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968837,"byte_end":14968883,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968884,"byte_end":14968935,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968936,"byte_end":14968954,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968955,"byte_end":14968964,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968965,"byte_end":14968970,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968971,"byte_end":14968978,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968979,"byte_end":14968982,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14968983,"byte_end":14969022,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969023,"byte_end":14969064,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969065,"byte_end":14969101,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969102,"byte_end":14969134,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969135,"byte_end":14969231,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969232,"byte_end":14969283,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969284,"byte_end":14969337,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969338,"byte_end":14969381,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969382,"byte_end":14969426,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969427,"byte_end":14969475,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969476,"byte_end":14969524,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969525,"byte_end":14969571,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14969572,"byte_end":14969611,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971635,"byte_end":14971645,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970478,"byte_end":14970563,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970564,"byte_end":14970567,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970568,"byte_end":14970606,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970607,"byte_end":14970645,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970646,"byte_end":14970649,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970650,"byte_end":14970663,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970664,"byte_end":14970667,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970668,"byte_end":14970749,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970750,"byte_end":14970753,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970754,"byte_end":14970793,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970794,"byte_end":14970827,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970828,"byte_end":14970857,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970858,"byte_end":14970861,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970862,"byte_end":14970869,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970870,"byte_end":14970888,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970889,"byte_end":14970919,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970920,"byte_end":14970944,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970945,"byte_end":14970952,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970953,"byte_end":14970982,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14970983,"byte_end":14971035,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971036,"byte_end":14971039,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971040,"byte_end":14971058,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971059,"byte_end":14971076,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971077,"byte_end":14971157,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971158,"byte_end":14971192,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971193,"byte_end":14971246,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971247,"byte_end":14971258,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971259,"byte_end":14971266,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971267,"byte_end":14971272,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971273,"byte_end":14971320,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971321,"byte_end":14971374,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971375,"byte_end":14971433,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971434,"byte_end":14971513,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971514,"byte_end":14971526,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971527,"byte_end":14971534,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971535,"byte_end":14971542,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971543,"byte_end":14971546,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971747,"byte_end":14971750,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971674,"byte_end":14971735,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":562},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973751,"byte_end":14973758,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972465,"byte_end":14972500,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972501,"byte_end":14972504,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972505,"byte_end":14972574,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972575,"byte_end":14972654,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972655,"byte_end":14972727,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972728,"byte_end":14972752,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972753,"byte_end":14972756,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972757,"byte_end":14972825,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972826,"byte_end":14972903,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972904,"byte_end":14972965,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972966,"byte_end":14972969,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14972970,"byte_end":14973031,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973032,"byte_end":14973094,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973095,"byte_end":14973098,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973099,"byte_end":14973162,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973163,"byte_end":14973226,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973227,"byte_end":14973306,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973307,"byte_end":14973381,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973382,"byte_end":14973401,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973402,"byte_end":14973405,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973406,"byte_end":14973474,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973475,"byte_end":14973537,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973538,"byte_end":14973613,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973614,"byte_end":14973654,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973655,"byte_end":14973658,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973659,"byte_end":14973695,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973696,"byte_end":14973740,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973806,"byte_end":14973810,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973765,"byte_end":14973796,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":564},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974576,"byte_end":14974581,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973817,"byte_end":14973869,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973874,"byte_end":14973877,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973882,"byte_end":14973951,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14973956,"byte_end":14974026,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974031,"byte_end":14974077,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974082,"byte_end":14974085,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974090,"byte_end":14974166,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974171,"byte_end":14974246,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974251,"byte_end":14974326,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974331,"byte_end":14974371,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974376,"byte_end":14974379,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974384,"byte_end":14974458,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974463,"byte_end":14974509,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974514,"byte_end":14974517,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974522,"byte_end":14974566,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977517,"byte_end":14977523,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974605,"byte_end":14974670,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974675,"byte_end":14974678,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974683,"byte_end":14974757,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974762,"byte_end":14974834,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974839,"byte_end":14974912,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974917,"byte_end":14974960,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974965,"byte_end":14974968,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14974973,"byte_end":14975046,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975051,"byte_end":14975114,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975119,"byte_end":14975194,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975199,"byte_end":14975274,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975279,"byte_end":14975302,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975307,"byte_end":14975310,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975315,"byte_end":14975387,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975392,"byte_end":14975466,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975471,"byte_end":14975541,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975546,"byte_end":14975549,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975554,"byte_end":14975622,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975627,"byte_end":14975698,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975703,"byte_end":14975783,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975788,"byte_end":14975800,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975805,"byte_end":14975808,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975813,"byte_end":14975883,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975888,"byte_end":14975963,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14975968,"byte_end":14976005,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976010,"byte_end":14976013,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976018,"byte_end":14976054,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976059,"byte_end":14976103,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976108,"byte_end":14976111,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976116,"byte_end":14976139,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976144,"byte_end":14976147,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976152,"byte_end":14976226,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976231,"byte_end":14976305,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976310,"byte_end":14976363,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976368,"byte_end":14976371,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976376,"byte_end":14976447,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976452,"byte_end":14976522,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976527,"byte_end":14976543,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976548,"byte_end":14976551,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976556,"byte_end":14976569,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976574,"byte_end":14976592,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976597,"byte_end":14976602,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976607,"byte_end":14976633,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976638,"byte_end":14976675,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976680,"byte_end":14976685,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976690,"byte_end":14976711,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976716,"byte_end":14976721,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976726,"byte_end":14976756,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976761,"byte_end":14976775,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976780,"byte_end":14976811,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976816,"byte_end":14976849,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976854,"byte_end":14976857,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976862,"byte_end":14976955,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976960,"byte_end":14976978,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976983,"byte_end":14976986,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14976991,"byte_end":14977063,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977068,"byte_end":14977128,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977133,"byte_end":14977185,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977190,"byte_end":14977252,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977257,"byte_end":14977324,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977329,"byte_end":14977332,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977337,"byte_end":14977365,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977370,"byte_end":14977379,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977384,"byte_end":14977389,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977394,"byte_end":14977401,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977406,"byte_end":14977409,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977414,"byte_end":14977483,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977488,"byte_end":14977509,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978689,"byte_end":14978699,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977604,"byte_end":14977676,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977681,"byte_end":14977730,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977735,"byte_end":14977738,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977743,"byte_end":14977811,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977816,"byte_end":14977883,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977888,"byte_end":14977956,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14977961,"byte_end":14978037,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978042,"byte_end":14978108,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978113,"byte_end":14978116,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978121,"byte_end":14978189,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978194,"byte_end":14978269,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978274,"byte_end":14978349,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978354,"byte_end":14978426,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978431,"byte_end":14978473,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978478,"byte_end":14978481,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978486,"byte_end":14978561,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978566,"byte_end":14978644,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14978649,"byte_end":14978681,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14980307,"byte_end":14980313,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979117,"byte_end":14979197,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979202,"byte_end":14979278,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979283,"byte_end":14979286,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979291,"byte_end":14979366,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979371,"byte_end":14979441,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979446,"byte_end":14979517,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979522,"byte_end":14979594,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979599,"byte_end":14979657,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979662,"byte_end":14979665,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979670,"byte_end":14979739,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979744,"byte_end":14979819,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979824,"byte_end":14979900,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979905,"byte_end":14979927,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979932,"byte_end":14979935,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14979940,"byte_end":14980013,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14980018,"byte_end":14980091,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14980096,"byte_end":14980172,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14980177,"byte_end":14980180,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14980185,"byte_end":14980221,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14980226,"byte_end":14980258,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":14980263,"byte_end":14980299,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":579},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980647,"byte_end":14980654,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980492,"byte_end":14980564,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980565,"byte_end":14980585,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980586,"byte_end":14980589,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980590,"byte_end":14980636,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":581},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980919,"byte_end":14980924,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980667,"byte_end":14980699,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980704,"byte_end":14980707,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980712,"byte_end":14980789,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980794,"byte_end":14980850,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980855,"byte_end":14980858,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980863,"byte_end":14980909,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14981275,"byte_end":14981281,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980948,"byte_end":14980993,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14980998,"byte_end":14981001,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14981006,"byte_end":14981080,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14981085,"byte_end":14981165,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14981170,"byte_end":14981208,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14981213,"byte_end":14981216,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":14981221,"byte_end":14981267,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1761},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14994918,"byte_end":14994924,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1764}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996697,"byte_end":14996700,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995066,"byte_end":14995146,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995151,"byte_end":14995232,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995237,"byte_end":14995240,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995245,"byte_end":14995320,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995325,"byte_end":14995395,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995400,"byte_end":14995469,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995474,"byte_end":14995546,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995551,"byte_end":14995609,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995614,"byte_end":14995617,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995622,"byte_end":14995693,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995698,"byte_end":14995775,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995780,"byte_end":14995856,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995861,"byte_end":14995883,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995888,"byte_end":14995891,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995896,"byte_end":14995969,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995974,"byte_end":14996047,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996052,"byte_end":14996128,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996133,"byte_end":14996136,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996141,"byte_end":14996217,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996222,"byte_end":14996298,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996303,"byte_end":14996378,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996383,"byte_end":14996418,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996423,"byte_end":14996426,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996431,"byte_end":14996467,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996472,"byte_end":14996504,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996509,"byte_end":14996546,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996551,"byte_end":14996589,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996594,"byte_end":14996685,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998308,"byte_end":14998321,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996913,"byte_end":14996993,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14996998,"byte_end":14997079,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997084,"byte_end":14997133,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997138,"byte_end":14997141,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997146,"byte_end":14997221,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997226,"byte_end":14997296,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997301,"byte_end":14997370,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997375,"byte_end":14997447,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997452,"byte_end":14997510,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997515,"byte_end":14997518,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997523,"byte_end":14997594,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997599,"byte_end":14997676,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997681,"byte_end":14997757,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997762,"byte_end":14997784,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997789,"byte_end":14997792,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997797,"byte_end":14997870,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997875,"byte_end":14997948,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14997953,"byte_end":14998029,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998034,"byte_end":14998037,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998042,"byte_end":14998078,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998083,"byte_end":14998115,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998120,"byte_end":14998157,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998162,"byte_end":14998200,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998205,"byte_end":14998296,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000468,"byte_end":15000478,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998891,"byte_end":14998971,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998976,"byte_end":14999057,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999062,"byte_end":14999065,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999070,"byte_end":14999145,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999150,"byte_end":14999220,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999225,"byte_end":14999296,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999301,"byte_end":14999373,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999378,"byte_end":14999436,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999441,"byte_end":14999444,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999449,"byte_end":14999520,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999525,"byte_end":14999602,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999607,"byte_end":14999683,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999688,"byte_end":14999710,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999715,"byte_end":14999718,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999723,"byte_end":14999802,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999807,"byte_end":14999884,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999889,"byte_end":14999892,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999897,"byte_end":14999970,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14999975,"byte_end":15000048,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000053,"byte_end":15000129,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000134,"byte_end":15000137,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000142,"byte_end":15000178,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000183,"byte_end":15000215,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000220,"byte_end":15000258,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000263,"byte_end":15000301,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000306,"byte_end":15000360,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000365,"byte_end":15000456,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001113,"byte_end":15001120,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000830,"byte_end":15000893,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000898,"byte_end":15000911,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000916,"byte_end":15000919,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15000924,"byte_end":15000999,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001004,"byte_end":15001074,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001079,"byte_end":15001101,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001464,"byte_end":15001471,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001173,"byte_end":15001244,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001249,"byte_end":15001262,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001267,"byte_end":15001270,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001275,"byte_end":15001350,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001355,"byte_end":15001425,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001430,"byte_end":15001452,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001834,"byte_end":15001845,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001536,"byte_end":15001614,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001619,"byte_end":15001632,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001637,"byte_end":15001640,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001645,"byte_end":15001720,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001725,"byte_end":15001795,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001800,"byte_end":15001822,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002192,"byte_end":15002197,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15001941,"byte_end":15001999,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002004,"byte_end":15002017,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002022,"byte_end":15002025,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002030,"byte_end":15002104,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002109,"byte_end":15002180,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002509,"byte_end":15002518,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002250,"byte_end":15002316,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002321,"byte_end":15002334,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002339,"byte_end":15002342,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002347,"byte_end":15002421,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002426,"byte_end":15002497,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002638,"byte_end":15002649,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002583,"byte_end":15002626,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002784,"byte_end":15002799,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002721,"byte_end":15002772,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002939,"byte_end":15002951,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15002883,"byte_end":15002927,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003088,"byte_end":15003104,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003024,"byte_end":15003076,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003454,"byte_end":15003464,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003189,"byte_end":15003252,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003257,"byte_end":15003260,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003265,"byte_end":15003340,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003345,"byte_end":15003415,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003420,"byte_end":15003442,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003836,"byte_end":15003846,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003514,"byte_end":15003588,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003593,"byte_end":15003634,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003639,"byte_end":15003642,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003647,"byte_end":15003722,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003727,"byte_end":15003797,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15003802,"byte_end":15003824,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005820,"byte_end":15005831,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005505,"byte_end":15005576,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005577,"byte_end":15005649,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005650,"byte_end":15005710,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005711,"byte_end":15005714,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005715,"byte_end":15005751,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005769,"byte_end":15005808,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005917,"byte_end":15005919,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005844,"byte_end":15005908,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005951,"byte_end":15005956,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005929,"byte_end":15005942,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15006021,"byte_end":15006029,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005966,"byte_end":15006012,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1234},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15006116,"byte_end":15006125,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15006046,"byte_end":15006107,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15006358,"byte_end":15006361,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15006306,"byte_end":15006346,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1720},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007090,"byte_end":15007100,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1723}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007351,"byte_end":15007354,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007283,"byte_end":15007339,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007702,"byte_end":15007715,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007586,"byte_end":15007668,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007673,"byte_end":15007690,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008469,"byte_end":15008476,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008182,"byte_end":15008245,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008250,"byte_end":15008267,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008272,"byte_end":15008275,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008280,"byte_end":15008355,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008360,"byte_end":15008430,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008435,"byte_end":15008457,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008824,"byte_end":15008831,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008529,"byte_end":15008600,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008605,"byte_end":15008622,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008627,"byte_end":15008630,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008635,"byte_end":15008710,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008715,"byte_end":15008785,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008790,"byte_end":15008812,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009198,"byte_end":15009209,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008896,"byte_end":15008974,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008979,"byte_end":15008996,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009001,"byte_end":15009004,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009009,"byte_end":15009084,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009089,"byte_end":15009159,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009164,"byte_end":15009186,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009574,"byte_end":15009584,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009305,"byte_end":15009372,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009377,"byte_end":15009380,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009385,"byte_end":15009460,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009465,"byte_end":15009535,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009540,"byte_end":15009562,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009696,"byte_end":15009703,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009634,"byte_end":15009684,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009826,"byte_end":15009837,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009756,"byte_end":15009814,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009957,"byte_end":15009968,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15009902,"byte_end":15009945,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15010098,"byte_end":15010113,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15010035,"byte_end":15010086,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1679},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012214,"byte_end":15012225,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1682}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012432,"byte_end":15012435,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012363,"byte_end":15012420,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012993,"byte_end":15013000,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012705,"byte_end":15012768,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012773,"byte_end":15012791,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012796,"byte_end":15012799,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012804,"byte_end":15012879,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012884,"byte_end":15012954,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012959,"byte_end":15012981,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013349,"byte_end":15013356,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013053,"byte_end":15013124,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013129,"byte_end":15013147,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013152,"byte_end":15013155,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013160,"byte_end":15013235,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013240,"byte_end":15013310,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013315,"byte_end":15013337,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013724,"byte_end":15013735,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013421,"byte_end":15013499,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013504,"byte_end":15013522,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013527,"byte_end":15013530,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013535,"byte_end":15013610,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013615,"byte_end":15013685,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013690,"byte_end":15013712,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014101,"byte_end":15014111,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013831,"byte_end":15013899,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013904,"byte_end":15013907,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013912,"byte_end":15013987,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15013992,"byte_end":15014062,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014067,"byte_end":15014089,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014223,"byte_end":15014230,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014161,"byte_end":15014211,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014353,"byte_end":15014364,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014283,"byte_end":15014341,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014485,"byte_end":15014497,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014429,"byte_end":15014473,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014628,"byte_end":15014644,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014564,"byte_end":15014616,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":955},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1240},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1009},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1011},{"krate":0,"index":1018},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016171,"byte_end":15016223,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016224,"byte_end":15016227,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016228,"byte_end":15016298,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016299,"byte_end":15016357,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016358,"byte_end":15016430,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016431,"byte_end":15016501,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016502,"byte_end":15016569,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016570,"byte_end":15016573,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016574,"byte_end":15016595,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016596,"byte_end":15016599,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016600,"byte_end":15016675,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016676,"byte_end":15016747,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016748,"byte_end":15016819,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016820,"byte_end":15016890,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016891,"byte_end":15016931,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016932,"byte_end":15016935,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016936,"byte_end":15016943,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016944,"byte_end":15016987,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15016988,"byte_end":15017046,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017047,"byte_end":15017050,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017051,"byte_end":15017106,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017107,"byte_end":15017149,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017150,"byte_end":15017155,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017156,"byte_end":15017208,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017209,"byte_end":15017214,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017215,"byte_end":15017237,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017238,"byte_end":15017245,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017246,"byte_end":15017249,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017250,"byte_end":15017322,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017323,"byte_end":15017394,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017395,"byte_end":15017414,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017415,"byte_end":15017418,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017419,"byte_end":15017430,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017431,"byte_end":15017480,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017481,"byte_end":15017530,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017531,"byte_end":15017580,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017581,"byte_end":15017588,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017589,"byte_end":15017592,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017593,"byte_end":15017631,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017632,"byte_end":15017635,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017636,"byte_end":15017643,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017644,"byte_end":15017687,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017688,"byte_end":15017746,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017747,"byte_end":15017750,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017751,"byte_end":15017776,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017777,"byte_end":15017798,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017799,"byte_end":15017802,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017803,"byte_end":15017879,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017880,"byte_end":15017889,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017890,"byte_end":15017932,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017933,"byte_end":15017938,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15017939,"byte_end":15018012,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018013,"byte_end":15018060,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018061,"byte_end":15018064,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018065,"byte_end":15018102,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018103,"byte_end":15018117,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018118,"byte_end":15018123,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018124,"byte_end":15018131,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018132,"byte_end":15018135,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018136,"byte_end":15018178,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018179,"byte_end":15018182,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018183,"byte_end":15018194,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018195,"byte_end":15018234,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018235,"byte_end":15018274,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018275,"byte_end":15018314,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018315,"byte_end":15018322,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018323,"byte_end":15018326,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018327,"byte_end":15018341,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018342,"byte_end":15018345,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018346,"byte_end":15018421,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018422,"byte_end":15018495,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018496,"byte_end":15018562,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018563,"byte_end":15018632,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018633,"byte_end":15018698,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018699,"byte_end":15018702,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018703,"byte_end":15018719,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018720,"byte_end":15018723,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018724,"byte_end":15018800,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018801,"byte_end":15018842,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018843,"byte_end":15018846,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018847,"byte_end":15018854,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018855,"byte_end":15018886,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018887,"byte_end":15018937,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018938,"byte_end":15018979,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15018980,"byte_end":15019015,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019016,"byte_end":15019064,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019065,"byte_end":15019096,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019097,"byte_end":15019145,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019146,"byte_end":15019195,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019196,"byte_end":15019218,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019219,"byte_end":15019226,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019227,"byte_end":15019249,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019250,"byte_end":15019257,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019258,"byte_end":15019261,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019262,"byte_end":15019310,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019311,"byte_end":15019314,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019315,"byte_end":15019326,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019327,"byte_end":15019379,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019380,"byte_end":15019445,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019446,"byte_end":15019511,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019512,"byte_end":15019577,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019578,"byte_end":15019585,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019586,"byte_end":15019589,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019590,"byte_end":15019666,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019667,"byte_end":15019741,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019742,"byte_end":15019814,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019815,"byte_end":15019891,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019892,"byte_end":15019934,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019935,"byte_end":15019938,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019939,"byte_end":15019955,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019956,"byte_end":15019959,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15019960,"byte_end":15020035,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020036,"byte_end":15020077,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020078,"byte_end":15020081,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020082,"byte_end":15020089,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020090,"byte_end":15020121,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020122,"byte_end":15020172,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020173,"byte_end":15020214,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020215,"byte_end":15020250,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020251,"byte_end":15020299,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020300,"byte_end":15020331,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020332,"byte_end":15020380,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020381,"byte_end":15020440,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020441,"byte_end":15020463,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020464,"byte_end":15020471,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020472,"byte_end":15020494,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020495,"byte_end":15020502,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020503,"byte_end":15020506,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020507,"byte_end":15020555,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020556,"byte_end":15020559,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020560,"byte_end":15020571,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020572,"byte_end":15020621,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020622,"byte_end":15020676,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020677,"byte_end":15020731,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020732,"byte_end":15020786,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020787,"byte_end":15020794,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020795,"byte_end":15020798,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020799,"byte_end":15020872,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020873,"byte_end":15020940,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020941,"byte_end":15020944,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020945,"byte_end":15020961,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020962,"byte_end":15020965,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15020966,"byte_end":15021042,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021043,"byte_end":15021115,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021116,"byte_end":15021155,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021156,"byte_end":15021159,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021160,"byte_end":15021167,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021168,"byte_end":15021199,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021200,"byte_end":15021250,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021251,"byte_end":15021292,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021293,"byte_end":15021328,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021329,"byte_end":15021377,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021378,"byte_end":15021409,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021410,"byte_end":15021457,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021458,"byte_end":15021478,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021479,"byte_end":15021501,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021502,"byte_end":15021509,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021510,"byte_end":15021532,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021533,"byte_end":15021540,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021541,"byte_end":15021544,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021545,"byte_end":15021593,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021594,"byte_end":15021597,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021598,"byte_end":15021609,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021610,"byte_end":15021662,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021663,"byte_end":15021728,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021729,"byte_end":15021794,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021795,"byte_end":15021860,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021861,"byte_end":15021868,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021869,"byte_end":15021872,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021873,"byte_end":15021945,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15021946,"byte_end":15022021,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022022,"byte_end":15022094,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022095,"byte_end":15022171,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022172,"byte_end":15022245,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022246,"byte_end":15022249,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022250,"byte_end":15022266,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022267,"byte_end":15022270,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022271,"byte_end":15022345,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022346,"byte_end":15022413,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022414,"byte_end":15022417,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022418,"byte_end":15022425,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022426,"byte_end":15022457,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022458,"byte_end":15022508,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022509,"byte_end":15022550,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022551,"byte_end":15022586,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022587,"byte_end":15022635,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022636,"byte_end":15022667,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022668,"byte_end":15022716,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022717,"byte_end":15022737,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022738,"byte_end":15022760,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022761,"byte_end":15022768,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022769,"byte_end":15022791,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022792,"byte_end":15022799,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022800,"byte_end":15022803,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022804,"byte_end":15022852,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022853,"byte_end":15022856,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022857,"byte_end":15022868,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022869,"byte_end":15022895,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022896,"byte_end":15022941,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022942,"byte_end":15022987,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15022988,"byte_end":15023033,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023034,"byte_end":15023037,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023038,"byte_end":15023066,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023067,"byte_end":15023112,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023113,"byte_end":15023158,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023159,"byte_end":15023204,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023205,"byte_end":15023212,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023213,"byte_end":15023216,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023217,"byte_end":15023289,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023290,"byte_end":15023366,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023367,"byte_end":15023437,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023438,"byte_end":15023507,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023508,"byte_end":15023545,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023546,"byte_end":15023549,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023550,"byte_end":15023624,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023625,"byte_end":15023679,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023680,"byte_end":15023683,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023684,"byte_end":15023700,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023701,"byte_end":15023704,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023705,"byte_end":15023778,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023779,"byte_end":15023855,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023856,"byte_end":15023930,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023931,"byte_end":15023944,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023945,"byte_end":15023948,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023949,"byte_end":15023956,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023957,"byte_end":15023988,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15023989,"byte_end":15024039,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024040,"byte_end":15024081,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024082,"byte_end":15024117,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024118,"byte_end":15024167,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024168,"byte_end":15024199,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024200,"byte_end":15024248,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024249,"byte_end":15024293,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024294,"byte_end":15024316,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024317,"byte_end":15024324,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024325,"byte_end":15024347,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024348,"byte_end":15024355,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024356,"byte_end":15024359,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024360,"byte_end":15024408,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024409,"byte_end":15024412,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024413,"byte_end":15024424,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024425,"byte_end":15024451,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024452,"byte_end":15024502,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024503,"byte_end":15024553,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024554,"byte_end":15024604,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024605,"byte_end":15024608,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024609,"byte_end":15024629,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024630,"byte_end":15024660,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024661,"byte_end":15024691,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024692,"byte_end":15024722,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024723,"byte_end":15024730,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024731,"byte_end":15024734,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024735,"byte_end":15024808,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024809,"byte_end":15024884,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024885,"byte_end":15024957,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024958,"byte_end":15024996,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15024997,"byte_end":15025000,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025001,"byte_end":15025075,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025076,"byte_end":15025152,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025153,"byte_end":15025226,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025227,"byte_end":15025255,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025256,"byte_end":15025259,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025260,"byte_end":15025276,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025277,"byte_end":15025280,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025281,"byte_end":15025354,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025355,"byte_end":15025431,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025432,"byte_end":15025506,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025507,"byte_end":15025579,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025580,"byte_end":15025591,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025592,"byte_end":15025595,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025596,"byte_end":15025603,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025604,"byte_end":15025635,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025636,"byte_end":15025686,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025687,"byte_end":15025728,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025729,"byte_end":15025764,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025765,"byte_end":15025814,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025815,"byte_end":15025846,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025847,"byte_end":15025912,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025913,"byte_end":15025933,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025934,"byte_end":15025956,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025957,"byte_end":15025964,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025965,"byte_end":15025972,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025973,"byte_end":15025976,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15025977,"byte_end":15026025,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026026,"byte_end":15026029,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026030,"byte_end":15026041,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026042,"byte_end":15026068,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026069,"byte_end":15026119,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026120,"byte_end":15026170,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026171,"byte_end":15026221,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026222,"byte_end":15026225,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026226,"byte_end":15026246,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026247,"byte_end":15026277,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026278,"byte_end":15026308,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026309,"byte_end":15026339,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026340,"byte_end":15026347,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026348,"byte_end":15026351,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026352,"byte_end":15026425,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026426,"byte_end":15026500,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026501,"byte_end":15026575,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026576,"byte_end":15026649,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026650,"byte_end":15026726,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026727,"byte_end":15026760,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026761,"byte_end":15026764,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026765,"byte_end":15026781,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026782,"byte_end":15026785,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026786,"byte_end":15026860,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026861,"byte_end":15026928,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026929,"byte_end":15026932,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026933,"byte_end":15026940,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026941,"byte_end":15026972,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15026973,"byte_end":15027023,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027024,"byte_end":15027065,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027066,"byte_end":15027101,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027102,"byte_end":15027150,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027151,"byte_end":15027182,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027183,"byte_end":15027230,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027231,"byte_end":15027277,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027278,"byte_end":15027300,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027301,"byte_end":15027308,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027309,"byte_end":15027331,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027332,"byte_end":15027339,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027340,"byte_end":15027343,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027344,"byte_end":15027392,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027393,"byte_end":15027396,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027397,"byte_end":15027408,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027409,"byte_end":15027465,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027466,"byte_end":15027527,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027528,"byte_end":15027589,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027590,"byte_end":15027651,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027652,"byte_end":15027659,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027660,"byte_end":15027663,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027664,"byte_end":15027738,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027739,"byte_end":15027759,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027760,"byte_end":15027763,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027764,"byte_end":15027778,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027779,"byte_end":15027782,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027783,"byte_end":15027858,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027859,"byte_end":15027931,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15027932,"byte_end":15028000,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028001,"byte_end":15028077,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028078,"byte_end":15028119,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028120,"byte_end":15028123,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028124,"byte_end":15028194,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028195,"byte_end":15028213,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028214,"byte_end":15028217,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028218,"byte_end":15028225,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028226,"byte_end":15028258,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028259,"byte_end":15028309,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028310,"byte_end":15028354,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028355,"byte_end":15028368,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028369,"byte_end":15028404,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028405,"byte_end":15028436,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028437,"byte_end":15028460,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028461,"byte_end":15028468,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028469,"byte_end":15028491,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028492,"byte_end":15028499,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028500,"byte_end":15028503,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028504,"byte_end":15028554,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028555,"byte_end":15028558,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028559,"byte_end":15028570,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028571,"byte_end":15028604,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028605,"byte_end":15028638,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028639,"byte_end":15028672,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028673,"byte_end":15028680,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028681,"byte_end":15028684,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028685,"byte_end":15028754,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028755,"byte_end":15028792,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028793,"byte_end":15028832,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028833,"byte_end":15028878,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028879,"byte_end":15028926,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028927,"byte_end":15028957,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15028958,"byte_end":15028991,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15029553,"byte_end":15029560,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15029235,"byte_end":15029290,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15029291,"byte_end":15029294,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15029295,"byte_end":15029370,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15029371,"byte_end":15029451,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15029452,"byte_end":15029511,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030231,"byte_end":15030256,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030146,"byte_end":15030219,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030608,"byte_end":15030628,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030277,"byte_end":15030351,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030352,"byte_end":15030355,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030356,"byte_end":15030435,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030436,"byte_end":15030479,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030480,"byte_end":15030483,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030484,"byte_end":15030537,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030538,"byte_end":15030541,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030542,"byte_end":15030572,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030972,"byte_end":15030975,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030881,"byte_end":15030960,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031202,"byte_end":15031209,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031099,"byte_end":15031174,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031179,"byte_end":15031190,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031431,"byte_end":15031447,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031259,"byte_end":15031300,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031305,"byte_end":15031308,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031313,"byte_end":15031386,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031391,"byte_end":15031419,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031868,"byte_end":15031888,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031512,"byte_end":15031546,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031551,"byte_end":15031554,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031559,"byte_end":15031629,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031634,"byte_end":15031709,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031714,"byte_end":15031786,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15031791,"byte_end":15031856,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037144,"byte_end":15037147,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036602,"byte_end":15036677,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036682,"byte_end":15036693,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036698,"byte_end":15036701,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036706,"byte_end":15036720,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036725,"byte_end":15036728,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036733,"byte_end":15036740,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036745,"byte_end":15036776,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036781,"byte_end":15036829,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036834,"byte_end":15036837,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036842,"byte_end":15036883,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036888,"byte_end":15036923,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036928,"byte_end":15036959,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036964,"byte_end":15036995,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037000,"byte_end":15037029,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037034,"byte_end":15037054,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037059,"byte_end":15037081,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037086,"byte_end":15037093,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037098,"byte_end":15037120,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037125,"byte_end":15037132,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038332,"byte_end":15038342,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037811,"byte_end":15037860,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037865,"byte_end":15037868,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037873,"byte_end":15037905,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037910,"byte_end":15037913,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037918,"byte_end":15037986,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037991,"byte_end":15037994,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15037999,"byte_end":15038013,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038018,"byte_end":15038021,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038026,"byte_end":15038033,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038038,"byte_end":15038069,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038074,"byte_end":15038122,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038127,"byte_end":15038130,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038135,"byte_end":15038176,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038181,"byte_end":15038216,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038221,"byte_end":15038242,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038247,"byte_end":15038269,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038274,"byte_end":15038281,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038286,"byte_end":15038308,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038313,"byte_end":15038320,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038974,"byte_end":15038987,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038441,"byte_end":15038493,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038498,"byte_end":15038501,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038506,"byte_end":15038544,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038549,"byte_end":15038552,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038557,"byte_end":15038625,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038630,"byte_end":15038633,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038638,"byte_end":15038652,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038657,"byte_end":15038660,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038665,"byte_end":15038672,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038677,"byte_end":15038708,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038713,"byte_end":15038761,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038766,"byte_end":15038769,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038774,"byte_end":15038815,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038820,"byte_end":15038855,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038860,"byte_end":15038884,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038889,"byte_end":15038911,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038916,"byte_end":15038923,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038928,"byte_end":15038950,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15038955,"byte_end":15038962,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039620,"byte_end":15039633,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039087,"byte_end":15039139,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039144,"byte_end":15039147,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039152,"byte_end":15039190,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039195,"byte_end":15039198,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039203,"byte_end":15039271,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039276,"byte_end":15039279,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039284,"byte_end":15039298,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039303,"byte_end":15039306,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039311,"byte_end":15039318,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039323,"byte_end":15039354,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039359,"byte_end":15039407,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039412,"byte_end":15039415,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039420,"byte_end":15039461,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039466,"byte_end":15039501,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039506,"byte_end":15039530,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039535,"byte_end":15039557,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039562,"byte_end":15039569,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039574,"byte_end":15039596,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039601,"byte_end":15039608,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040714,"byte_end":15040730,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039802,"byte_end":15039831,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039836,"byte_end":15039839,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039844,"byte_end":15039916,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039921,"byte_end":15039946,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039951,"byte_end":15039954,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15039959,"byte_end":15040031,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040036,"byte_end":15040105,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040110,"byte_end":15040183,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040188,"byte_end":15040200,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040205,"byte_end":15040208,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040213,"byte_end":15040288,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040293,"byte_end":15040354,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040359,"byte_end":15040362,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040367,"byte_end":15040381,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040386,"byte_end":15040389,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040394,"byte_end":15040401,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040406,"byte_end":15040437,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040442,"byte_end":15040490,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040495,"byte_end":15040498,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040503,"byte_end":15040544,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040549,"byte_end":15040584,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040589,"byte_end":15040624,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040629,"byte_end":15040651,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040656,"byte_end":15040663,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040668,"byte_end":15040690,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040695,"byte_end":15040702,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041391,"byte_end":15041410,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040827,"byte_end":15040890,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040895,"byte_end":15040898,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040903,"byte_end":15040954,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040959,"byte_end":15040962,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15040967,"byte_end":15041035,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041040,"byte_end":15041043,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041048,"byte_end":15041062,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041067,"byte_end":15041070,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041075,"byte_end":15041082,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041087,"byte_end":15041118,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041123,"byte_end":15041171,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041176,"byte_end":15041179,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041184,"byte_end":15041225,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041230,"byte_end":15041265,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041270,"byte_end":15041301,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041306,"byte_end":15041328,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041333,"byte_end":15041340,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041345,"byte_end":15041367,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041372,"byte_end":15041379,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042069,"byte_end":15042088,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041579,"byte_end":15041645,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041650,"byte_end":15041653,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041658,"byte_end":15041713,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041718,"byte_end":15041721,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041726,"byte_end":15041740,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041745,"byte_end":15041748,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041753,"byte_end":15041760,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041765,"byte_end":15041796,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041801,"byte_end":15041849,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041854,"byte_end":15041857,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041862,"byte_end":15041903,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041908,"byte_end":15041943,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041948,"byte_end":15041979,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15041984,"byte_end":15042006,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042011,"byte_end":15042018,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042023,"byte_end":15042045,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042050,"byte_end":15042057,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042642,"byte_end":15042659,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042191,"byte_end":15042264,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042269,"byte_end":15042287,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042292,"byte_end":15042295,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042300,"byte_end":15042314,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042319,"byte_end":15042322,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042327,"byte_end":15042334,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042339,"byte_end":15042370,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042375,"byte_end":15042423,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042428,"byte_end":15042431,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042436,"byte_end":15042477,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042482,"byte_end":15042517,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042522,"byte_end":15042552,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042557,"byte_end":15042579,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042584,"byte_end":15042591,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042596,"byte_end":15042618,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042623,"byte_end":15042630,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043309,"byte_end":15043317,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042760,"byte_end":15042823,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042828,"byte_end":15042831,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042836,"byte_end":15042897,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042902,"byte_end":15042905,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042910,"byte_end":15042964,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042969,"byte_end":15042972,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042977,"byte_end":15042991,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15042996,"byte_end":15042999,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043004,"byte_end":15043011,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043016,"byte_end":15043047,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043052,"byte_end":15043100,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043105,"byte_end":15043108,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043113,"byte_end":15043154,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043159,"byte_end":15043194,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043199,"byte_end":15043219,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043224,"byte_end":15043246,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043251,"byte_end":15043258,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043263,"byte_end":15043285,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043290,"byte_end":15043297,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043837,"byte_end":15043846,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043415,"byte_end":15043478,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043483,"byte_end":15043486,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043491,"byte_end":15043505,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043510,"byte_end":15043513,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043518,"byte_end":15043525,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043530,"byte_end":15043578,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043583,"byte_end":15043604,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043609,"byte_end":15043644,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043649,"byte_end":15043680,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043685,"byte_end":15043716,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043721,"byte_end":15043750,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043755,"byte_end":15043775,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043780,"byte_end":15043801,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043806,"byte_end":15043813,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043818,"byte_end":15043825,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044502,"byte_end":15044510,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15043998,"byte_end":15044051,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044056,"byte_end":15044059,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044064,"byte_end":15044078,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044083,"byte_end":15044086,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044091,"byte_end":15044098,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044103,"byte_end":15044134,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044139,"byte_end":15044187,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044192,"byte_end":15044195,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044200,"byte_end":15044241,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044246,"byte_end":15044281,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044286,"byte_end":15044317,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044322,"byte_end":15044353,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044358,"byte_end":15044387,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044392,"byte_end":15044412,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044417,"byte_end":15044439,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044444,"byte_end":15044451,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044456,"byte_end":15044478,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044483,"byte_end":15044490,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045083,"byte_end":15045092,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044674,"byte_end":15044728,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044733,"byte_end":15044736,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044741,"byte_end":15044755,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044760,"byte_end":15044763,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044768,"byte_end":15044775,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044780,"byte_end":15044812,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044817,"byte_end":15044867,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044872,"byte_end":15044916,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044921,"byte_end":15044956,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044961,"byte_end":15044992,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15044997,"byte_end":15045020,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045025,"byte_end":15045032,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045037,"byte_end":15045059,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045064,"byte_end":15045071,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045701,"byte_end":15045711,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045253,"byte_end":15045302,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045307,"byte_end":15045310,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045315,"byte_end":15045329,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045334,"byte_end":15045337,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045342,"byte_end":15045349,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045354,"byte_end":15045399,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045404,"byte_end":15045454,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045459,"byte_end":15045515,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045520,"byte_end":15045533,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045538,"byte_end":15045573,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045578,"byte_end":15045609,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045614,"byte_end":15045638,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045643,"byte_end":15045650,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045655,"byte_end":15045677,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15045682,"byte_end":15045689,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1270},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047090,"byte_end":15047100,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15046847,"byte_end":15046934,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15046935,"byte_end":15046938,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15046939,"byte_end":15046977,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15046978,"byte_end":15047016,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048200,"byte_end":15048203,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047781,"byte_end":15047841,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047846,"byte_end":15047849,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047854,"byte_end":15047864,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047869,"byte_end":15047872,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047877,"byte_end":15047949,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047954,"byte_end":15048027,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048032,"byte_end":15048099,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048104,"byte_end":15048107,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048112,"byte_end":15048188,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049334,"byte_end":15049353,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048361,"byte_end":15048421,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048426,"byte_end":15048429,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048434,"byte_end":15048497,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048502,"byte_end":15048580,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048585,"byte_end":15048652,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048657,"byte_end":15048729,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048734,"byte_end":15048804,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048809,"byte_end":15048832,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048837,"byte_end":15048840,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048845,"byte_end":15048855,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048860,"byte_end":15048863,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048868,"byte_end":15048943,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15048948,"byte_end":15049021,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049026,"byte_end":15049102,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049107,"byte_end":15049180,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049185,"byte_end":15049255,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049260,"byte_end":15049263,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049268,"byte_end":15049322,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049919,"byte_end":15049929,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049481,"byte_end":15049531,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049536,"byte_end":15049539,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049544,"byte_end":15049551,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049556,"byte_end":15049575,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049580,"byte_end":15049618,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049623,"byte_end":15049626,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049631,"byte_end":15049665,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049670,"byte_end":15049717,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049722,"byte_end":15049729,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049734,"byte_end":15049741,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049746,"byte_end":15049784,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049789,"byte_end":15049792,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049797,"byte_end":15049850,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049855,"byte_end":15049895,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15049900,"byte_end":15049907,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1293},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054255,"byte_end":15054276,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054209,"byte_end":15054250,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054312,"byte_end":15054314,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054282,"byte_end":15054307,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1292},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054187,"byte_end":15054202,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1295}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054104,"byte_end":15054160,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1300},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15056236,"byte_end":15056253,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055050,"byte_end":15055191,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055192,"byte_end":15055195,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055196,"byte_end":15055234,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055235,"byte_end":15055273,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055274,"byte_end":15055277,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055278,"byte_end":15055291,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055292,"byte_end":15055359,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055360,"byte_end":15055363,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055364,"byte_end":15055397,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055398,"byte_end":15055427,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055428,"byte_end":15055431,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055432,"byte_end":15055439,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055440,"byte_end":15055496,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055497,"byte_end":15055531,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055532,"byte_end":15055535,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055536,"byte_end":15055541,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055542,"byte_end":15055589,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055590,"byte_end":15055643,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055644,"byte_end":15055721,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055722,"byte_end":15055757,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055758,"byte_end":15055779,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055780,"byte_end":15055830,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055831,"byte_end":15055894,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055895,"byte_end":15055958,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15055959,"byte_end":15056022,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15056023,"byte_end":15056079,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15056080,"byte_end":15056129,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15056130,"byte_end":15056142,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15056143,"byte_end":15056150,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15056151,"byte_end":15056158,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15056159,"byte_end":15056162,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057588,"byte_end":15057591,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057146,"byte_end":15057214,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057219,"byte_end":15057222,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057227,"byte_end":15057237,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057242,"byte_end":15057245,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057250,"byte_end":15057329,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057334,"byte_end":15057408,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057413,"byte_end":15057480,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057485,"byte_end":15057488,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057493,"byte_end":15057576,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058902,"byte_end":15058921,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057871,"byte_end":15057939,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057944,"byte_end":15057947,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057952,"byte_end":15058022,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058027,"byte_end":15058113,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058118,"byte_end":15058188,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058193,"byte_end":15058270,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058275,"byte_end":15058345,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058350,"byte_end":15058373,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058378,"byte_end":15058381,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058386,"byte_end":15058396,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058401,"byte_end":15058404,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058409,"byte_end":15058491,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058496,"byte_end":15058569,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058574,"byte_end":15058651,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058656,"byte_end":15058729,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058734,"byte_end":15058809,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058814,"byte_end":15058817,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15058822,"byte_end":15058890,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059709,"byte_end":15059719,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059178,"byte_end":15059229,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059234,"byte_end":15059237,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059242,"byte_end":15059249,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059254,"byte_end":15059273,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059278,"byte_end":15059323,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059328,"byte_end":15059331,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059336,"byte_end":15059408,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059413,"byte_end":15059460,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059465,"byte_end":15059472,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059477,"byte_end":15059484,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059489,"byte_end":15059534,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059539,"byte_end":15059542,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059547,"byte_end":15059640,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059645,"byte_end":15059685,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059690,"byte_end":15059697,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063815,"byte_end":15063837,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063768,"byte_end":15063810,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063873,"byte_end":15063875,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063843,"byte_end":15063868,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1324},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063739,"byte_end":15063761,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1327}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063655,"byte_end":15063712,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1332},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1374},{"krate":0,"index":1413},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1483}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":6093,"byte_end":6115,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064444,"byte_end":15064477,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064478,"byte_end":15064481,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064482,"byte_end":15064563,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064564,"byte_end":15064628,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064629,"byte_end":15064632,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064633,"byte_end":15064699,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064700,"byte_end":15064774,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064775,"byte_end":15064818,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064819,"byte_end":15064822,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064823,"byte_end":15064886,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/mod.rs","byte_start":15064887,"byte_end":15064926,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1356},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066297,"byte_end":15066305,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065374,"byte_end":15065452,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065453,"byte_end":15065456,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065457,"byte_end":15065486,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065487,"byte_end":15065490,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065491,"byte_end":15065504,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065505,"byte_end":15065508,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065509,"byte_end":15065516,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065517,"byte_end":15065550,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065551,"byte_end":15065582,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065583,"byte_end":15065609,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065610,"byte_end":15065659,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065660,"byte_end":15065680,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065681,"byte_end":15065727,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065728,"byte_end":15065731,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065732,"byte_end":15065810,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065811,"byte_end":15065824,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065825,"byte_end":15065929,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065930,"byte_end":15065933,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065934,"byte_end":15065968,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065969,"byte_end":15065991,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065992,"byte_end":15065995,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15065996,"byte_end":15066006,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066007,"byte_end":15066026,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066027,"byte_end":15066080,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066081,"byte_end":15066084,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066085,"byte_end":15066104,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066105,"byte_end":15066123,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066124,"byte_end":15066133,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066134,"byte_end":15066139,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066140,"byte_end":15066143,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066144,"byte_end":15066188,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066189,"byte_end":15066213,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066214,"byte_end":15066254,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066255,"byte_end":15066267,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066268,"byte_end":15066275,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066276,"byte_end":15066283,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068191,"byte_end":15068203,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068712,"byte_end":15068715,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068505,"byte_end":15068566,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068571,"byte_end":15068607,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068612,"byte_end":15068615,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068620,"byte_end":15068659,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068664,"byte_end":15068700,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15069150,"byte_end":15069163,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"pub fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068889,"byte_end":15068950,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068955,"byte_end":15068991,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068996,"byte_end":15069045,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15069050,"byte_end":15069053,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15069058,"byte_end":15069097,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15069102,"byte_end":15069138,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1586},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072171,"byte_end":15072183,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072800,"byte_end":15072803,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072382,"byte_end":15072462,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072467,"byte_end":15072470,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072475,"byte_end":15072551,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072556,"byte_end":15072627,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072632,"byte_end":15072677,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072682,"byte_end":15072685,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072690,"byte_end":15072725,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072730,"byte_end":15072753,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072758,"byte_end":15072788,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073319,"byte_end":15073326,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073182,"byte_end":15073228,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073233,"byte_end":15073236,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073241,"byte_end":15073307,"line_start":99,"line_end":99,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073518,"byte_end":15073525,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073373,"byte_end":15073427,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073432,"byte_end":15073435,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073440,"byte_end":15073506,"line_start":106,"line_end":106,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073736,"byte_end":15073747,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073584,"byte_end":15073645,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073650,"byte_end":15073653,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073658,"byte_end":15073724,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073978,"byte_end":15073988,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073827,"byte_end":15073890,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073895,"byte_end":15073898,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073903,"byte_end":15073966,"line_start":120,"line_end":120,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40807,"byte_end":40816,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1487}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40630,"byte_end":40694,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40695,"byte_end":40778,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41079,"byte_end":41085,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40892,"byte_end":40966,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40971,"byte_end":41041,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41046,"byte_end":41067,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8905,"byte_end":8922,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7687,"byte_end":7764,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7765,"byte_end":7775,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7776,"byte_end":7779,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7780,"byte_end":7845,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7846,"byte_end":7920,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7921,"byte_end":7924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7925,"byte_end":8008,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8009,"byte_end":8012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8013,"byte_end":8027,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8028,"byte_end":8031,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8032,"byte_end":8045,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8068,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8069,"byte_end":8109,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8113,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8114,"byte_end":8132,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8133,"byte_end":8154,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8200,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8201,"byte_end":8242,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8243,"byte_end":8246,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8247,"byte_end":8298,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8299,"byte_end":8362,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8363,"byte_end":8384,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8434,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8435,"byte_end":8481,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8482,"byte_end":8503,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8521,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8522,"byte_end":8603,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8604,"byte_end":8626,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8644,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8645,"byte_end":8658,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8659,"byte_end":8670,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8674,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8675,"byte_end":8708,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8709,"byte_end":8784,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8785,"byte_end":8812,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8813,"byte_end":8824,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8825,"byte_end":8828,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8829,"byte_end":8879,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8880,"byte_end":8885,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8886,"byte_end":8893,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9342,"byte_end":9367,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9189,"byte_end":9263,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9264,"byte_end":9281,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9282,"byte_end":9330,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11875,"byte_end":11878,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11800,"byte_end":11863,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12668,"byte_end":12739,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12744,"byte_end":12777,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12785,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12790,"byte_end":12861,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12866,"byte_end":12898,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12903,"byte_end":12906,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12911,"byte_end":12925,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12930,"byte_end":12933,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12938,"byte_end":12951,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12956,"byte_end":12978,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12983,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71395,"byte_end":71405,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71257,"byte_end":71314,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71315,"byte_end":71318,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71319,"byte_end":71366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72128,"byte_end":72131,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72086,"byte_end":72116,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72846,"byte_end":72856,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72334,"byte_end":72363,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72368,"byte_end":72371,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72376,"byte_end":72452,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72457,"byte_end":72526,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72531,"byte_end":72549,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72554,"byte_end":72557,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72562,"byte_end":72633,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72638,"byte_end":72711,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72716,"byte_end":72790,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72795,"byte_end":72834,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74377,"byte_end":74391,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73280,"byte_end":73361,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73366,"byte_end":73412,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73417,"byte_end":73420,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73425,"byte_end":73473,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73478,"byte_end":73481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73486,"byte_end":73570,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73575,"byte_end":73634,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73639,"byte_end":73724,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73729,"byte_end":73748,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73753,"byte_end":73832,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73837,"byte_end":73840,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73845,"byte_end":73920,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73925,"byte_end":74001,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74006,"byte_end":74061,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74066,"byte_end":74140,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74145,"byte_end":74218,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74223,"byte_end":74257,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74262,"byte_end":74265,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74270,"byte_end":74346,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74351,"byte_end":74365,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75025,"byte_end":75033,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74777,"byte_end":74842,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74847,"byte_end":74850,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74855,"byte_end":74928,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74933,"byte_end":74943,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74948,"byte_end":74951,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74956,"byte_end":75013,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75145,"byte_end":75154,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75087,"byte_end":75133,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75495,"byte_end":75506,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75296,"byte_end":75330,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75335,"byte_end":75338,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75343,"byte_end":75416,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75421,"byte_end":75483,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75811,"byte_end":75820,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75611,"byte_end":75646,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75651,"byte_end":75654,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75659,"byte_end":75732,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75737,"byte_end":75799,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76520,"byte_end":76537,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75971,"byte_end":76040,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76045,"byte_end":76048,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76053,"byte_end":76123,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76128,"byte_end":76201,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76206,"byte_end":76252,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76257,"byte_end":76260,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76265,"byte_end":76340,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76345,"byte_end":76419,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76424,"byte_end":76450,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76455,"byte_end":76458,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76463,"byte_end":76508,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76703,"byte_end":76713,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76590,"byte_end":76637,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76642,"byte_end":76645,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76650,"byte_end":76691,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79225,"byte_end":79238,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79094,"byte_end":79167,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79168,"byte_end":79171,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79172,"byte_end":79213,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79432,"byte_end":79435,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79387,"byte_end":79420,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79599,"byte_end":79604,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79562,"byte_end":79587,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79710,"byte_end":79721,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79656,"byte_end":79698,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79846,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79791,"byte_end":79824,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80580,"byte_end":80592,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79907,"byte_end":79955,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79960,"byte_end":79963,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79968,"byte_end":80009,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80014,"byte_end":80017,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80022,"byte_end":80084,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80089,"byte_end":80149,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80154,"byte_end":80214,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80219,"byte_end":80222,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80227,"byte_end":80302,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80307,"byte_end":80375,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80380,"byte_end":80456,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80461,"byte_end":80529,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80534,"byte_end":80568,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82020,"byte_end":82037,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81736,"byte_end":81788,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81793,"byte_end":81796,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81801,"byte_end":81877,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81882,"byte_end":81916,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81921,"byte_end":81924,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81929,"byte_end":82008,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82497,"byte_end":82508,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82110,"byte_end":82152,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82238,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82243,"byte_end":82283,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82288,"byte_end":82291,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82296,"byte_end":82366,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82371,"byte_end":82405,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82410,"byte_end":82413,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82418,"byte_end":82485,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83651,"byte_end":83668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83451,"byte_end":83508,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83509,"byte_end":83512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83513,"byte_end":83580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83581,"byte_end":83639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83846,"byte_end":83849,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83763,"byte_end":83834,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84430,"byte_end":84433,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84215,"byte_end":84267,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84272,"byte_end":84275,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84280,"byte_end":84352,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84357,"byte_end":84418,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84876,"byte_end":84883,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84635,"byte_end":84687,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84692,"byte_end":84695,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84700,"byte_end":84773,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84778,"byte_end":84848,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84853,"byte_end":84864,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86723,"byte_end":86730,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86659,"byte_end":86711,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87016,"byte_end":87020,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86961,"byte_end":87004,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1569},{"krate":0,"index":1578},{"krate":0,"index":1582},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88133,"byte_end":88168,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1572},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90115,"byte_end":90119,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90128,"byte_end":90133,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1569},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90096,"byte_end":90102,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1575}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88345,"byte_end":88451,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88452,"byte_end":88455,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88456,"byte_end":88546,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88547,"byte_end":88550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88551,"byte_end":88586,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88587,"byte_end":88590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88591,"byte_end":88604,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88605,"byte_end":88608,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88609,"byte_end":88646,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88647,"byte_end":88650,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88651,"byte_end":88670,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88671,"byte_end":88713,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88714,"byte_end":88764,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88765,"byte_end":88816,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88817,"byte_end":88835,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88836,"byte_end":88857,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88858,"byte_end":88900,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88901,"byte_end":88934,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88935,"byte_end":88951,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88952,"byte_end":89046,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89047,"byte_end":89057,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89058,"byte_end":89061,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89062,"byte_end":89109,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89110,"byte_end":89115,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89116,"byte_end":89123,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89124,"byte_end":89127,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89328,"byte_end":89331,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89332,"byte_end":89418,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89419,"byte_end":89429,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89430,"byte_end":89433,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89434,"byte_end":89441,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89442,"byte_end":89477,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89478,"byte_end":89520,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89521,"byte_end":89571,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89572,"byte_end":89623,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89624,"byte_end":89627,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89628,"byte_end":89646,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89647,"byte_end":89668,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89669,"byte_end":89711,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89712,"byte_end":89759,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89760,"byte_end":89776,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89777,"byte_end":89826,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89827,"byte_end":89837,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89838,"byte_end":89841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89842,"byte_end":89875,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89876,"byte_end":89916,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89917,"byte_end":89949,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89950,"byte_end":89955,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89956,"byte_end":89963,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89964,"byte_end":89986,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2442,"byte_end":2455,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\n                     B: BufMut>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1213,"byte_end":1298,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1303,"byte_end":1306,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1311,"byte_end":1337,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1342,"byte_end":1345,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1350,"byte_end":1363,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1368,"byte_end":1371,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1376,"byte_end":1383,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1388,"byte_end":1421,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1426,"byte_end":1457,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1462,"byte_end":1488,"line_start":76,"line_end":76,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1493,"byte_end":1547,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1552,"byte_end":1585,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1590,"byte_end":1612,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1617,"byte_end":1637,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1642,"byte_end":1688,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1693,"byte_end":1696,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1701,"byte_end":1779,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1784,"byte_end":1797,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1802,"byte_end":1906,"line_start":85,"line_end":85,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1911,"byte_end":1914,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1919,"byte_end":1953,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1958,"byte_end":1980,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":1993,"byte_end":2003,"line_start":90,"line_end":90,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2008,"byte_end":2027,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2032,"byte_end":2118,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2123,"byte_end":2126,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2131,"byte_end":2150,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2155,"byte_end":2173,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2178,"byte_end":2187,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2192,"byte_end":2197,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2202,"byte_end":2205,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2210,"byte_end":2254,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2259,"byte_end":2283,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2288,"byte_end":2328,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2333,"byte_end":2345,"line_start":102,"line_end":102,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2350,"byte_end":2357,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":2362,"byte_end":2369,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4743,"byte_end":4757,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\n                      B: Buf>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3371,"byte_end":3439,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3444,"byte_end":3503,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3508,"byte_end":3511,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3516,"byte_end":3593,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3598,"byte_end":3618,"line_start":140,"line_end":140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3623,"byte_end":3626,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3631,"byte_end":3645,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3650,"byte_end":3653,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3658,"byte_end":3729,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3734,"byte_end":3746,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3751,"byte_end":3754,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3759,"byte_end":3772,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3777,"byte_end":3816,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3821,"byte_end":3839,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3844,"byte_end":3868,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3873,"byte_end":3876,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3881,"byte_end":3900,"line_start":152,"line_end":152,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3905,"byte_end":3929,"line_start":153,"line_end":153,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3934,"byte_end":3956,"line_start":154,"line_end":154,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3961,"byte_end":3994,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":3999,"byte_end":4002,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4007,"byte_end":4025,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4030,"byte_end":4069,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4074,"byte_end":4128,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4133,"byte_end":4185,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4190,"byte_end":4193,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4198,"byte_end":4268,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4273,"byte_end":4293,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4298,"byte_end":4333,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4338,"byte_end":4421,"line_start":165,"line_end":165,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4426,"byte_end":4435,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4440,"byte_end":4443,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4448,"byte_end":4462,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4467,"byte_end":4472,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4477,"byte_end":4484,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4489,"byte_end":4492,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4497,"byte_end":4520,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4525,"byte_end":4566,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4571,"byte_end":4600,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":4605,"byte_end":4670,"line_start":175,"line_end":175,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971657,"byte_end":14971667,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971818,"byte_end":14971828,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14972155,"byte_end":14972165,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14982395,"byte_end":14982404,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14982636,"byte_end":14982646,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14982797,"byte_end":14982806,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983161,"byte_end":14983171,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983417,"byte_end":14983425,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983522,"byte_end":14983530,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983641,"byte_end":14983649,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983749,"byte_end":14983757,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983867,"byte_end":14983877,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14992164,"byte_end":14992174,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995010,"byte_end":14995016,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998872,"byte_end":14998878,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15004193,"byte_end":15004199,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15004515,"byte_end":15004521,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005236,"byte_end":15005242,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15006282,"byte_end":15006293,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007220,"byte_end":15007230,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008159,"byte_end":15008169,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15010266,"byte_end":15010276,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15010589,"byte_end":15010599,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15011325,"byte_end":15011335,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012314,"byte_end":15012325,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012681,"byte_end":15012692,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014801,"byte_end":15014812,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15015576,"byte_end":15015587,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15015828,"byte_end":15015839,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030854,"byte_end":15030874,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15034208,"byte_end":15034228,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15035114,"byte_end":15035134,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036475,"byte_end":15036495,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036588,"byte_end":15036595,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046194,"byte_end":15046201,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046327,"byte_end":15046352,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046510,"byte_end":15046535,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046670,"byte_end":15046695,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047764,"byte_end":15047774,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15050316,"byte_end":15050326,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15053702,"byte_end":15053712,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054035,"byte_end":15054045,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054352,"byte_end":15054367,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054649,"byte_end":15054664,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054781,"byte_end":15054796,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057122,"byte_end":15057139,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059788,"byte_end":15059805,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063097,"byte_end":15063114,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063478,"byte_end":15063495,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063913,"byte_end":15063935,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15064264,"byte_end":15064286,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15064417,"byte_end":15064439,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066534,"byte_end":15066543,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068483,"byte_end":15068495,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15069382,"byte_end":15069394,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072274,"byte_end":15072286,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073157,"byte_end":15073169,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15074058,"byte_end":15074070,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15074831,"byte_end":15074843,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":512}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":14970069,"byte_end":14970085,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":955}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":807,"byte_end":809,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1332}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971657,"byte_end":14971667,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14971818,"byte_end":14971828,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":14972155,"byte_end":14972165,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1192},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14982395,"byte_end":14982404,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14982636,"byte_end":14982646,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":640},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14982797,"byte_end":14982806,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983161,"byte_end":14983171,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":640},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983417,"byte_end":14983425,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983522,"byte_end":14983530,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2606}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983641,"byte_end":14983649,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983749,"byte_end":14983757,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2606}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14983867,"byte_end":14983877,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1802},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":14992164,"byte_end":14992174,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1802},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14995010,"byte_end":14995016,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":14998872,"byte_end":14998878,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15004193,"byte_end":15004199,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1761},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15004515,"byte_end":15004521,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1761},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15005236,"byte_end":15005242,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1761},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15006282,"byte_end":15006293,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15007220,"byte_end":15007230,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15008159,"byte_end":15008169,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15010266,"byte_end":15010276,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1720},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15010589,"byte_end":15010599,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1720},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15011325,"byte_end":15011335,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1720},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012314,"byte_end":15012325,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15012681,"byte_end":15012692,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15014801,"byte_end":15014812,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1679},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15015576,"byte_end":15015587,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1679},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15015828,"byte_end":15015839,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1679},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15030854,"byte_end":15030874,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15034208,"byte_end":15034228,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1252},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15035114,"byte_end":15035134,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1252},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036475,"byte_end":15036495,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15036588,"byte_end":15036595,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046194,"byte_end":15046201,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046327,"byte_end":15046352,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046510,"byte_end":15046535,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15046670,"byte_end":15046695,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1009},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15047764,"byte_end":15047774,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15050316,"byte_end":15050326,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1270},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15053702,"byte_end":15053712,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1270},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054035,"byte_end":15054045,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1270},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054352,"byte_end":15054367,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054649,"byte_end":15054664,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15054781,"byte_end":15054796,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1292},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15057122,"byte_end":15057139,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15059788,"byte_end":15059805,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063097,"byte_end":15063114,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":579}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063478,"byte_end":15063495,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15063913,"byte_end":15063935,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15064264,"byte_end":15064286,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15064417,"byte_end":15064439,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1324},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/read_buf.rs","byte_start":15066534,"byte_end":15066543,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15068483,"byte_end":15068495,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/reader_stream.rs","byte_start":15069382,"byte_end":15069394,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1635},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15072274,"byte_end":15072286,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15073157,"byte_end":15073169,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15074058,"byte_end":15074070,"line_start":126,"line_end":126,"column_start":29,"column_end":41},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1586},"to":{"krate":22,"index":227}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/io/stream_reader.rs","byte_start":15074831,"byte_end":15074843,"line_start":154,"line_end":154,"column_start":32,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1586},"to":{"krate":22,"index":185}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1486},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1561},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":301},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":227}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":185}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":266}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1569},"to":{"krate":22,"index":306}},{"span":{"file_name":"/home/carter/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1569},"to":{"krate":20,"index":96}}]}